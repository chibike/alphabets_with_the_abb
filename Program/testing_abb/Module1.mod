MODULE Module1
    ! Define Global Constants
	CONST robtarget Home_position:=[[297,210,180],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Bottom_Left:=[[0,420,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Top_Left:=[[297,420,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Top_Right:=[[297,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Bottom_Right:=[[0,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_10_Appoach:=[[84,162,13.48],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_10:=[[84,162,-36.52],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_20:=[[96.5,140.349364905,-36.52],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_30:=[[121.5,140.349364905,-36.52],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_40:=[[134,162,-36.52],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_50:=[[129.425575437,176.415126364,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_60:=[[117.376330553,185.554980078,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_70:=[[95.190280659,186.713087817,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_80:=[[85.203125494,191.997936789,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_90:=[[78.001116337,189.142522487,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_100:=[[75,182,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_110:=[[79.573343373,173.600512048,-36.52],[0,-0.707106781,0.707106781,0],[0,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_120:=[[83.780815333,167.881241697,-36.52],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_130:=[[84.104776248,164.286445783,-36.52],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	CONST robtarget Target_130_Depart:=[[84.104776248,164.286445783,13.48],[0,-0.707106781,0.707106781,0],[-1,0,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !***********************************************************
    !
    ! Module:  Module1
    !
    ! Disclaimer:
    !    This module was written as part of my submission for Middlesex University's
    !    2017-2018 Mobile Robots and Manipulators module.
    !    
    !    Note that this script in intended for GOOD and not for EVIL.
    !    Please do not use in any negative context, at least not without prior consent from
    !    the author of this script.
    !
    ! Author:
    !    Chibuike Okpaluba <co607@live.mdx.ac.uk> M00543047
    !
    ! Module Tutor:
    !    Dr Aleksander Zivanovic <a.zivanovic@mdx.ac.uk>
    !
    ! Description:
    !   This module contains all the necessary procedures and functions required to
    !
    !   1. Draw manually defined characters on a given worksurface using a preselected tool.
    !   2. Draw selected artworks on a given worksurface using a preselected tool.
    !   3. Draw the vector artwork on a given worksurface using a preselected tool.
    !   4. Automatically generate artworks for users that select the special option.
    !
    !   -- THE ENTRY POINT FOR THIS MODULE IS MAIN --
    !
    ! Version:
    !   v1.0
    !
    ! Questions and Answers:
    !   For more information please email the author of the module
    !
    !
    ! Thank you.
    !
    !***********************************************************
    
    
    !***********************************************************
    !
    ! Procedure main
    !   This the entry point of this module.
    !
    !   This procedure executes other procedures based on user inputs
    !***********************************************************
    PROC Main()
        ! Define Function Variables
        VAR num font_size := 0.5;
        VAR string answer := "Blink";
        
        ! GO Home and Wait 10 seconds
        GotoHome;
        !WaitTime 10;
        
        ! Get Data from the user
        TPReadFK reg1, "Select Drawing?", "Initials", "Artwork", "Vector", "Your String", "Special";
        
        ! Execute based on user data
        IF reg1 = 1 THEN
            TPWrite "Drawing initials: ''C.O''";
            DrawIntials font_size;
            
        ELSEIF reg1 = 2 THEN
            TPWrite "Drawing Artwork";
            DrawArtwork v100, v50, 100, 25, -10, 50;
        
        ELSEIF reg1 = 3 THEN
            TPWrite "Drawing Vector Art";
            VectorArt;
        
        ELSEIF reg1 = 4 THEN
            ! Get Text from the user
            answer := UIAlphaEntry(\Header:="Blink UI",
                \Message:="Enter your text?"
                \Icon:=iconInfo
                \InitString:="Your Text");
            
            ! Get font size from the user
            TPReadNum reg1, "Enter your font_size";
            
            ! Draw the users string
            DrawString answer, reg1, v80, v50, 10, 10, -10, 50;
        
        ELSEIF reg1 = 5 THEN
            ! Start special art
            MakeArtwork;
            
        ELSE
            TPWrite "Invalid selection";
            
        ENDIF
        
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure GotoHome
    !   This Procedure moves the arm to the GLOBAL defined home position
    !
    ! Example
    !   GotoHome
    !
    !***********************************************************
    PROC GotoHome()
        ! Move arm joints to home position
        MoveJ Offs(Home_position, 0, 0, 20),v1000,z100,tool0\WObj:=WorkSurface;
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure DrawIntials
    !   This procedure draws the intials on the work surface
    !
    ! Example
    !   VAR num font_size := 1.0;
    !   DrawIntials font_size;
    !
    !***********************************************************
    PROC DrawIntials(num font_size)
        DrawString "#Chib!", font_size, v100, v50, 5, 5, -10, 50;
        DrawString "#Chib!", font_size, v100, v50, 5, 65, -10, 50;
        DrawString "#Chib!", font_size, v100, v50, 5, 125, -10, 50;
        DrawString "#Chib!", font_size, v100, v50, 5, 185, -10, 50;
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure MakeArtwork
    !   This procedure creates an artwork for the user based on the users string input
    !
    ! Example
    !   MakeArtwork;
    !
    !***********************************************************
    PROC MakeArtwork()
        VAR num page_width := 290;
        VAR num x_padding := 55;
        VAR num y_padding := 50;
        VAR string input_string := "";
        VAR num font_size := 0;
        
        VAR num z_offset := -10;
        VAR num penup_offset := 50;
        
        VAR num art_option;
        
        ! Get User's text
        input_string := UIAlphaEntry(\Header:="Blink UI",
                \Message:="Enter your text?"
                \Icon:=iconInfo
                \InitString:="#YourText");
        
        ! Drawing border art
        DrawArtWork_ArtBorder 0.45, v100, v50, 0, 0, z_offset, penup_offset;
        
        ! Calculate ideal font size
        font_size := get_ideal_font_size(input_string, page_width, x_padding);
        
        y_padding := 200 - (font_size * 50);
        DrawString input_string, font_size, v100, v50, x_padding, y_padding, z_offset, penup_offset;
        
        ! Get art option from the user
        TPReadFK reg1, "Select Art Option?", "House", stEmpty, stEmpty, stEmpty, "Glasses";
        art_option := reg1;
        
        IF art_option = 5 THEN
            y_padding := y_padding + (50 * font_size) + 5;
            x_padding := 96;
            DrawArtWork_Glasses 0.47, v100, v50, x_padding, y_padding, z_offset, penup_offset;
        ELSEIF art_option = 1 THEN
            y_padding := y_padding + (50 * font_size) + 5;
            x_padding := 106;
            DrawArtWork_House 0.38, v100, v50, x_padding, y_padding, z_offset, penup_offset;
        ENDIF
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure DrawArtwork
    !   This procedure draws my artwork on the work surface
    !
    ! Example
    !   VAR speeddata approach_speed := v100;  // Approach speed for arm
    !   VAR speeddata write_speed := v80;      // Write speed for arm
    !   VAR num x_offset := 0;                 // x offset from worksurface origin
    !   VAR num y_offset := 0;                 // y offset from worksurface origin
    !   VAR num z_offset := 0;                 // z offset from worksurface origin
    !   VAR num pen_offset := 30;              // Defines pen position for pen up
    !
    !   DrawArtwork approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
    !
    !***********************************************************
    PROC DrawArtwork(speeddata approach_speed, speeddata write_speed, num x_offset, num y_offset, num z_offset, num penup_offset)
        ! Define all points for artwork
        VAR pos pos0{17} := [[153.29999999999998, 151.89999999999998, 0],[152.6, 152.6, 0],[152.6, 154.0, 0],[153.29999999999998, 154.7, 0],[153.29999999999998, 155.39999999999998, 0],[155.39999999999998, 157.5, 0],[158.2, 157.5, 0],[160.29999999999998, 155.39999999999998, 0],[160.29999999999998, 154.7, 0],[161.0, 154.0, 0],[161.0, 152.6, 0],[160.29999999999998, 151.89999999999998, 0],[160.29999999999998, 151.2, 0],[158.89999999999998, 149.79999999999998, 0],[154.7, 149.79999999999998, 0],[153.29999999999998, 151.2, 0],[153.29999999999998, 151.89999999999998, 0]];
        VAR pos pos1{10} := [[154.7, 152.6, 0],[155.39999999999998, 151.89999999999998, 0],[156.79999999999998, 151.89999999999998, 0],[157.5, 152.6, 0],[157.5, 154.0, 0],[156.79999999999998, 154.0, 0],[156.1, 154.7, 0],[155.39999999999998, 154.0, 0],[154.7, 154.0, 0],[154.7, 152.6, 0]];
        VAR pos pos2{17} := [[153.29999999999998, 109.19999999999999, 0],[152.6, 109.89999999999999, 0],[152.6, 111.3, 0],[153.29999999999998, 112.0, 0],[153.29999999999998, 112.69999999999999, 0],[155.39999999999998, 114.8, 0],[158.2, 114.8, 0],[160.29999999999998, 112.69999999999999, 0],[160.29999999999998, 112.0, 0],[161.0, 111.3, 0],[161.0, 109.89999999999999, 0],[160.29999999999998, 109.19999999999999, 0],[160.29999999999998, 108.5, 0],[158.89999999999998, 107.1, 0],[154.7, 107.1, 0],[153.29999999999998, 108.5, 0],[153.29999999999998, 109.19999999999999, 0]];
        VAR pos pos3{10} := [[154.7, 109.89999999999999, 0],[155.39999999999998, 109.19999999999999, 0],[156.79999999999998, 109.19999999999999, 0],[157.5, 109.89999999999999, 0],[157.5, 111.3, 0],[156.79999999999998, 111.3, 0],[156.1, 112.0, 0],[155.39999999999998, 111.3, 0],[154.7, 111.3, 0],[154.7, 109.89999999999999, 0]];
        VAR pos pos4{19} := [[153.29999999999998, 82.6, 0],[152.6, 83.3, 0],[152.6, 84.69999999999999, 0],[153.29999999999998, 85.39999999999999, 0],[153.29999999999998, 86.1, 0],[155.39999999999998, 88.19999999999999, 0],[158.2, 88.19999999999999, 0],[160.29999999999998, 86.1, 0],[160.29999999999998, 85.39999999999999, 0],[161.0, 84.69999999999999, 0],[161.0, 83.3, 0],[160.29999999999998, 82.6, 0],[160.29999999999998, 81.89999999999999, 0],[159.6, 81.19999999999999, 0],[158.89999999999998, 81.19999999999999, 0],[158.2, 80.5, 0],[154.7, 80.5, 0],[153.29999999999998, 81.89999999999999, 0],[153.29999999999998, 82.6, 0]];
        VAR pos pos5{10} := [[154.7, 83.3, 0],[155.39999999999998, 82.6, 0],[156.79999999999998, 82.6, 0],[157.5, 83.3, 0],[157.5, 84.69999999999999, 0],[156.79999999999998, 84.69999999999999, 0],[156.1, 85.39999999999999, 0],[155.39999999999998, 84.69999999999999, 0],[154.7, 84.69999999999999, 0],[154.7, 83.3, 0]];
        VAR pos pos6{57} := [[126.69999999999999, 172.89999999999998, 0],[125.99999999999999, 173.6, 0],[125.99999999999999, 177.79999999999998, 0],[126.69999999999999, 178.5, 0],[126.69999999999999, 180.6, 0],[127.39999999999999, 181.29999999999998, 0],[127.39999999999999, 182.0, 0],[132.29999999999998, 186.89999999999998, 0],[133.0, 186.89999999999998, 0],[134.39999999999998, 188.29999999999998, 0],[135.79999999999998, 188.29999999999998, 0],[136.5, 189.0, 0],[137.2, 189.0, 0],[137.89999999999998, 189.7, 0],[147.7, 189.7, 0],[148.39999999999998, 189.0, 0],[149.79999999999998, 189.0, 0],[150.5, 188.29999999999998, 0],[151.2, 188.29999999999998, 0],[151.89999999999998, 187.6, 0],[152.6, 187.6, 0],[153.29999999999998, 186.89999999999998, 0],[154.0, 186.89999999999998, 0],[158.89999999999998, 182.0, 0],[158.89999999999998, 181.29999999999998, 0],[159.6, 180.6, 0],[159.6, 178.5, 0],[160.29999999999998, 177.79999999999998, 0],[160.29999999999998, 173.6, 0],[159.6, 172.89999999999998, 0],[159.6, 171.5, 0],[158.89999999999998, 170.79999999999998, 0],[158.89999999999998, 170.1, 0],[158.2, 169.39999999999998, 0],[158.2, 168.7, 0],[154.7, 165.2, 0],[154.0, 165.2, 0],[152.6, 163.79999999999998, 0],[151.89999999999998, 163.79999999999998, 0],[151.2, 163.1, 0],[149.79999999999998, 163.1, 0],[149.1, 162.39999999999998, 0],[147.0, 162.39999999999998, 0],[146.29999999999998, 161.7, 0],[139.29999999999998, 161.7, 0],[138.6, 162.39999999999998, 0],[136.5, 162.39999999999998, 0],[135.79999999999998, 163.1, 0],[135.1, 163.1, 0],[134.39999999999998, 163.79999999999998, 0],[133.7, 163.79999999999998, 0],[133.0, 164.5, 0],[132.29999999999998, 164.5, 0],[127.39999999999999, 169.39999999999998, 0],[127.39999999999999, 170.1, 0],[126.69999999999999, 170.79999999999998, 0],[126.69999999999999, 172.89999999999998, 0]];
        VAR pos pos7{96} := [[133.7, 176.39999999999998, 0],[135.1, 176.39999999999998, 0],[135.79999999999998, 177.1, 0],[137.89999999999998, 177.1, 0],[138.6, 176.39999999999998, 0],[138.6, 175.7, 0],[137.89999999999998, 175.0, 0],[137.2, 175.0, 0],[136.5, 174.29999999999998, 0],[135.1, 174.29999999999998, 0],[134.39999999999998, 173.6, 0],[134.39999999999998, 172.89999999999998, 0],[135.79999999999998, 171.5, 0],[135.79999999999998, 170.79999999999998, 0],[136.5, 170.1, 0],[137.2, 170.1, 0],[137.89999999999998, 169.39999999999998, 0],[138.6, 169.39999999999998, 0],[141.39999999999998, 172.2, 0],[142.1, 172.2, 0],[143.5, 170.79999999999998, 0],[140.7, 168.0, 0],[141.39999999999998, 168.0, 0],[142.1, 167.29999999999998, 0],[146.29999999999998, 167.29999999999998, 0],[146.29999999999998, 170.1, 0],[147.0, 170.79999999999998, 0],[147.7, 170.79999999999998, 0],[148.39999999999998, 170.1, 0],[148.39999999999998, 167.29999999999998, 0],[149.79999999999998, 167.29999999999998, 0],[150.5, 168.0, 0],[151.89999999999998, 168.0, 0],[151.89999999999998, 168.7, 0],[149.79999999999998, 170.79999999999998, 0],[149.79999999999998, 171.5, 0],[150.5, 172.2, 0],[151.2, 172.2, 0],[154.0, 169.39999999999998, 0],[156.1, 171.5, 0],[156.1, 172.2, 0],[156.79999999999998, 172.89999999999998, 0],[156.1, 172.89999999999998, 0],[155.39999999999998, 173.6, 0],[153.29999999999998, 173.6, 0],[152.6, 174.29999999999998, 0],[154.0, 175.7, 0],[157.5, 175.7, 0],[157.5, 176.39999999999998, 0],[156.79999999999998, 177.1, 0],[156.79999999999998, 178.5, 0],[156.1, 179.2, 0],[156.1, 179.89999999999998, 0],[155.39999999999998, 179.89999999999998, 0],[154.7, 179.2, 0],[154.0, 179.2, 0],[153.29999999999998, 178.5, 0],[152.6, 178.5, 0],[151.89999999999998, 177.79999999999998, 0],[151.2, 177.79999999999998, 0],[149.79999999999998, 179.2, 0],[151.2, 180.6, 0],[151.89999999999998, 180.6, 0],[152.6, 181.29999999999998, 0],[153.29999999999998, 181.29999999999998, 0],[154.0, 182.0, 0],[153.29999999999998, 182.0, 0],[151.89999999999998, 183.39999999999998, 0],[150.5, 183.39999999999998, 0],[147.7, 180.6, 0],[146.29999999999998, 182.0, 0],[147.7, 183.39999999999998, 0],[147.7, 184.79999999999998, 0],[143.5, 184.79999999999998, 0],[143.5, 182.0, 0],[142.79999999999998, 181.29999999999998, 0],[141.39999999999998, 182.7, 0],[141.39999999999998, 184.79999999999998, 0],[140.7, 184.1, 0],[139.29999999999998, 184.1, 0],[138.6, 183.39999999999998, 0],[137.89999999999998, 183.39999999999998, 0],[137.89999999999998, 182.7, 0],[140.0, 180.6, 0],[140.0, 179.89999999999998, 0],[139.29999999999998, 179.2, 0],[138.6, 179.2, 0],[137.89999999999998, 179.89999999999998, 0],[137.2, 179.89999999999998, 0],[135.79999999999998, 181.29999999999998, 0],[135.1, 181.29999999999998, 0],[135.1, 180.6, 0],[134.39999999999998, 179.89999999999998, 0],[134.39999999999998, 179.2, 0],[133.7, 178.5, 0],[133.7, 176.39999999999998, 0]];
        VAR pos pos8{35} := [[125.99999999999999, 96.6, 0],[125.99999999999999, 97.3, 0],[126.69999999999999, 98.0, 0],[126.69999999999999, 102.89999999999999, 0],[128.1, 104.3, 0],[129.5, 104.3, 0],[130.2, 103.6, 0],[132.29999999999998, 103.6, 0],[133.0, 102.89999999999999, 0],[135.1, 102.89999999999999, 0],[135.79999999999998, 102.19999999999999, 0],[137.89999999999998, 102.19999999999999, 0],[138.6, 101.5, 0],[141.39999999999998, 101.5, 0],[142.1, 100.8, 0],[144.89999999999998, 100.8, 0],[145.6, 100.1, 0],[149.79999999999998, 100.1, 0],[150.5, 99.39999999999999, 0],[158.89999999999998, 99.39999999999999, 0],[159.6, 98.69999999999999, 0],[159.6, 96.6, 0],[160.29999999999998, 95.89999999999999, 0],[160.29999999999998, 94.5, 0],[159.6, 93.8, 0],[154.0, 93.8, 0],[153.29999999999998, 93.1, 0],[149.1, 93.1, 0],[148.39999999999998, 93.8, 0],[137.89999999999998, 93.8, 0],[137.2, 94.5, 0],[132.29999999999998, 94.5, 0],[131.6, 95.19999999999999, 0],[127.39999999999999, 95.19999999999999, 0],[125.99999999999999, 96.6, 0]];
        VAR pos pos9{23} := [[132.29999999999998, 100.1, 0],[133.0, 99.39999999999999, 0],[133.7, 99.39999999999999, 0],[134.39999999999998, 98.69999999999999, 0],[135.1, 98.69999999999999, 0],[135.79999999999998, 98.0, 0],[137.2, 98.0, 0],[137.89999999999998, 97.3, 0],[139.29999999999998, 97.3, 0],[140.0, 96.6, 0],[142.1, 96.6, 0],[142.79999999999998, 97.3, 0],[141.39999999999998, 97.3, 0],[140.7, 98.0, 0],[138.6, 98.0, 0],[137.89999999999998, 98.69999999999999, 0],[136.5, 98.69999999999999, 0],[135.79999999999998, 99.39999999999999, 0],[135.1, 99.39999999999999, 0],[134.39999999999998, 100.1, 0],[133.0, 100.1, 0],[132.29999999999998, 100.8, 0],[132.29999999999998, 100.1, 0]];
        VAR pos pos10{23} := [[125.99999999999999, 40.599999999999994, 0],[127.39999999999999, 42.0, 0],[128.1, 42.0, 0],[129.5, 40.599999999999994, 0],[130.9, 40.599999999999994, 0],[130.9, 41.3, 0],[133.0, 43.4, 0],[134.39999999999998, 43.4, 0],[135.1, 42.699999999999996, 0],[135.79999999999998, 42.699999999999996, 0],[136.5, 42.0, 0],[136.5, 41.3, 0],[137.2, 40.599999999999994, 0],[137.2, 39.199999999999996, 0],[136.5, 38.5, 0],[136.5, 37.8, 0],[135.1, 36.4, 0],[131.6, 36.4, 0],[130.9, 37.099999999999994, 0],[130.2, 37.099999999999994, 0],[128.79999999999998, 38.5, 0],[128.1, 38.5, 0],[125.99999999999999, 40.599999999999994, 0]];
        VAR pos pos11{9} := [[132.29999999999998, 39.9, 0],[133.0, 39.199999999999996, 0],[134.39999999999998, 39.199999999999996, 0],[135.1, 39.9, 0],[135.1, 40.599999999999994, 0],[134.39999999999998, 41.3, 0],[133.0, 41.3, 0],[132.29999999999998, 40.599999999999994, 0],[132.29999999999998, 39.9, 0]];
        VAR pos pos12{42} := [[125.99999999999999, 205.79999999999998, 0],[125.3, 206.5, 0],[125.3, 207.2, 0],[125.99999999999999, 207.89999999999998, 0],[125.99999999999999, 208.6, 0],[126.69999999999999, 209.29999999999998, 0],[126.69999999999999, 211.39999999999998, 0],[127.39999999999999, 212.1, 0],[128.79999999999998, 210.7, 0],[130.2, 210.7, 0],[130.2, 211.39999999999998, 0],[130.9, 212.1, 0],[131.6, 212.1, 0],[132.29999999999998, 211.39999999999998, 0],[132.29999999999998, 210.0, 0],[133.0, 210.0, 0],[133.7, 209.29999999999998, 0],[135.1, 209.29999999999998, 0],[135.79999999999998, 210.0, 0],[137.2, 208.6, 0],[136.5, 207.89999999999998, 0],[136.5, 207.2, 0],[137.2, 206.5, 0],[135.79999999999998, 205.1, 0],[134.39999999999998, 206.5, 0],[133.7, 206.5, 0],[133.0, 207.2, 0],[132.29999999999998, 207.2, 0],[132.29999999999998, 206.5, 0],[131.6, 205.79999999999998, 0],[133.0, 204.39999999999998, 0],[132.29999999999998, 203.7, 0],[131.6, 203.7, 0],[130.9, 204.39999999999998, 0],[129.5, 204.39999999999998, 0],[128.1, 203.0, 0],[127.39999999999999, 203.0, 0],[126.69999999999999, 203.7, 0],[127.39999999999999, 204.39999999999998, 0],[127.39999999999999, 205.1, 0],[126.69999999999999, 205.79999999999998, 0],[125.99999999999999, 205.79999999999998, 0]];
        VAR pos pos13{22} := [[125.3, 197.39999999999998, 0],[125.3, 199.5, 0],[125.99999999999999, 200.2, 0],[125.99999999999999, 200.89999999999998, 0],[126.69999999999999, 201.6, 0],[127.39999999999999, 201.6, 0],[128.1, 202.29999999999998, 0],[130.2, 202.29999999999998, 0],[130.9, 201.6, 0],[131.6, 201.6, 0],[132.29999999999998, 200.89999999999998, 0],[133.0, 200.89999999999998, 0],[136.5, 197.39999999999998, 0],[135.1, 196.0, 0],[134.39999999999998, 196.7, 0],[133.7, 196.7, 0],[132.29999999999998, 198.1, 0],[131.6, 198.1, 0],[131.6, 196.7, 0],[130.2, 195.29999999999998, 0],[127.39999999999999, 195.29999999999998, 0],[125.3, 197.39999999999998, 0]];
        VAR pos pos14{9} := [[127.39999999999999, 198.1, 0],[128.1, 197.39999999999998, 0],[129.5, 197.39999999999998, 0],[130.2, 198.1, 0],[130.2, 198.79999999999998, 0],[129.5, 199.5, 0],[128.1, 199.5, 0],[127.39999999999999, 198.79999999999998, 0],[127.39999999999999, 198.1, 0]];
        VAR pos pos15{55} := [[125.99999999999999, 128.1, 0],[125.3, 128.79999999999998, 0],[125.3, 135.79999999999998, 0],[125.99999999999999, 136.5, 0],[125.99999999999999, 138.6, 0],[126.69999999999999, 139.29999999999998, 0],[126.69999999999999, 140.7, 0],[130.9, 144.89999999999998, 0],[132.29999999999998, 144.89999999999998, 0],[133.0, 145.6, 0],[138.6, 145.6, 0],[139.29999999999998, 144.89999999999998, 0],[140.0, 144.89999999999998, 0],[140.7, 144.2, 0],[141.39999999999998, 144.2, 0],[144.89999999999998, 140.7, 0],[144.89999999999998, 139.29999999999998, 0],[145.6, 138.6, 0],[145.6, 135.1, 0],[144.89999999999998, 134.39999999999998, 0],[144.89999999999998, 133.0, 0],[142.1, 130.2, 0],[141.39999999999998, 130.2, 0],[146.29999999999998, 130.2, 0],[147.0, 129.5, 0],[156.79999999999998, 129.5, 0],[157.5, 128.79999999999998, 0],[160.29999999999998, 128.79999999999998, 0],[161.0, 128.1, 0],[161.0, 125.99999999999999, 0],[161.7, 125.3, 0],[161.0, 124.6, 0],[160.29999999999998, 124.6, 0],[159.6, 123.89999999999999, 0],[144.2, 123.89999999999999, 0],[144.2, 121.1, 0],[143.5, 120.39999999999999, 0],[141.39999999999998, 120.39999999999999, 0],[140.7, 121.1, 0],[140.7, 121.8, 0],[140.0, 122.49999999999999, 0],[140.0, 123.89999999999999, 0],[137.2, 123.89999999999999, 0],[137.2, 121.1, 0],[136.5, 120.39999999999999, 0],[133.7, 120.39999999999999, 0],[133.0, 121.1, 0],[133.0, 123.89999999999999, 0],[132.29999999999998, 123.19999999999999, 0],[130.2, 123.19999999999999, 0],[130.2, 120.39999999999999, 0],[129.5, 119.69999999999999, 0],[126.69999999999999, 119.69999999999999, 0],[125.99999999999999, 120.39999999999999, 0],[125.99999999999999, 128.1, 0]];
        VAR pos pos16{42} := [[129.5, 130.9, 0],[134.39999999999998, 130.9, 0],[133.7, 130.9, 0],[132.29999999999998, 132.29999999999998, 0],[132.29999999999998, 133.7, 0],[131.6, 134.39999999999998, 0],[131.6, 136.5, 0],[132.29999999999998, 137.2, 0],[132.29999999999998, 137.89999999999998, 0],[133.7, 139.29999999999998, 0],[134.39999999999998, 139.29999999999998, 0],[135.1, 140.0, 0],[137.2, 140.0, 0],[139.29999999999998, 137.89999999999998, 0],[139.29999999999998, 135.79999999999998, 0],[137.89999999999998, 134.39999999999998, 0],[137.2, 135.1, 0],[137.2, 136.5, 0],[135.79999999999998, 136.5, 0],[135.79999999999998, 134.39999999999998, 0],[136.5, 133.7, 0],[137.2, 133.7, 0],[137.89999999999998, 133.0, 0],[139.29999999999998, 133.0, 0],[140.0, 133.7, 0],[140.7, 133.7, 0],[142.1, 135.1, 0],[142.1, 137.89999999999998, 0],[141.39999999999998, 138.6, 0],[141.39999999999998, 139.29999999999998, 0],[140.7, 140.0, 0],[140.0, 140.0, 0],[139.29999999999998, 140.7, 0],[133.7, 140.7, 0],[133.0, 140.0, 0],[132.29999999999998, 140.0, 0],[130.9, 138.6, 0],[130.9, 137.89999999999998, 0],[130.2, 137.2, 0],[130.2, 136.5, 0],[129.5, 135.79999999999998, 0],[129.5, 130.9, 0]];
        VAR pos pos17{41} := [[125.99999999999999, 28.7, 0],[125.3, 29.4, 0],[125.99999999999999, 30.099999999999998, 0],[125.99999999999999, 30.799999999999997, 0],[125.3, 31.499999999999996, 0],[126.69999999999999, 32.9, 0],[127.39999999999999, 32.199999999999996, 0],[128.1, 32.199999999999996, 0],[128.79999999999998, 31.499999999999996, 0],[130.2, 31.499999999999996, 0],[130.2, 32.9, 0],[129.5, 33.599999999999994, 0],[130.9, 35.0, 0],[131.6, 34.3, 0],[133.7, 34.3, 0],[133.7, 35.0, 0],[134.39999999999998, 35.699999999999996, 0],[135.79999999999998, 34.3, 0],[135.1, 33.599999999999994, 0],[135.79999999999998, 32.9, 0],[135.79999999999998, 32.199999999999996, 0],[136.5, 32.199999999999996, 0],[137.2, 31.499999999999996, 0],[137.2, 30.799999999999997, 0],[135.79999999999998, 29.4, 0],[135.79999999999998, 27.299999999999997, 0],[135.1, 26.599999999999998, 0],[134.39999999999998, 26.599999999999998, 0],[133.7, 27.299999999999997, 0],[133.7, 28.0, 0],[132.29999999999998, 28.0, 0],[132.29999999999998, 27.299999999999997, 0],[131.6, 26.599999999999998, 0],[130.9, 26.599999999999998, 0],[130.2, 27.299999999999997, 0],[130.2, 28.0, 0],[129.5, 28.7, 0],[128.79999999999998, 28.7, 0],[128.1, 29.4, 0],[127.39999999999999, 28.7, 0],[125.99999999999999, 28.7, 0]];
        VAR pos pos18{137} := [[125.3, 59.49999999999999, 0],[124.6, 60.199999999999996, 0],[124.6, 61.599999999999994, 0],[125.3, 62.3, 0],[125.99999999999999, 62.3, 0],[125.99999999999999, 67.19999999999999, 0],[125.3, 67.19999999999999, 0],[124.6, 67.89999999999999, 0],[124.6, 69.3, 0],[125.3, 70.0, 0],[125.99999999999999, 69.3, 0],[127.39999999999999, 69.3, 0],[129.5, 71.39999999999999, 0],[129.5, 72.8, 0],[128.79999999999998, 73.5, 0],[129.5, 74.19999999999999, 0],[130.9, 74.19999999999999, 0],[132.29999999999998, 72.8, 0],[133.0, 72.8, 0],[133.7, 73.5, 0],[134.39999999999998, 73.5, 0],[135.1, 72.8, 0],[135.1, 71.39999999999999, 0],[131.6, 67.89999999999999, 0],[131.6, 67.19999999999999, 0],[130.9, 66.5, 0],[130.9, 61.599999999999994, 0],[131.6, 60.9, 0],[131.6, 60.199999999999996, 0],[133.0, 58.8, 0],[133.0, 58.099999999999994, 0],[133.7, 57.4, 0],[134.39999999999998, 57.4, 0],[135.79999999999998, 56.0, 0],[137.2, 56.0, 0],[137.89999999999998, 55.3, 0],[144.2, 55.3, 0],[144.89999999999998, 56.0, 0],[146.29999999999998, 56.0, 0],[149.79999999999998, 59.49999999999999, 0],[149.79999999999998, 60.199999999999996, 0],[150.5, 60.9, 0],[150.5, 62.3, 0],[151.2, 62.99999999999999, 0],[151.2, 65.1, 0],[150.5, 65.8, 0],[150.5, 67.19999999999999, 0],[147.7, 70.0, 0],[145.6, 70.0, 0],[144.2, 71.39999999999999, 0],[144.2, 72.8, 0],[144.89999999999998, 73.5, 0],[146.29999999999998, 73.5, 0],[147.0, 74.19999999999999, 0],[147.0, 74.89999999999999, 0],[147.7, 75.6, 0],[148.39999999999998, 74.89999999999999, 0],[148.39999999999998, 74.19999999999999, 0],[149.1, 73.5, 0],[151.89999999999998, 73.5, 0],[151.89999999999998, 74.19999999999999, 0],[152.6, 74.89999999999999, 0],[153.29999999999998, 74.89999999999999, 0],[154.0, 74.19999999999999, 0],[154.0, 72.1, 0],[156.79999999999998, 69.3, 0],[157.5, 70.0, 0],[158.89999999999998, 70.0, 0],[159.6, 69.3, 0],[159.6, 68.6, 0],[158.2, 67.19999999999999, 0],[157.5, 67.19999999999999, 0],[157.5, 66.5, 0],[158.2, 65.8, 0],[158.2, 62.3, 0],[160.29999999999998, 62.3, 0],[161.0, 61.599999999999994, 0],[161.0, 60.9, 0],[159.6, 59.49999999999999, 0],[158.89999999999998, 60.199999999999996, 0],[157.5, 60.199999999999996, 0],[157.5, 58.8, 0],[156.79999999999998, 58.099999999999994, 0],[156.79999999999998, 57.4, 0],[157.5, 57.4, 0],[158.89999999999998, 56.0, 0],[158.89999999999998, 55.3, 0],[158.2, 54.599999999999994, 0],[156.79999999999998, 54.599999999999994, 0],[156.1, 55.3, 0],[155.39999999999998, 55.3, 0],[152.6, 52.5, 0],[153.29999999999998, 51.8, 0],[153.29999999999998, 51.099999999999994, 0],[154.0, 50.4, 0],[152.6, 49.0, 0],[151.2, 50.4, 0],[151.2, 51.099999999999994, 0],[149.1, 51.099999999999994, 0],[148.39999999999998, 50.4, 0],[146.29999999999998, 50.4, 0],[145.6, 49.699999999999996, 0],[144.2, 49.699999999999996, 0],[144.2, 47.599999999999994, 0],[143.5, 46.9, 0],[142.79999999999998, 46.9, 0],[142.1, 47.599999999999994, 0],[142.1, 49.699999999999996, 0],[141.39999999999998, 49.699999999999996, 0],[140.7, 50.4, 0],[137.89999999999998, 50.4, 0],[137.2, 51.099999999999994, 0],[135.79999999999998, 51.099999999999994, 0],[135.1, 50.4, 0],[135.1, 49.699999999999996, 0],[134.39999999999998, 49.0, 0],[133.7, 49.0, 0],[132.29999999999998, 50.4, 0],[133.0, 51.099999999999994, 0],[133.0, 51.8, 0],[133.7, 52.5, 0],[133.0, 53.199999999999996, 0],[132.29999999999998, 53.199999999999996, 0],[130.9, 54.599999999999994, 0],[130.2, 53.9, 0],[129.5, 53.9, 0],[128.79999999999998, 53.199999999999996, 0],[128.1, 53.199999999999996, 0],[127.39999999999999, 53.9, 0],[127.39999999999999, 54.599999999999994, 0],[128.79999999999998, 56.0, 0],[128.79999999999998, 56.699999999999996, 0],[128.1, 57.4, 0],[128.1, 58.099999999999994, 0],[127.39999999999999, 58.8, 0],[127.39999999999999, 59.49999999999999, 0],[125.3, 59.49999999999999, 0]];
        VAR pos pos19{363} := [[0.7, 96.6, 0],[0.0, 97.3, 0],[0.0, 99.39999999999999, 0],[0.7, 100.1, 0],[1.4, 100.1, 0],[2.0999999999999996, 100.8, 0],[2.8, 100.8, 0],[3.5, 100.1, 0],[4.199999999999999, 100.1, 0],[4.8999999999999995, 100.8, 0],[0.7, 100.8, 0],[0.0, 101.5, 0],[0.0, 105.69999999999999, 0],[0.7, 106.39999999999999, 0],[4.199999999999999, 106.39999999999999, 0],[4.199999999999999, 107.1, 0],[0.7, 107.1, 0],[0.0, 107.8, 0],[0.0, 109.89999999999999, 0],[0.7, 110.6, 0],[4.8999999999999995, 110.6, 0],[4.8999999999999995, 111.3, 0],[0.7, 111.3, 0],[0.0, 112.0, 0],[0.0, 115.49999999999999, 0],[0.7, 116.19999999999999, 0],[1.4, 116.19999999999999, 0],[2.0999999999999996, 116.89999999999999, 0],[2.8, 116.19999999999999, 0],[3.5, 116.19999999999999, 0],[4.199999999999999, 116.89999999999999, 0],[4.8999999999999995, 116.89999999999999, 0],[0.7, 116.89999999999999, 0],[0.0, 117.6, 0],[0.0, 120.39999999999999, 0],[0.7, 121.1, 0],[4.8999999999999995, 121.1, 0],[4.199999999999999, 121.8, 0],[4.8999999999999995, 122.49999999999999, 0],[4.199999999999999, 123.19999999999999, 0],[3.5, 123.19999999999999, 0],[2.8, 122.49999999999999, 0],[2.0999999999999996, 122.49999999999999, 0],[1.4, 123.19999999999999, 0],[0.7, 123.19999999999999, 0],[0.0, 123.89999999999999, 0],[0.0, 124.6, 0],[0.7, 125.3, 0],[4.199999999999999, 125.3, 0],[4.8999999999999995, 125.99999999999999, 0],[4.8999999999999995, 126.69999999999999, 0],[4.199999999999999, 127.39999999999999, 0],[0.7, 127.39999999999999, 0],[0.0, 128.1, 0],[0.0, 130.2, 0],[0.7, 130.9, 0],[4.199999999999999, 130.9, 0],[4.199999999999999, 131.6, 0],[0.7, 131.6, 0],[0.0, 132.29999999999998, 0],[0.0, 134.39999999999998, 0],[0.7, 135.1, 0],[1.4, 135.1, 0],[2.0999999999999996, 135.79999999999998, 0],[2.8, 135.1, 0],[3.5, 135.1, 0],[4.8999999999999995, 136.5, 0],[4.8999999999999995, 137.2, 0],[4.199999999999999, 137.2, 0],[3.5, 137.89999999999998, 0],[2.8, 137.2, 0],[2.0999999999999996, 137.2, 0],[1.4, 137.89999999999998, 0],[0.7, 137.89999999999998, 0],[0.0, 138.6, 0],[0.0, 140.7, 0],[0.7, 141.39999999999998, 0],[16.099999999999998, 141.39999999999998, 0],[18.9, 144.2, 0],[18.9, 144.89999999999998, 0],[21.0, 147.0, 0],[44.8, 147.0, 0],[44.8, 147.7, 0],[44.099999999999994, 148.39999999999998, 0],[44.099999999999994, 149.1, 0],[44.8, 149.79999999999998, 0],[51.099999999999994, 149.79999999999998, 0],[51.099999999999994, 150.5, 0],[47.599999999999994, 150.5, 0],[46.9, 151.2, 0],[46.9, 154.0, 0],[47.599999999999994, 154.7, 0],[48.3, 154.0, 0],[49.0, 154.7, 0],[49.699999999999996, 154.0, 0],[51.099999999999994, 154.0, 0],[51.099999999999994, 156.1, 0],[49.699999999999996, 156.1, 0],[49.0, 156.79999999999998, 0],[48.3, 156.1, 0],[47.599999999999994, 156.1, 0],[46.9, 156.79999999999998, 0],[46.9, 158.2, 0],[47.599999999999994, 158.89999999999998, 0],[51.099999999999994, 158.89999999999998, 0],[51.099999999999994, 161.0, 0],[18.2, 161.0, 0],[17.5, 161.7, 0],[17.5, 163.79999999999998, 0],[18.2, 164.5, 0],[21.7, 164.5, 0],[21.7, 166.6, 0],[18.2, 166.6, 0],[17.5, 167.29999999999998, 0],[17.5, 170.79999999999998, 0],[18.9, 172.2, 0],[19.599999999999998, 172.2, 0],[20.299999999999997, 172.89999999999998, 0],[19.599999999999998, 173.6, 0],[18.9, 173.6, 0],[17.5, 175.0, 0],[17.5, 177.1, 0],[18.2, 177.79999999999998, 0],[21.7, 177.79999999999998, 0],[21.7, 178.5, 0],[22.4, 179.2, 0],[21.7, 179.89999999999998, 0],[18.2, 179.89999999999998, 0],[17.5, 180.6, 0],[17.5, 184.1, 0],[18.2, 184.79999999999998, 0],[51.099999999999994, 184.79999999999998, 0],[51.099999999999994, 185.5, 0],[47.599999999999994, 185.5, 0],[46.9, 186.2, 0],[46.9, 187.6, 0],[47.599999999999994, 188.29999999999998, 0],[50.4, 188.29999999999998, 0],[51.099999999999994, 187.6, 0],[51.099999999999994, 189.7, 0],[50.4, 189.7, 0],[49.699999999999996, 190.39999999999998, 0],[49.0, 190.39999999999998, 0],[48.3, 189.7, 0],[46.9, 191.1, 0],[46.9, 193.2, 0],[47.599999999999994, 193.89999999999998, 0],[51.099999999999994, 193.89999999999998, 0],[51.099999999999994, 194.6, 0],[18.2, 194.6, 0],[17.5, 195.29999999999998, 0],[17.5, 197.39999999999998, 0],[18.2, 198.1, 0],[22.4, 198.1, 0],[21.7, 198.79999999999998, 0],[21.7, 200.2, 0],[18.2, 200.2, 0],[17.5, 200.89999999999998, 0],[17.5, 204.39999999999998, 0],[18.9, 205.79999999999998, 0],[22.4, 205.79999999999998, 0],[21.7, 206.5, 0],[22.4, 207.2, 0],[21.7, 207.2, 0],[21.0, 207.89999999999998, 0],[18.2, 207.89999999999998, 0],[17.5, 208.6, 0],[17.5, 210.7, 0],[18.2, 211.39999999999998, 0],[21.7, 211.39999999999998, 0],[21.7, 212.1, 0],[22.4, 212.79999999999998, 0],[21.7, 213.5, 0],[18.2, 213.5, 0],[17.5, 214.2, 0],[17.5, 217.7, 0],[18.2, 218.39999999999998, 0],[51.099999999999994, 218.39999999999998, 0],[51.099999999999994, 219.1, 0],[47.599999999999994, 219.1, 0],[46.9, 219.79999999999998, 0],[46.9, 222.6, 0],[47.599999999999994, 223.29999999999998, 0],[48.3, 222.6, 0],[49.0, 223.29999999999998, 0],[49.699999999999996, 223.29999999999998, 0],[50.4, 222.6, 0],[51.099999999999994, 223.29999999999998, 0],[51.8, 222.6, 0],[52.5, 223.29999999999998, 0],[47.599999999999994, 223.29999999999998, 0],[46.9, 224.0, 0],[46.9, 228.2, 0],[47.599999999999994, 228.89999999999998, 0],[51.099999999999994, 228.89999999999998, 0],[51.099999999999994, 229.6, 0],[47.599999999999994, 229.6, 0],[46.9, 230.29999999999998, 0],[46.9, 232.39999999999998, 0],[47.599999999999994, 233.1, 0],[110.6, 233.1, 0],[111.3, 233.79999999999998, 0],[110.6, 234.49999999999997, 0],[111.3, 235.2, 0],[110.6, 235.89999999999998, 0],[110.6, 236.6, 0],[111.3, 237.29999999999998, 0],[116.89999999999999, 237.29999999999998, 0],[117.6, 236.6, 0],[117.6, 1.4, 0],[116.19999999999999, 0.0, 0],[114.1, 0.0, 0],[113.39999999999999, 0.7, 0],[111.3, 0.7, 0],[110.6, 1.4, 0],[110.6, 2.8, 0],[111.3, 3.5, 0],[110.6, 4.199999999999999, 0],[110.6, 4.8999999999999995, 0],[47.599999999999994, 4.8999999999999995, 0],[46.9, 5.6, 0],[46.9, 7.699999999999999, 0],[47.599999999999994, 8.399999999999999, 0],[51.099999999999994, 8.399999999999999, 0],[51.099999999999994, 10.5, 0],[47.599999999999994, 10.5, 0],[46.9, 11.2, 0],[46.9, 13.299999999999999, 0],[47.599999999999994, 14.0, 0],[48.3, 14.0, 0],[49.0, 14.7, 0],[50.4, 14.7, 0],[51.099999999999994, 14.0, 0],[51.099999999999994, 14.7, 0],[50.4, 15.399999999999999, 0],[49.699999999999996, 15.399999999999999, 0],[49.0, 14.7, 0],[48.3, 15.399999999999999, 0],[47.599999999999994, 15.399999999999999, 0],[46.9, 16.099999999999998, 0],[46.9, 18.2, 0],[47.599999999999994, 18.9, 0],[51.099999999999994, 18.9, 0],[51.099999999999994, 19.599999999999998, 0],[18.2, 19.599999999999998, 0],[17.5, 20.299999999999997, 0],[17.5, 23.799999999999997, 0],[18.2, 24.5, 0],[21.7, 24.5, 0],[21.7, 26.599999999999998, 0],[18.2, 26.599999999999998, 0],[17.5, 27.299999999999997, 0],[17.5, 29.4, 0],[18.9, 30.799999999999997, 0],[20.299999999999997, 30.799999999999997, 0],[21.0, 30.099999999999998, 0],[21.7, 30.099999999999998, 0],[21.7, 30.799999999999997, 0],[22.4, 31.499999999999996, 0],[21.0, 32.9, 0],[20.299999999999997, 32.199999999999996, 0],[19.599999999999998, 32.9, 0],[18.9, 32.199999999999996, 0],[17.5, 33.599999999999994, 0],[17.5, 37.099999999999994, 0],[18.2, 37.8, 0],[23.099999999999998, 37.8, 0],[23.099999999999998, 38.5, 0],[23.799999999999997, 39.199999999999996, 0],[23.099999999999998, 39.9, 0],[18.2, 39.9, 0],[17.5, 40.599999999999994, 0],[17.5, 42.699999999999996, 0],[18.2, 43.4, 0],[51.099999999999994, 43.4, 0],[51.099999999999994, 44.099999999999994, 0],[47.599999999999994, 44.099999999999994, 0],[46.9, 44.8, 0],[46.9, 46.9, 0],[48.3, 48.3, 0],[49.699999999999996, 48.3, 0],[50.4, 47.599999999999994, 0],[51.099999999999994, 47.599999999999994, 0],[51.8, 48.3, 0],[52.5, 48.3, 0],[52.5, 49.699999999999996, 0],[51.8, 50.4, 0],[51.099999999999994, 49.699999999999996, 0],[50.4, 50.4, 0],[48.3, 50.4, 0],[47.599999999999994, 49.699999999999996, 0],[46.9, 50.4, 0],[46.9, 51.8, 0],[47.599999999999994, 52.5, 0],[52.5, 52.5, 0],[52.5, 53.199999999999996, 0],[51.8, 53.199999999999996, 0],[51.099999999999994, 52.5, 0],[48.3, 52.5, 0],[47.599999999999994, 53.199999999999996, 0],[46.9, 52.5, 0],[23.099999999999998, 52.5, 0],[22.4, 53.199999999999996, 0],[21.7, 52.5, 0],[21.0, 53.199999999999996, 0],[20.299999999999997, 52.5, 0],[18.9, 52.5, 0],[17.5, 53.9, 0],[17.5, 57.4, 0],[18.2, 58.099999999999994, 0],[22.4, 58.099999999999994, 0],[21.7, 58.8, 0],[21.7, 60.199999999999996, 0],[18.2, 60.199999999999996, 0],[17.5, 60.9, 0],[17.5, 64.39999999999999, 0],[18.2, 65.1, 0],[18.9, 65.1, 0],[19.599999999999998, 65.8, 0],[20.299999999999997, 65.8, 0],[21.0, 65.1, 0],[21.7, 65.8, 0],[22.4, 65.1, 0],[23.099999999999998, 65.8, 0],[18.2, 65.8, 0],[17.5, 66.5, 0],[17.5, 70.69999999999999, 0],[18.2, 71.39999999999999, 0],[22.4, 71.39999999999999, 0],[21.7, 72.1, 0],[22.4, 72.8, 0],[21.7, 73.5, 0],[18.2, 73.5, 0],[17.5, 74.19999999999999, 0],[17.5, 77.69999999999999, 0],[18.2, 78.39999999999999, 0],[51.099999999999994, 78.39999999999999, 0],[51.099999999999994, 79.1, 0],[47.599999999999994, 79.1, 0],[46.9, 79.8, 0],[46.9, 82.6, 0],[47.599999999999994, 83.3, 0],[48.3, 82.6, 0],[49.0, 83.3, 0],[49.699999999999996, 83.3, 0],[50.4, 82.6, 0],[51.099999999999994, 83.3, 0],[51.8, 82.6, 0],[52.5, 83.3, 0],[47.599999999999994, 83.3, 0],[46.9, 84.0, 0],[46.9, 86.8, 0],[47.599999999999994, 87.5, 0],[51.099999999999994, 87.5, 0],[51.099999999999994, 89.6, 0],[47.599999999999994, 89.6, 0],[46.9, 90.3, 0],[46.9, 92.39999999999999, 0],[20.299999999999997, 92.39999999999999, 0],[18.2, 94.5, 0],[17.5, 94.5, 0],[15.399999999999999, 96.6, 0],[0.7, 96.6, 0]];
        VAR pos pos20{24} := [[81.19999999999999, 120.39999999999999, 0],[81.89999999999999, 119.69999999999999, 0],[81.89999999999999, 116.19999999999999, 0],[82.6, 115.49999999999999, 0],[82.6, 114.8, 0],[83.3, 114.1, 0],[83.3, 113.39999999999999, 0],[87.5, 109.19999999999999, 0],[88.19999999999999, 109.19999999999999, 0],[89.6, 107.8, 0],[114.1, 107.8, 0],[114.1, 130.2, 0],[88.89999999999999, 130.2, 0],[88.19999999999999, 129.5, 0],[87.5, 129.5, 0],[86.8, 128.79999999999998, 0],[86.1, 128.79999999999998, 0],[83.3, 125.99999999999999, 0],[83.3, 125.3, 0],[82.6, 124.6, 0],[82.6, 123.89999999999999, 0],[81.89999999999999, 123.19999999999999, 0],[81.89999999999999, 121.1, 0],[81.19999999999999, 120.39999999999999, 0]];
        VAR pos pos21{16} := [[58.8, 118.3, 0],[60.9, 116.19999999999999, 0],[67.19999999999999, 116.19999999999999, 0],[67.89999999999999, 116.89999999999999, 0],[71.39999999999999, 116.89999999999999, 0],[71.39999999999999, 122.49999999999999, 0],[70.0, 122.49999999999999, 0],[69.3, 123.19999999999999, 0],[68.6, 122.49999999999999, 0],[62.3, 122.49999999999999, 0],[61.599999999999994, 123.19999999999999, 0],[60.9, 123.19999999999999, 0],[60.199999999999996, 122.49999999999999, 0],[59.49999999999999, 122.49999999999999, 0],[58.8, 121.8, 0],[58.8, 118.3, 0]];
        VAR pos pos22{19} := [[58.099999999999994, 134.39999999999998, 0],[58.8, 133.7, 0],[58.8, 133.0, 0],[60.9, 130.9, 0],[67.89999999999999, 130.9, 0],[68.6, 131.6, 0],[71.39999999999999, 131.6, 0],[71.39999999999999, 137.89999999999998, 0],[70.0, 137.89999999999998, 0],[69.3, 137.2, 0],[68.6, 137.89999999999998, 0],[67.89999999999999, 137.2, 0],[62.3, 137.2, 0],[61.599999999999994, 137.89999999999998, 0],[60.9, 137.2, 0],[59.49999999999999, 137.2, 0],[58.8, 136.5, 0],[58.8, 135.1, 0],[58.099999999999994, 134.39999999999998, 0]];
        VAR pos pos23{15} := [[58.099999999999994, 105.0, 0],[58.8, 104.3, 0],[58.8, 103.6, 0],[60.199999999999996, 102.19999999999999, 0],[60.9, 102.19999999999999, 0],[61.599999999999994, 101.5, 0],[65.8, 101.5, 0],[66.5, 102.19999999999999, 0],[71.39999999999999, 102.19999999999999, 0],[71.39999999999999, 108.5, 0],[60.199999999999996, 108.5, 0],[58.8, 107.1, 0],[58.8, 106.39999999999999, 0],[58.099999999999994, 105.69999999999999, 0],[58.099999999999994, 105.0, 0]];
        VAR pos pos24{17} := [[46.9, 32.199999999999996, 0],[47.599999999999994, 31.499999999999996, 0],[47.599999999999994, 30.799999999999997, 0],[49.0, 30.799999999999997, 0],[49.699999999999996, 30.099999999999998, 0],[50.4, 30.799999999999997, 0],[53.9, 30.799999999999997, 0],[53.9, 34.3, 0],[53.199999999999996, 33.599999999999994, 0],[51.099999999999994, 33.599999999999994, 0],[50.4, 34.3, 0],[49.699999999999996, 34.3, 0],[49.0, 33.599999999999994, 0],[48.3, 34.3, 0],[47.599999999999994, 33.599999999999994, 0],[46.9, 33.599999999999994, 0],[46.9, 32.199999999999996, 0]];
        VAR pos pos25{16} := [[46.199999999999996, 207.89999999999998, 0],[47.599999999999994, 206.5, 0],[48.3, 206.5, 0],[49.0, 205.79999999999998, 0],[51.8, 205.79999999999998, 0],[52.5, 206.5, 0],[52.5, 210.0, 0],[51.8, 210.7, 0],[51.099999999999994, 210.0, 0],[50.4, 210.0, 0],[49.699999999999996, 210.7, 0],[48.3, 210.7, 0],[47.599999999999994, 210.0, 0],[46.9, 210.0, 0],[46.199999999999996, 209.29999999999998, 0],[46.199999999999996, 207.89999999999998, 0]];
        VAR pos pos26{14} := [[46.199999999999996, 174.29999999999998, 0],[47.599999999999994, 172.89999999999998, 0],[48.3, 172.89999999999998, 0],[49.0, 172.2, 0],[49.699999999999996, 172.2, 0],[50.4, 172.89999999999998, 0],[51.099999999999994, 172.89999999999998, 0],[51.8, 172.2, 0],[52.5, 172.89999999999998, 0],[52.5, 176.39999999999998, 0],[51.8, 177.1, 0],[47.599999999999994, 177.1, 0],[46.199999999999996, 175.7, 0],[46.199999999999996, 174.29999999999998, 0]];
        VAR pos pos27{16} := [[46.199999999999996, 67.89999999999999, 0],[47.599999999999994, 66.5, 0],[48.3, 66.5, 0],[49.0, 65.8, 0],[51.8, 65.8, 0],[52.5, 66.5, 0],[52.5, 70.0, 0],[51.8, 70.69999999999999, 0],[51.099999999999994, 70.0, 0],[50.4, 70.0, 0],[49.699999999999996, 70.69999999999999, 0],[48.3, 70.69999999999999, 0],[47.599999999999994, 70.0, 0],[46.9, 70.0, 0],[46.199999999999996, 69.3, 0],[46.199999999999996, 67.89999999999999, 0]];
        VAR pos pos28{15} := [[33.599999999999994, 207.2, 0],[34.3, 206.5, 0],[35.0, 206.5, 0],[35.699999999999996, 205.79999999999998, 0],[39.199999999999996, 205.79999999999998, 0],[39.199999999999996, 207.89999999999998, 0],[39.9, 208.6, 0],[39.199999999999996, 209.29999999999998, 0],[39.9, 210.0, 0],[37.8, 210.0, 0],[37.099999999999994, 210.7, 0],[35.0, 210.7, 0],[34.3, 210.0, 0],[33.599999999999994, 210.0, 0],[33.599999999999994, 207.2, 0]];
        VAR pos pos29{14} := [[33.599999999999994, 173.6, 0],[34.3, 172.89999999999998, 0],[36.4, 172.89999999999998, 0],[37.099999999999994, 172.2, 0],[37.8, 172.89999999999998, 0],[39.199999999999996, 172.89999999999998, 0],[39.199999999999996, 174.29999999999998, 0],[39.9, 175.0, 0],[39.199999999999996, 175.7, 0],[39.199999999999996, 177.1, 0],[35.0, 177.1, 0],[34.3, 176.39999999999998, 0],[33.599999999999994, 176.39999999999998, 0],[33.599999999999994, 173.6, 0]];
        VAR pos pos30{13} := [[33.599999999999994, 67.19999999999999, 0],[35.0, 65.8, 0],[35.699999999999996, 65.8, 0],[36.4, 65.1, 0],[37.099999999999994, 65.8, 0],[40.599999999999994, 65.8, 0],[41.3, 66.5, 0],[41.3, 67.89999999999999, 0],[40.599999999999994, 68.6, 0],[40.599999999999994, 69.3, 0],[39.9, 68.6, 0],[33.599999999999994, 68.6, 0],[33.599999999999994, 67.19999999999999, 0]];
        VAR pos pos31{10} := [[33.599999999999994, 32.199999999999996, 0],[35.0, 30.799999999999997, 0],[35.699999999999996, 30.799999999999997, 0],[36.4, 30.099999999999998, 0],[37.099999999999994, 30.799999999999997, 0],[40.599999999999994, 30.799999999999997, 0],[40.599999999999994, 32.9, 0],[41.3, 33.599999999999994, 0],[33.599999999999994, 33.599999999999994, 0],[33.599999999999994, 32.199999999999996, 0]];
        VAR pos pos32{23} := [[29.4, 133.0, 0],[30.799999999999997, 131.6, 0],[31.499999999999996, 131.6, 0],[32.199999999999996, 130.9, 0],[38.5, 130.9, 0],[39.199999999999996, 131.6, 0],[42.0, 131.6, 0],[42.0, 133.0, 0],[42.699999999999996, 133.7, 0],[42.0, 134.39999999999998, 0],[42.699999999999996, 135.1, 0],[42.699999999999996, 137.2, 0],[42.0, 137.2, 0],[41.3, 137.89999999999998, 0],[40.599999999999994, 137.2, 0],[34.3, 137.2, 0],[33.599999999999994, 137.89999999999998, 0],[32.9, 137.89999999999998, 0],[32.199999999999996, 137.2, 0],[30.099999999999998, 137.2, 0],[30.099999999999998, 136.5, 0],[29.4, 135.79999999999998, 0],[29.4, 133.0, 0]];
        VAR pos pos33{27} := [[29.4, 118.99999999999999, 0],[30.099999999999998, 118.3, 0],[30.099999999999998, 117.6, 0],[30.799999999999997, 116.89999999999999, 0],[31.499999999999996, 116.89999999999999, 0],[32.199999999999996, 116.19999999999999, 0],[38.5, 116.19999999999999, 0],[39.199999999999996, 116.89999999999999, 0],[42.0, 116.89999999999999, 0],[42.0, 118.99999999999999, 0],[42.699999999999996, 119.69999999999999, 0],[42.0, 120.39999999999999, 0],[42.699999999999996, 121.1, 0],[42.699999999999996, 121.8, 0],[42.0, 122.49999999999999, 0],[41.3, 122.49999999999999, 0],[40.599999999999994, 123.19999999999999, 0],[39.9, 122.49999999999999, 0],[35.0, 122.49999999999999, 0],[34.3, 123.19999999999999, 0],[33.599999999999994, 122.49999999999999, 0],[32.199999999999996, 122.49999999999999, 0],[31.499999999999996, 123.19999999999999, 0],[30.799999999999997, 122.49999999999999, 0],[30.099999999999998, 122.49999999999999, 0],[29.4, 121.8, 0],[29.4, 118.99999999999999, 0]];
        VAR pos pos34{16} := [[29.4, 104.3, 0],[30.099999999999998, 103.6, 0],[30.099999999999998, 102.89999999999999, 0],[30.799999999999997, 102.19999999999999, 0],[31.499999999999996, 102.19999999999999, 0],[32.199999999999996, 101.5, 0],[37.099999999999994, 101.5, 0],[37.8, 102.19999999999999, 0],[41.3, 102.19999999999999, 0],[42.0, 102.89999999999999, 0],[42.0, 108.5, 0],[31.499999999999996, 108.5, 0],[30.799999999999997, 107.8, 0],[30.099999999999998, 107.8, 0],[29.4, 107.1, 0],[29.4, 104.3, 0]];
        
        ! Define variables to be used while drawing
        VAR num font_size := 1.0;
        VAR pos position := [0,0,0];
        VAR robtarget next_target := [[0,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
        
        ! Update the penup_offset based on the z_offset
        penup_offset := z_offset + penup_offset;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos0{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos0, 1) DO
            position := pos0{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos1{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos1, 1) DO
            position := pos1{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos2{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos2, 1) DO
            position := pos2{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos3{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos3, 1) DO
            position := pos3{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos4{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos4, 1) DO
            position := pos4{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos5{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos5, 1) DO
            position := pos5{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos6{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos6, 1) DO
            position := pos6{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos7{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos7, 1) DO
            position := pos7{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos8{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos8, 1) DO
            position := pos8{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos9{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos9, 1) DO
            position := pos9{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos10{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos10, 1) DO
            position := pos10{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos11{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos11, 1) DO
            position := pos11{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos12{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos12, 1) DO
            position := pos12{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos13{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos13, 1) DO
            position := pos13{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos14{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos14, 1) DO
            position := pos14{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos15{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos15, 1) DO
            position := pos15{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos16{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos16, 1) DO
            position := pos16{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos17{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos17, 1) DO
            position := pos17{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos18{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos18, 1) DO
            position := pos18{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos19{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos19, 1) DO
            position := pos19{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos20{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos20, 1) DO
            position := pos20{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos21{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos21, 1) DO
            position := pos21{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos22{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos22, 1) DO
            position := pos22{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos23{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos23, 1) DO
            position := pos23{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos24{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos24, 1) DO
            position := pos24{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos25{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos25, 1) DO
            position := pos25{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos26{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos26, 1) DO
            position := pos26{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos27{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos27, 1) DO
            position := pos27{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos28{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos28, 1) DO
            position := pos28{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos29{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos29, 1) DO
            position := pos29{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos30{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos30, 1) DO
            position := pos30{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos31{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos31, 1) DO
            position := pos31{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos32{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos32, 1) DO
            position := pos32{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos33{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos33, 1) DO
            position := pos33{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;

        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos34{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos34, 1) DO
            position := pos34{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure DrawMyTextArt
    !   This procedure draws Middlezex University's LOGO on the work surface
    !
    ! Example
    !   DrawMyTextArt;
    !
    ! Warning
    !   Takes a long time to complete
    !
    !***********************************************************
    PROC DrawMyTextArt()
        VAR num font_size := 0.06;
        VAR num x_offset := 5;
        VAR num y_offset := 5;
        VAR num line_height := 50;
        
        line_height := line_height * font_size;
        
        DrawString "@@@'#@'@@@@@@@++@'@@@@@@'@;@@@@@@@@;#;@@@@@;@@@@@@@@@'@'@@@@@@@@@@'", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@'';@@@@@@@@+';@@@@@@#++;@@@@@@@@@@@@@@#'@##@@@@@#@#'@@@@@@@@+@'", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@#;#+#@@@@@@@@@@@@@@'++@@@@@@'@''@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@@+;;@@@@@@@@@@@@@@@@@@@@@@@@@'@+@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@#++'';;;;''''';;;;''++#@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@;'''''''''''''''''''''''''''''''@@@@@@@@@@#@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@#@@@@@@;'''''''''''''''''''''''''''''''@@@@@@@@@@';+@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@'#'@@@@@@''''''''''';'''@+''';'''''''''''@@@@@@@@@@'#+'@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@#'@'@@@@@@'''''''''''@'''@;''+@'''''''''''@@@@@@@@@@+@@'@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@'@@+@@@@@@'''''''''';@;''@'''##'''''''''';@@@@@@@@@@@@;:@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@#'+#@@@@@@''''''''''''@'#@@#'@''''''''''';@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@;@;@@@@@@''''''''''';@@@@@@@@''''''''''';@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@''''''''''''@+';;'##''''''''''';@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@''''''''''''+#'''+@;''''''''''';@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@'''''''''''''';;;;''''''''''''';@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@'@@@@@@@@@@;'''''''''''''''''''''''''''''''@@@;#+@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@'+;@@@@@@@@@;'''''''''''''''''''''''''''''''@@@;@'@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@'++;@@@@@@@@;''''''';+'''';;;;;''''''''''''+@@@#@;@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@+'@#;@@@@@@@''''''''#';+@@@@@@@@@+;''''''''#@@@'#+;@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@#:'@@@@@@@@+'''''';#@@@@@@@@@@@@@@@;''''''@@@@#+'@@@#'#+@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@#'''';+@@@@+';;;'#@';@@@@''''';@@@@@@@@@@'#+;#@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@''''@@@+#;''''''''''@@@@@'''';@@@@@@@@@@@'#@;@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@;'';@'';@'''''''''''@@@@@@''''@@@@@@@@@@@@'#;@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@+''''''';'''''''''''';;;;;'''@@@@@@@@@@@@@@#@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@''''''''+''''';;''''''''''';@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@;'''''';+;+@@@@@@@+;''''''''@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@+''''';+@@@@@@@@@#@@#;'''''@@@@@@+#@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@''''#@@@';;';;'''@@@@;''';@@@@@'#'@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@+'''@+;@;''''''';@@@@@'''@@@@@;@#'@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@''+#;@@@@@@@@@@@@@'''''';'''''''''';;;;'';@@@@#@'@;@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@''@@;@@@@@@@@@@@@@#''''''''''''''''''''''@@@@@@@+##@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@+++#@@@@@@@@@@@@@@@;'''''@;#@@@@#';'''''+@@@@@@@+@@@@@@@@#@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@'#@@@@@@@@@@@@@@@@@''';+@@@@#@#'@@'''';@@@@@@@@@@@@@@@#;+@+@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@@''@@'+''''';@@@;';@@@@@@@@@@@@@@@@;'@#'@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@';@@@@@@@@@@#';'+;'''''''''';@@@@@@@@@@@@@@@@@'##'@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@++#+@@@@@@@@@@#''''''''''''';@@@@@@@@@@@@@@@@@@##+@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@;'+@@@@@@@@@@@@#''''''''''';@@@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@'+##@@@@@@@@@@@@@;'''''''''@@@@@@@@@@'@#@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@#'+:@@@+#@@@@@@@@@'''''';#@@@@@@@@@@#@#''@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@'@@@@@+@@@@@+@;@@@@@@@@@@;'''@@@@@@@@@@@@+'@@+@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@'+;@@@@@@@@@@'@@'@@@@@@@@@@@@@@@@@@@@@@@@@@#:+;@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@'++;@@@@@@@@@'@+'@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@+'@#;@@@@@@@@'#;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@#:+@@@@@@@@@@@'@@@@@@@@@@@@@@@@@@;'@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@@@@@+@@@@@@@@@@'@#@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@@@@'+:@@@@@@@@#@''@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
        DrawString "@@@@@@@@@@@@@@@@@@@@@@@@@@@;@';@@@@@@@'#@;@@@@@@@@@@@@@@@@@@@@@@@@@", font_size, v500, v800, x_offset, y_offset, 0, 30;
        y_offset := y_offset + line_height;
    ENDPROC
    
    !***********************************************************
    !
    ! Function get_character_width
    !   This function returns the width of a given character
    !
    ! Example
    !   VAR string character_a := "a";
    !   a_width := get_character_width(character_a);
    !
    !***********************************************************
    FUNC num get_character_width(string character)
        VAR num char_width := 20;
        
        ! Determine the width of the character
        IF character = " " THEN
            char_width := 20;
        ELSEIF character = "!" THEN
            char_width := 10;
        ELSEIF character = """" THEN
            char_width := 22;
        ELSEIF character = "'" THEN
            char_width := 6;
        ELSEIF character = "#" THEN
            char_width := 38;
        ELSEIF character = "$" THEN
            char_width := 34;
        ELSEIF character = "%" THEN
            char_width := 42;
        ELSEIF character = "&" THEN
            char_width := 46;
        ELSEIF character = "(" THEN
            char_width := 20;
        ELSEIF character = ")" THEN
            char_width := 20;
        ELSEIF character = "*" THEN
            char_width := 26;
        ELSEIF character = "+" THEN
            char_width := 42;
        ELSEIF character = "," THEN
            char_width := 10;
        ELSEIF character = "-" THEN
            char_width := 42;
        ELSEIF character = "." THEN
            char_width := 10;
        ELSEIF character = "/" THEN
            char_width := 42;
        ELSEIF character = "0" THEN
            char_width := 34;
        ELSEIF character = "1" THEN
            char_width := 16;
        ELSEIF character = "2" THEN
            char_width := 34;
        ELSEIF character = "3" THEN
            char_width := 34;
        ELSEIF character = "4" THEN
            char_width := 36;
        ELSEIF character = "5" THEN
            char_width := 34;
        ELSEIF character = "6" THEN
            char_width := 32;
        ELSEIF character = "7" THEN
            char_width := 34;
        ELSEIF character = "8" THEN
            char_width := 34;
        ELSEIF character = "9" THEN
            char_width := 32;
        ELSEIF character = ":" THEN
            char_width := 10;
        ELSEIF character = ";" THEN
            char_width := 10;
        ELSEIF character = "<" THEN
            char_width := 38;
        ELSEIF character = ">" THEN
            char_width := 38;
        ELSEIF character = "=" THEN
            char_width := 42;
        ELSEIF character = "?" THEN
            char_width := 30;
        ELSEIF character = "@" THEN
            char_width := 48;
        ELSEIF character = "A" THEN
            char_width := 38;
        ELSEIF character = "B" THEN
            char_width := 34;
        ELSEIF character = "C" THEN
            char_width := 36;
        ELSEIF character = "D" THEN
            char_width := 34;
        ELSEIF character = "E" THEN
            char_width := 32;
        ELSEIF character = "F" THEN
            char_width := 32;
        ELSEIF character = "G" THEN
            char_width := 36;
        ELSEIF character = "H" THEN
            char_width := 34;
        ELSEIF character = "I" THEN
            char_width := 6;
        ELSEIF character = "J" THEN
            char_width := 26;
        ELSEIF character = "K" THEN
            char_width := 34;
        ELSEIF character = "L" THEN
            char_width := 30;
        ELSEIF character = "M" THEN
            char_width := 38;
        ELSEIF character = "N" THEN
            char_width := 34;
        ELSEIF character = "O" THEN
            char_width := 38;
        ELSEIF character = "P" THEN
            char_width := 34;
        ELSEIF character = "Q" THEN
            char_width := 38;
        ELSEIF character = "R" THEN
            char_width := 34;
        ELSEIF character = "S" THEN
            char_width := 34;
        ELSEIF character = "T" THEN
            char_width := 34;
        ELSEIF character = "U" THEN
            char_width := 34;
        ELSEIF character = "V" THEN
            char_width := 38;
        ELSEIF character = "W" THEN
            char_width := 46;
        ELSEIF character = "X" THEN
            char_width := 34;
        ELSEIF character = "Y" THEN
            char_width := 38;
        ELSEIF character = "Z" THEN
            char_width := 34;
        ELSEIF character = "[" THEN
            char_width := 20;
        ELSEIF character = "]" THEN
            char_width := 20;
        ELSEIF character = "\\" THEN
            char_width := 42;
        ELSEIF character = "^" THEN
            char_width := 38;
        ELSEIF character = "_" THEN
            char_width := 38;
        ELSEIF character = "`" THEN
            char_width := 18;
        ELSEIF character = "a" THEN
            char_width := 30;
        ELSEIF character = "b" THEN
            char_width := 30;
        ELSEIF character = "c" THEN
            char_width := 30;
        ELSEIF character = "d" THEN
            char_width := 30;
        ELSEIF character = "e" THEN
            char_width := 30;
        ELSEIF character = "f" THEN
            char_width := 22;
        ELSEIF character = "g" THEN
            char_width := 30;
        ELSEIF character = "h" THEN
            char_width := 28;
        ELSEIF character = "i" THEN
            char_width := 10;
        ELSEIF character = "j" THEN
            char_width := 18;
        ELSEIF character = "k" THEN
            char_width := 28;
        ELSEIF character = "l" THEN
            char_width := 6;
        ELSEIF character = "m" THEN
            char_width := 50;
        ELSEIF character = "n" THEN
            char_width := 28;
        ELSEIF character = "o" THEN
            char_width := 32;
        ELSEIF character = "p" THEN
            char_width := 30;
        ELSEIF character = "q" THEN
            char_width := 30;
        ELSEIF character = "r" THEN
            char_width := 22;
        ELSEIF character = "s" THEN
            char_width := 28;
        ELSEIF character = "t" THEN
            char_width := 22;
        ELSEIF character = "u" THEN
            char_width := 28;
        ELSEIF character = "v" THEN
            char_width := 30;
        ELSEIF character = "w" THEN
            char_width := 38;
        ELSEIF character = "x" THEN
            char_width := 28;
        ELSEIF character = "y" THEN
            char_width := 32;
        ELSEIF character = "z" THEN
            char_width := 28;
        ELSEIF character = "{" THEN
            char_width := 16;
        ELSEIF character = "}" THEN
            char_width := 16;
        ELSEIF character = "|" THEN
            char_width := 6;
        ELSEIF character = "~" THEN
            char_width := 42;
        ENDIF
        
        RETURN char_width;
    ENDFUNC
    
    !***********************************************************
    !
    ! Function get_word_width
    !   This function returns the written width of a given string
    !
    ! Example
    !   VAR string input_string := "hello";
    !   VAR num character_spacing := 2;
    !   VAR num word_width := get_word_width(input_string, character_spacing);
    !
    !***********************************************************
    FUNC num get_word_width(string word, num character_spacing)
        ! Define variables to be used later
        VAR num word_width := 0;
        VAR string character := "";
        VAR num string_length := 0;
        VAR num character_width := 0;
        
        ! Update string length
        string_length := StrLen(word);
        
        ! Calculate word width
        FOR index FROM 1 TO string_length DO
            character := StrPart(word, index, 1);
            character_width := get_character_width(character);
            
            word_width := word_width + character_width;
        ENDFOR
        
        ! Add character spacing
        word_width := word_width + (character_spacing * (string_length - 1.0));
        
        RETURN word_width;
    ENDFUNC
    
    !***********************************************************
    !
    ! Function get_ideal_font_size
    !   This function returns the ideal font size to ensure that a given string
    !   fits a particular view.
    !
    ! Example
    !   VAR string input_string := "hello, world";
    !   VAR num page_width := 250;
    !   VAR num padding := 10;
    !   VAR num font_size := get_ideal_font_size(input_string, page_width, padding);
    !
    !***********************************************************
    FUNC num get_ideal_font_size(string input_string, num page_width, num padding)
        ! Define max string length
        VAR num max_string_length := 20;
        
        ! Intialize a buffer to store the ideal word_length
        VAR num ideal_word_length := 0;
        
        ! Define variables to be used later
        VAR num ideal_font_size := 1.0;
        VAR num string_length := 0;
        VAR num word_length := 0;
        VAR num character_spacing := 2;
        
        string_length := StrLen(input_string);
        IF string_length > max_string_length THEN
            ! Truncate the input string if it exceeds the max allowed length
            input_string := StrPart(input_string, 0, max_string_length);
        ENDIF
        
        ! Update string length
        string_length := StrLen(input_string);
        
        ! Calculate word length
        word_length := get_word_width(input_string, character_spacing);
        
        ! Calculate ideal word length
        ideal_font_size := 1.0;
        ideal_word_length := page_width - (2.0 * padding);
        ideal_font_size := ideal_word_length / word_length;
        
        RETURN ideal_font_size;
    ENDFUNC
    
    !***********************************************************
    !
    ! Procedure DrawString
    !   This procedure draws a given string on the work surface
    !
    ! Example
    !   VAR string input_string := "Hello";    // String to write
    !   VAR num font_size := 1.0;              // Size of characters
    !   VAR speeddata approach_speed := v100;  // Approach speed for arm
    !   VAR speeddata write_speed := v80;      // Write speed for arm
    !   VAR num x_offset := 0;                 // x offset from worksurface origin
    !   VAR num y_offset := 0;                 // y offset from worksurface origin
    !   VAR num z_offset := 0;                 // z offset from worksurface origin
    !   VAR num pen_offset := 30;              // Defines pen position for pen up
    !
    !   DrawString input_string, font_size, approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
    !
    !***********************************************************
    PROC DrawString(string input_string, num font_size, speeddata approach_speed, speeddata write_speed, num x_offset, num y_offset, num z_offset, num penup_offset)
        ! Define default character size and input_string length
        VAR num char_width := 45;
        VAR num char_height := 50;
        VAR num input_length := 0;
        
        ! Define size of work surface
        VAR num page_width := 290;
        VAR num page_height := 400;
        
        ! Define start position
        VAR num start_x_offset := 0;
        VAR num start_y_offset := 0;
        VAR string character := "";
        
        ! Apply intial start offset
        start_x_offset := x_offset;
        start_y_offset := y_offset;
        
        ! Ensure that the font_size is not (zero | negative)
        IF font_size <= 0 THEN
            font_size := 0.1;
        ENDIF
        
        ! Update character height to based on font_size
        char_height := char_height * font_size;
        input_length := StrLen(input_string);
        
        ! Loop through the given input_string
        FOR index FROM 1 TO input_length DO
            ! Select the character at this index
            character := StrPart(input_string, index, 1);
            
            ! Draw the character
            DrawCharacter character, font_size, approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
            
            char_width := get_character_width(character);
            
            ! Update the width of the character based on font_size & move the arm #UpdateCursor
            char_width := (char_width + 2) * font_size;
            x_offset := x_offset + char_width;
            
            ! Engage text-wrap if arm at page width
            IF (x_offset + char_width) > page_width THEN
                x_offset := start_x_offset;
                y_offset := y_offset + char_height;
            ENDIF
            
            ! Engage page-wrap if arm at page-height
            IF (y_offset + char_height) > page_height THEN
                y_offset := start_y_offset;
                x_offset := start_x_offset;
            ENDIF
        ENDFOR
        
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure DrawCharacter
    !   This procedure draws a given character on the work surface
    !
    ! Example
    !   VAR string character := "H";           // String to write
    !   VAR num font_size := 1.0;              // Size of characters
    !   VAR speeddata approach_speed := v100;  // Approach speed for arm
    !   VAR speeddata write_speed := v80;      // Write speed for arm
    !   VAR num x_offset := 0;                 // x offset from worksurface origin
    !   VAR num y_offset := 0;                 // y offset from worksurface origin
    !   VAR num z_offset := 0;                 // z offset from worksurface origin
    !   VAR num pen_offset := 30;              // Defines pen position for pen up
    !
    !   DrawCharacter character, font_size, approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
    !
    !***********************************************************
    PROC DrawCharacter(string character, num font_size, speeddata approach_speed, speeddata write_speed, num x_offset, num y_offset, num z_offset, num penup_offset)
        ! Define points for ascii characters
        VAR pos Exclamation_PtA{22} := [[5, 10, 0], [4, 9, 0], [3, 9, 0], [1, 7, 0], [1, 6, 0], [0, 5, 0], [1, 4, 0], [1, 3, 0], [3, 1, 0], [4, 1, 0], [5, 0, 0], [6, 1, 0], [7, 1, 0], [9, 3, 0], [9, 4, 0], [10, 5, 0], [9, 6, 0], [9, 7, 0], [7, 9, 0], [6, 9, 0], [5, 10, 0], [4, 9, 0]];
        VAR pos Exclamation_PtB{20} := [[5, 48, 0], [4, 47, 0], [3, 47, 0], [3, 46, 0], [2, 45, 0], [2, 17, 0], [3, 16, 0], [3, 15, 0], [4, 15, 0], [5, 14, 0], [6, 15, 0], [7, 15, 0], [7, 16, 0], [8, 17, 0], [8, 45, 0], [7, 46, 0], [7, 47, 0], [6, 47, 0], [5, 48, 0], [4, 47, 0]];
        VAR pos DoubleQuotation_PtA{20} := [[19, 20, 0], [18, 19, 0], [17, 19, 0], [17, 18, 0], [16, 17, 0], [16, 3, 0], [17, 2, 0], [17, 1, 0], [18, 1, 0], [19, 0, 0], [20, 1, 0], [21, 1, 0], [21, 2, 0], [22, 3, 0], [22, 17, 0], [21, 18, 0], [21, 19, 0], [20, 19, 0], [19, 20, 0], [18, 19, 0]];
        VAR pos DoubleQuotation_PtB{20} := [[3, 20, 0], [2, 19, 0], [1, 19, 0], [1, 18, 0], [0, 17, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 17, 0], [5, 18, 0], [5, 19, 0], [4, 19, 0], [3, 20, 0], [2, 19, 0]];
        VAR pos SingleQuotation_PtA{20} := [[3, 20, 0], [2, 19, 0], [1, 19, 0], [1, 18, 0], [0, 17, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 17, 0], [5, 18, 0], [5, 19, 0], [4, 19, 0], [3, 20, 0], [2, 19, 0]];
        VAR pos HashTag_PtA{98} := [[13, 62, 0], [12, 61, 0], [11, 61, 0], [11, 60, 0], [10, 59, 0], [10, 41, 0], [9, 40, 0], [3, 40, 0], [2, 39, 0], [1, 39, 0], [1, 38, 0], [0, 37, 0], [1, 36, 0], [1, 35, 0], [2, 35, 0], [3, 34, 0], [9, 34, 0], [10, 33, 0], [10, 29, 0], [9, 28, 0], [3, 28, 0], [2, 27, 0], [1, 27, 0], [1, 26, 0], [0, 25, 0], [1, 24, 0], [1, 23, 0], [2, 23, 0], [3, 22, 0], [9, 22, 0], [10, 21, 0], [10, 3, 0], [11, 2, 0], [11, 1, 0], [12, 1, 0], [13, 0, 0], [14, 1, 0], [15, 1, 0], [15, 2, 0], [16, 3, 0], [16, 21, 0], [17, 22, 0], [21, 22, 0], [22, 21, 0], [22, 3, 0], [23, 2, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [28, 21, 0], [29, 22, 0], [35, 22, 0], [36, 23, 0], [37, 23, 0], [37, 24, 0], [38, 25, 0], [37, 26, 0], [37, 27, 0], [36, 27, 0], [35, 28, 0], [29, 28, 0], [28, 29, 0], [28, 33, 0], [29, 34, 0], [35, 34, 0], [36, 35, 0], [37, 35, 0], [37, 36, 0], [38, 37, 0], [37, 38, 0], [37, 39, 0], [36, 39, 0], [35, 40, 0], [29, 40, 0], [28, 41, 0], [28, 59, 0], [27, 60, 0], [27, 61, 0], [26, 61, 0], [25, 62, 0], [24, 61, 0], [23, 61, 0], [23, 60, 0], [22, 59, 0], [22, 41, 0], [21, 40, 0], [17, 40, 0], [16, 41, 0], [16, 59, 0], [15, 60, 0], [15, 61, 0], [14, 61, 0], [13, 62, 0], [12, 61, 0]];
        VAR pos HashTag_PtB{10} := [[16, 33, 0], [17, 34, 0], [21, 34, 0], [22, 33, 0], [22, 29, 0], [21, 28, 0], [17, 28, 0], [16, 29, 0], [16, 33, 0], [17, 34, 0]];
        VAR pos Dollar_PtA{100} := [[10, 61, 0], [10, 56, 0], [9, 55, 0], [8, 55, 0], [7, 54, 0], [6, 54, 0], [1, 49, 0], [1, 48, 0], [0, 47, 0], [0, 42, 0], [1, 41, 0], [1, 40, 0], [2, 39, 0], [2, 38, 0], [6, 34, 0], [7, 34, 0], [8, 33, 0], [9, 33, 0], [10, 32, 0], [10, 17, 0], [9, 16, 0], [8, 16, 0], [5, 19, 0], [4, 19, 0], [3, 20, 0], [2, 19, 0], [1, 19, 0], [1, 18, 0], [0, 17, 0], [1, 16, 0], [1, 15, 0], [6, 10, 0], [7, 10, 0], [8, 9, 0], [9, 9, 0], [10, 8, 0], [10, 3, 0], [11, 2, 0], [11, 1, 0], [12, 1, 0], [13, 0, 0], [14, 1, 0], [15, 1, 0], [15, 2, 0], [16, 3, 0], [16, 7, 0], [17, 8, 0], [18, 7, 0], [18, 3, 0], [19, 2, 0], [19, 1, 0], [20, 1, 0], [21, 0, 0], [22, 1, 0], [23, 1, 0], [23, 2, 0], [24, 3, 0], [24, 8, 0], [25, 9, 0], [26, 9, 0], [27, 10, 0], [28, 10, 0], [33, 15, 0], [33, 16, 0], [34, 17, 0], [34, 24, 0], [33, 25, 0], [33, 26, 0], [32, 27, 0], [32, 28, 0], [28, 32, 0], [27, 32, 0], [26, 33, 0], [25, 33, 0], [24, 34, 0], [24, 47, 0], [25, 48, 0], [26, 48, 0], [29, 45, 0], [30, 45, 0], [31, 44, 0], [32, 45, 0], [33, 45, 0], [33, 46, 0], [34, 47, 0], [33, 48, 0], [33, 49, 0], [28, 54, 0], [27, 54, 0], [26, 55, 0], [25, 55, 0], [24, 56, 0], [24, 61, 0], [18, 61, 0], [18, 57, 0], [17, 56, 0], [16, 57, 0], [16, 61, 0], [10, 61, 0], [10, 56, 0]];
        VAR pos Dollar_PtB{11} := [[24, 26, 0], [25, 27, 0], [27, 25, 0], [27, 24, 0], [28, 23, 0], [28, 18, 0], [26, 16, 0], [25, 16, 0], [24, 17, 0], [24, 26, 0], [25, 27, 0]];
        VAR pos Dollar_PtC{8} := [[16, 29, 0], [17, 30, 0], [18, 29, 0], [18, 15, 0], [17, 14, 0], [16, 15, 0], [16, 29, 0], [17, 30, 0]];
        VAR pos Dollar_PtD{11} := [[8, 48, 0], [9, 48, 0], [10, 47, 0], [10, 40, 0], [9, 39, 0], [7, 41, 0], [7, 42, 0], [6, 43, 0], [6, 46, 0], [8, 48, 0], [9, 48, 0]];
        VAR pos Dollar_PtE{8} := [[16, 49, 0], [17, 50, 0], [18, 49, 0], [18, 37, 0], [17, 36, 0], [16, 37, 0], [16, 49, 0], [17, 50, 0]];
        VAR pos Percent_PtA{34} := [[30, 20, 0], [29, 19, 0], [28, 19, 0], [27, 18, 0], [26, 18, 0], [24, 16, 0], [24, 15, 0], [23, 14, 0], [23, 13, 0], [22, 12, 0], [22, 7, 0], [23, 6, 0], [23, 5, 0], [27, 1, 0], [28, 1, 0], [29, 0, 0], [34, 0, 0], [35, 1, 0], [36, 1, 0], [37, 2, 0], [38, 2, 0], [40, 4, 0], [40, 5, 0], [41, 6, 0], [41, 7, 0], [42, 8, 0], [42, 13, 0], [41, 14, 0], [41, 15, 0], [37, 19, 0], [36, 19, 0], [35, 20, 0], [30, 20, 0], [29, 19, 0]];
        VAR pos Percent_PtB{10} := [[31, 14, 0], [34, 14, 0], [36, 12, 0], [36, 9, 0], [33, 6, 0], [30, 6, 0], [28, 8, 0], [28, 11, 0], [31, 14, 0], [34, 14, 0]];
        VAR pos Percent_PtC{86} := [[8, 48, 0], [7, 47, 0], [6, 47, 0], [5, 46, 0], [4, 46, 0], [2, 44, 0], [2, 43, 0], [1, 42, 0], [1, 41, 0], [0, 40, 0], [0, 35, 0], [1, 34, 0], [1, 33, 0], [5, 29, 0], [6, 29, 0], [7, 28, 0], [12, 28, 0], [13, 29, 0], [14, 29, 0], [15, 30, 0], [16, 30, 0], [18, 32, 0], [18, 33, 0], [19, 34, 0], [19, 35, 0], [20, 36, 0], [20, 37, 0], [21, 38, 0], [27, 38, 0], [28, 37, 0], [26, 35, 0], [26, 34, 0], [20, 28, 0], [20, 27, 0], [14, 21, 0], [14, 20, 0], [8, 14, 0], [8, 13, 0], [2, 7, 0], [2, 6, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [10, 6, 0], [10, 7, 0], [16, 13, 0], [16, 14, 0], [22, 20, 0], [22, 21, 0], [28, 27, 0], [28, 28, 0], [34, 34, 0], [34, 35, 0], [40, 41, 0], [40, 42, 0], [41, 43, 0], [41, 44, 0], [42, 45, 0], [41, 46, 0], [41, 47, 0], [40, 47, 0], [39, 48, 0], [38, 48, 0], [37, 47, 0], [36, 47, 0], [35, 46, 0], [33, 46, 0], [32, 45, 0], [30, 45, 0], [29, 44, 0], [23, 44, 0], [22, 45, 0], [20, 45, 0], [19, 46, 0], [17, 46, 0], [16, 47, 0], [15, 47, 0], [14, 48, 0], [8, 48, 0], [7, 47, 0]];
        VAR pos Percent_PtD{10} := [[9, 42, 0], [12, 42, 0], [14, 40, 0], [14, 37, 0], [11, 34, 0], [8, 34, 0], [6, 36, 0], [6, 39, 0], [9, 42, 0], [12, 42, 0]];
        VAR pos Ampersand_PtA{130} := [[18, 48, 0], [17, 47, 0], [16, 47, 0], [15, 46, 0], [14, 46, 0], [12, 44, 0], [12, 43, 0], [11, 42, 0], [11, 41, 0], [10, 40, 0], [10, 33, 0], [11, 32, 0], [11, 30, 0], [12, 29, 0], [12, 28, 0], [10, 26, 0], [9, 26, 0], [8, 25, 0], [7, 25, 0], [2, 20, 0], [2, 19, 0], [1, 18, 0], [1, 17, 0], [0, 16, 0], [0, 10, 0], [1, 9, 0], [1, 8, 0], [2, 7, 0], [2, 6, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [9, 1, 0], [10, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [28, 6, 0], [32, 2, 0], [33, 2, 0], [34, 1, 0], [35, 1, 0], [36, 0, 0], [41, 0, 0], [42, 1, 0], [43, 1, 0], [45, 3, 0], [45, 4, 0], [46, 5, 0], [46, 7, 0], [45, 8, 0], [45, 9, 0], [44, 9, 0], [43, 10, 0], [42, 9, 0], [41, 9, 0], [41, 8, 0], [39, 6, 0], [37, 6, 0], [36, 7, 0], [35, 7, 0], [32, 10, 0], [32, 11, 0], [33, 12, 0], [33, 13, 0], [34, 14, 0], [34, 15, 0], [35, 16, 0], [35, 18, 0], [36, 19, 0], [36, 20, 0], [37, 21, 0], [37, 23, 0], [38, 24, 0], [38, 25, 0], [40, 27, 0], [41, 26, 0], [41, 25, 0], [42, 25, 0], [43, 24, 0], [44, 25, 0], [45, 25, 0], [45, 26, 0], [46, 27, 0], [46, 29, 0], [45, 30, 0], [45, 31, 0], [43, 33, 0], [42, 33, 0], [41, 34, 0], [39, 34, 0], [38, 33, 0], [37, 33, 0], [34, 30, 0], [34, 29, 0], [33, 28, 0], [33, 27, 0], [32, 26, 0], [32, 25, 0], [31, 24, 0], [31, 22, 0], [30, 21, 0], [30, 20, 0], [29, 19, 0], [29, 17, 0], [28, 16, 0], [26, 18, 0], [26, 19, 0], [24, 21, 0], [24, 22, 0], [21, 25, 0], [26, 30, 0], [26, 31, 0], [27, 32, 0], [27, 33, 0], [28, 34, 0], [28, 40, 0], [27, 41, 0], [27, 42, 0], [26, 43, 0], [26, 44, 0], [24, 46, 0], [23, 46, 0], [22, 47, 0], [21, 47, 0], [20, 48, 0], [18, 48, 0], [17, 47, 0]];
        VAR pos Ampersand_PtB{30} := [[14, 21, 0], [15, 22, 0], [16, 22, 0], [17, 21, 0], [17, 20, 0], [19, 18, 0], [19, 17, 0], [22, 14, 0], [22, 13, 0], [24, 11, 0], [24, 10, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [11, 6, 0], [10, 7, 0], [9, 7, 0], [7, 9, 0], [7, 10, 0], [6, 11, 0], [6, 15, 0], [7, 16, 0], [7, 17, 0], [9, 19, 0], [10, 19, 0], [11, 20, 0], [12, 20, 0], [13, 21, 0], [14, 21, 0], [15, 22, 0]];
        VAR pos Ampersand_PtC{13} := [[19, 42, 0], [22, 39, 0], [22, 35, 0], [21, 34, 0], [21, 33, 0], [19, 31, 0], [18, 31, 0], [17, 32, 0], [17, 34, 0], [16, 35, 0], [16, 39, 0], [19, 42, 0], [22, 39, 0]];
        VAR pos OpenBracket_PtA{79} := [[13, 67, 0], [9, 63, 0], [9, 62, 0], [7, 60, 0], [7, 59, 0], [6, 58, 0], [6, 57, 0], [5, 56, 0], [5, 55, 0], [4, 54, 0], [4, 53, 0], [3, 52, 0], [3, 51, 0], [2, 50, 0], [2, 48, 0], [1, 47, 0], [1, 43, 0], [0, 42, 0], [0, 28, 0], [1, 27, 0], [1, 23, 0], [2, 22, 0], [2, 20, 0], [3, 19, 0], [3, 18, 0], [4, 17, 0], [4, 16, 0], [5, 15, 0], [5, 14, 0], [6, 13, 0], [6, 12, 0], [7, 11, 0], [7, 10, 0], [9, 8, 0], [9, 7, 0], [15, 1, 0], [16, 1, 0], [17, 0, 0], [18, 1, 0], [19, 1, 0], [19, 2, 0], [20, 3, 0], [19, 4, 0], [19, 5, 0], [15, 9, 0], [15, 10, 0], [13, 12, 0], [13, 13, 0], [11, 15, 0], [11, 16, 0], [10, 17, 0], [10, 18, 0], [9, 19, 0], [9, 20, 0], [8, 21, 0], [8, 24, 0], [7, 25, 0], [7, 29, 0], [6, 30, 0], [6, 40, 0], [7, 41, 0], [7, 45, 0], [8, 46, 0], [8, 49, 0], [9, 50, 0], [9, 51, 0], [10, 52, 0], [10, 53, 0], [11, 54, 0], [11, 55, 0], [13, 57, 0], [13, 58, 0], [15, 60, 0], [15, 61, 0], [19, 65, 0], [19, 66, 0], [20, 67, 0], [13, 67, 0], [9, 63, 0]];
        VAR pos CloseBracket_PtA{79} := [[0, 67, 0], [1, 66, 0], [1, 65, 0], [5, 61, 0], [5, 60, 0], [7, 58, 0], [7, 57, 0], [9, 55, 0], [9, 54, 0], [10, 53, 0], [10, 52, 0], [11, 51, 0], [11, 50, 0], [12, 49, 0], [12, 46, 0], [13, 45, 0], [13, 41, 0], [14, 40, 0], [14, 30, 0], [13, 29, 0], [13, 25, 0], [12, 24, 0], [12, 21, 0], [11, 20, 0], [11, 19, 0], [10, 18, 0], [10, 17, 0], [9, 16, 0], [9, 15, 0], [7, 13, 0], [7, 12, 0], [5, 10, 0], [5, 9, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [11, 7, 0], [11, 8, 0], [13, 10, 0], [13, 11, 0], [14, 12, 0], [14, 13, 0], [15, 14, 0], [15, 15, 0], [16, 16, 0], [16, 17, 0], [17, 18, 0], [17, 19, 0], [18, 20, 0], [18, 22, 0], [19, 23, 0], [19, 27, 0], [20, 28, 0], [20, 42, 0], [19, 43, 0], [19, 47, 0], [18, 48, 0], [18, 50, 0], [17, 51, 0], [17, 52, 0], [16, 53, 0], [16, 54, 0], [15, 55, 0], [15, 56, 0], [14, 57, 0], [14, 58, 0], [13, 59, 0], [13, 60, 0], [11, 62, 0], [11, 63, 0], [7, 67, 0], [0, 67, 0], [1, 66, 0]];
        VAR pos Asterisk_PtA{86} := [[13, 30, 0], [12, 29, 0], [11, 29, 0], [11, 28, 0], [10, 27, 0], [10, 22, 0], [9, 21, 0], [8, 22, 0], [7, 22, 0], [5, 24, 0], [4, 23, 0], [3, 24, 0], [2, 23, 0], [1, 23, 0], [1, 22, 0], [0, 21, 0], [1, 20, 0], [1, 18, 0], [2, 18, 0], [3, 17, 0], [4, 17, 0], [6, 15, 0], [4, 13, 0], [3, 13, 0], [2, 12, 0], [1, 12, 0], [1, 10, 0], [0, 9, 0], [1, 8, 0], [1, 7, 0], [2, 7, 0], [3, 6, 0], [4, 7, 0], [5, 6, 0], [7, 8, 0], [8, 8, 0], [9, 9, 0], [10, 8, 0], [10, 3, 0], [11, 2, 0], [11, 1, 0], [12, 1, 0], [13, 0, 0], [14, 1, 0], [15, 1, 0], [15, 2, 0], [16, 3, 0], [16, 8, 0], [17, 9, 0], [18, 8, 0], [19, 8, 0], [21, 6, 0], [22, 7, 0], [23, 6, 0], [24, 7, 0], [25, 7, 0], [25, 8, 0], [26, 9, 0], [25, 10, 0], [25, 12, 0], [24, 12, 0], [23, 13, 0], [22, 13, 0], [20, 15, 0], [22, 17, 0], [23, 17, 0], [24, 18, 0], [25, 18, 0], [25, 20, 0], [26, 21, 0], [25, 22, 0], [25, 23, 0], [24, 23, 0], [23, 24, 0], [22, 23, 0], [21, 24, 0], [19, 22, 0], [18, 22, 0], [17, 21, 0], [16, 22, 0], [16, 27, 0], [15, 28, 0], [15, 29, 0], [14, 29, 0], [13, 30, 0], [12, 29, 0]];
        VAR pos Plus_PtA{46} := [[21, 42, 0], [20, 41, 0], [19, 41, 0], [19, 40, 0], [18, 39, 0], [18, 25, 0], [17, 24, 0], [3, 24, 0], [2, 23, 0], [1, 23, 0], [1, 22, 0], [0, 21, 0], [1, 20, 0], [1, 19, 0], [2, 19, 0], [3, 18, 0], [17, 18, 0], [18, 17, 0], [18, 3, 0], [19, 2, 0], [19, 1, 0], [20, 1, 0], [21, 0, 0], [22, 1, 0], [23, 1, 0], [23, 2, 0], [24, 3, 0], [24, 17, 0], [25, 18, 0], [39, 18, 0], [40, 19, 0], [41, 19, 0], [41, 20, 0], [42, 21, 0], [41, 22, 0], [41, 23, 0], [40, 23, 0], [39, 24, 0], [25, 24, 0], [24, 25, 0], [24, 39, 0], [23, 40, 0], [23, 41, 0], [22, 41, 0], [21, 42, 0], [20, 41, 0]];
        VAR pos Comma_PtA{31} := [[5, 18, 0], [4, 17, 0], [3, 17, 0], [1, 15, 0], [1, 14, 0], [0, 13, 0], [1, 12, 0], [1, 11, 0], [3, 9, 0], [3, 7, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [8, 4, 0], [8, 5, 0], [9, 6, 0], [9, 7, 0], [10, 8, 0], [10, 13, 0], [9, 14, 0], [9, 15, 0], [7, 17, 0], [6, 17, 0], [5, 18, 0], [4, 17, 0]];
        VAR pos Minus_PtA{20} := [[3, 6, 0], [2, 5, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [39, 0, 0], [40, 1, 0], [41, 1, 0], [41, 2, 0], [42, 3, 0], [41, 4, 0], [41, 5, 0], [40, 5, 0], [39, 6, 0], [3, 6, 0], [2, 5, 0]];
        VAR pos Fullstop_PtA{22} := [[5, 10, 0], [4, 9, 0], [3, 9, 0], [1, 7, 0], [1, 6, 0], [0, 5, 0], [1, 4, 0], [1, 3, 0], [3, 1, 0], [4, 1, 0], [5, 0, 0], [6, 1, 0], [7, 1, 0], [9, 3, 0], [9, 4, 0], [10, 5, 0], [9, 6, 0], [9, 7, 0], [7, 9, 0], [6, 9, 0], [5, 10, 0], [4, 9, 0]];
        VAR pos ForwardSlash_PtA{123} := [[36, 67, 0], [34, 65, 0], [34, 64, 0], [33, 63, 0], [33, 62, 0], [32, 61, 0], [32, 60, 0], [30, 58, 0], [30, 57, 0], [29, 56, 0], [29, 55, 0], [28, 54, 0], [28, 53, 0], [27, 52, 0], [27, 51, 0], [25, 49, 0], [25, 48, 0], [24, 47, 0], [24, 46, 0], [23, 45, 0], [23, 44, 0], [21, 42, 0], [21, 41, 0], [20, 40, 0], [20, 39, 0], [19, 38, 0], [19, 37, 0], [18, 36, 0], [18, 35, 0], [16, 33, 0], [16, 32, 0], [15, 31, 0], [15, 30, 0], [14, 29, 0], [14, 28, 0], [12, 26, 0], [12, 25, 0], [11, 24, 0], [11, 23, 0], [10, 22, 0], [10, 21, 0], [9, 20, 0], [9, 19, 0], [7, 17, 0], [7, 16, 0], [6, 15, 0], [6, 14, 0], [5, 13, 0], [5, 12, 0], [3, 10, 0], [3, 9, 0], [2, 8, 0], [2, 7, 0], [1, 6, 0], [1, 5, 0], [0, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [6, 2, 0], [6, 3, 0], [7, 4, 0], [7, 5, 0], [8, 6, 0], [8, 7, 0], [10, 9, 0], [10, 10, 0], [11, 11, 0], [11, 12, 0], [12, 13, 0], [12, 14, 0], [13, 15, 0], [13, 16, 0], [15, 18, 0], [15, 19, 0], [16, 20, 0], [16, 21, 0], [17, 22, 0], [17, 23, 0], [19, 25, 0], [19, 26, 0], [20, 27, 0], [20, 28, 0], [21, 29, 0], [21, 30, 0], [22, 31, 0], [22, 32, 0], [24, 34, 0], [24, 35, 0], [25, 36, 0], [25, 37, 0], [26, 38, 0], [26, 39, 0], [28, 41, 0], [28, 42, 0], [29, 43, 0], [29, 44, 0], [30, 45, 0], [30, 46, 0], [31, 47, 0], [31, 48, 0], [33, 50, 0], [33, 51, 0], [34, 52, 0], [34, 53, 0], [35, 54, 0], [35, 55, 0], [37, 57, 0], [37, 58, 0], [38, 59, 0], [38, 60, 0], [39, 61, 0], [39, 62, 0], [40, 63, 0], [40, 64, 0], [42, 66, 0], [42, 67, 0], [36, 67, 0], [34, 65, 0]];
        VAR pos Zero_PtA{58} := [[13, 48, 0], [12, 47, 0], [10, 47, 0], [9, 46, 0], [8, 46, 0], [5, 43, 0], [5, 42, 0], [3, 40, 0], [3, 39, 0], [2, 38, 0], [2, 36, 0], [1, 35, 0], [1, 31, 0], [0, 30, 0], [0, 18, 0], [1, 17, 0], [1, 13, 0], [2, 12, 0], [2, 10, 0], [3, 9, 0], [3, 8, 0], [5, 6, 0], [5, 5, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [12, 1, 0], [13, 0, 0], [21, 0, 0], [22, 1, 0], [24, 1, 0], [25, 2, 0], [26, 2, 0], [29, 5, 0], [29, 6, 0], [31, 8, 0], [31, 9, 0], [32, 10, 0], [32, 12, 0], [33, 13, 0], [33, 17, 0], [34, 18, 0], [34, 30, 0], [33, 31, 0], [33, 35, 0], [32, 36, 0], [32, 38, 0], [31, 39, 0], [31, 40, 0], [29, 42, 0], [29, 43, 0], [26, 46, 0], [25, 46, 0], [24, 47, 0], [22, 47, 0], [21, 48, 0], [13, 48, 0], [12, 47, 0]];
        VAR pos Zero_PtB{42} := [[14, 41, 0], [15, 42, 0], [19, 42, 0], [20, 41, 0], [22, 41, 0], [25, 38, 0], [25, 37, 0], [26, 36, 0], [26, 34, 0], [27, 33, 0], [27, 29, 0], [28, 28, 0], [28, 20, 0], [27, 19, 0], [27, 15, 0], [26, 14, 0], [26, 12, 0], [25, 11, 0], [25, 10, 0], [22, 7, 0], [20, 7, 0], [19, 6, 0], [15, 6, 0], [14, 7, 0], [12, 7, 0], [9, 10, 0], [9, 11, 0], [8, 12, 0], [8, 14, 0], [7, 15, 0], [7, 19, 0], [6, 20, 0], [6, 28, 0], [7, 29, 0], [7, 33, 0], [8, 34, 0], [8, 36, 0], [9, 37, 0], [9, 38, 0], [12, 41, 0], [14, 41, 0], [15, 42, 0]];
        VAR pos One_PtA{36} := [[13, 48, 0], [12, 47, 0], [11, 47, 0], [5, 41, 0], [4, 41, 0], [3, 40, 0], [2, 40, 0], [1, 39, 0], [1, 38, 0], [0, 37, 0], [1, 36, 0], [1, 35, 0], [2, 35, 0], [3, 34, 0], [4, 34, 0], [5, 35, 0], [6, 35, 0], [7, 36, 0], [8, 36, 0], [9, 37, 0], [10, 36, 0], [10, 3, 0], [11, 2, 0], [11, 1, 0], [12, 1, 0], [13, 0, 0], [14, 1, 0], [15, 1, 0], [15, 2, 0], [16, 3, 0], [16, 45, 0], [15, 46, 0], [15, 47, 0], [14, 47, 0], [13, 48, 0], [12, 47, 0]];
        VAR pos Two_PtA{77} := [[12, 48, 0], [11, 47, 0], [10, 47, 0], [9, 46, 0], [8, 46, 0], [4, 42, 0], [4, 41, 0], [3, 40, 0], [3, 39, 0], [2, 38, 0], [2, 35, 0], [3, 34, 0], [3, 33, 0], [4, 33, 0], [5, 32, 0], [6, 33, 0], [7, 33, 0], [7, 34, 0], [8, 35, 0], [8, 37, 0], [9, 38, 0], [9, 39, 0], [11, 41, 0], [12, 41, 0], [13, 42, 0], [21, 42, 0], [22, 41, 0], [23, 41, 0], [25, 39, 0], [25, 38, 0], [26, 37, 0], [26, 33, 0], [25, 32, 0], [25, 31, 0], [23, 29, 0], [23, 28, 0], [21, 26, 0], [21, 25, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [33, 4, 0], [33, 5, 0], [32, 5, 0], [31, 6, 0], [12, 6, 0], [11, 7, 0], [27, 23, 0], [27, 24, 0], [29, 26, 0], [29, 27, 0], [30, 28, 0], [30, 29, 0], [31, 30, 0], [31, 31, 0], [32, 32, 0], [32, 38, 0], [31, 39, 0], [31, 40, 0], [30, 41, 0], [30, 42, 0], [26, 46, 0], [25, 46, 0], [24, 47, 0], [23, 47, 0], [22, 48, 0], [12, 48, 0], [11, 47, 0]];
        VAR pos Three_PtA{100} := [[7, 48, 0], [6, 47, 0], [5, 47, 0], [5, 46, 0], [4, 45, 0], [5, 44, 0], [5, 43, 0], [6, 43, 0], [7, 42, 0], [21, 42, 0], [22, 41, 0], [21, 40, 0], [21, 39, 0], [18, 36, 0], [18, 35, 0], [15, 32, 0], [15, 30, 0], [14, 29, 0], [15, 28, 0], [15, 27, 0], [16, 27, 0], [17, 26, 0], [23, 26, 0], [24, 25, 0], [25, 25, 0], [26, 24, 0], [26, 23, 0], [27, 22, 0], [27, 20, 0], [28, 19, 0], [28, 15, 0], [27, 14, 0], [27, 12, 0], [26, 11, 0], [26, 10, 0], [24, 8, 0], [23, 8, 0], [22, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [10, 7, 0], [9, 8, 0], [8, 8, 0], [7, 9, 0], [7, 10, 0], [6, 11, 0], [6, 12, 0], [5, 13, 0], [4, 13, 0], [3, 14, 0], [2, 13, 0], [1, 13, 0], [1, 12, 0], [0, 11, 0], [0, 10, 0], [1, 9, 0], [1, 8, 0], [2, 7, 0], [2, 6, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [10, 1, 0], [11, 0, 0], [21, 0, 0], [22, 1, 0], [24, 1, 0], [25, 2, 0], [26, 2, 0], [32, 8, 0], [32, 9, 0], [33, 10, 0], [33, 12, 0], [34, 13, 0], [34, 21, 0], [33, 22, 0], [33, 24, 0], [32, 25, 0], [32, 26, 0], [28, 30, 0], [27, 30, 0], [26, 31, 0], [25, 31, 0], [24, 32, 0], [24, 33, 0], [25, 34, 0], [25, 35, 0], [28, 38, 0], [28, 39, 0], [31, 42, 0], [31, 44, 0], [32, 45, 0], [31, 46, 0], [31, 47, 0], [30, 47, 0], [29, 48, 0], [7, 48, 0], [6, 47, 0]];
        VAR pos Four_PtA{54} := [[23, 48, 0], [22, 47, 0], [21, 47, 0], [18, 44, 0], [18, 43, 0], [16, 41, 0], [16, 40, 0], [13, 37, 0], [13, 36, 0], [11, 34, 0], [11, 33, 0], [8, 30, 0], [8, 29, 0], [6, 27, 0], [6, 26, 0], [3, 23, 0], [3, 22, 0], [1, 20, 0], [1, 18, 0], [0, 17, 0], [1, 16, 0], [1, 15, 0], [2, 15, 0], [3, 14, 0], [19, 14, 0], [20, 13, 0], [20, 3, 0], [21, 2, 0], [21, 1, 0], [22, 1, 0], [23, 0, 0], [24, 1, 0], [25, 1, 0], [25, 2, 0], [26, 3, 0], [26, 13, 0], [27, 14, 0], [33, 14, 0], [34, 15, 0], [35, 15, 0], [35, 16, 0], [36, 17, 0], [35, 18, 0], [35, 19, 0], [34, 19, 0], [33, 20, 0], [27, 20, 0], [26, 21, 0], [26, 45, 0], [25, 46, 0], [25, 47, 0], [24, 47, 0], [23, 48, 0], [22, 47, 0]];
        VAR pos Four_PtB{15} := [[18, 33, 0], [19, 34, 0], [20, 33, 0], [20, 21, 0], [19, 20, 0], [11, 20, 0], [10, 21, 0], [10, 22, 0], [13, 25, 0], [13, 26, 0], [15, 28, 0], [15, 29, 0], [18, 32, 0], [18, 33, 0], [19, 34, 0]];
        VAR pos Five_PtA{103} := [[7, 48, 0], [6, 47, 0], [5, 47, 0], [5, 46, 0], [4, 45, 0], [4, 41, 0], [3, 40, 0], [3, 32, 0], [2, 31, 0], [2, 27, 0], [3, 26, 0], [3, 25, 0], [4, 25, 0], [5, 24, 0], [6, 25, 0], [7, 25, 0], [8, 26, 0], [9, 26, 0], [10, 27, 0], [12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 27, 0], [22, 27, 0], [23, 26, 0], [24, 26, 0], [26, 24, 0], [26, 23, 0], [27, 22, 0], [27, 20, 0], [28, 19, 0], [28, 15, 0], [27, 14, 0], [27, 12, 0], [26, 11, 0], [26, 10, 0], [24, 8, 0], [23, 8, 0], [22, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [10, 7, 0], [9, 8, 0], [8, 8, 0], [7, 9, 0], [7, 10, 0], [6, 11, 0], [6, 12, 0], [5, 13, 0], [4, 13, 0], [3, 14, 0], [2, 13, 0], [1, 13, 0], [1, 12, 0], [0, 11, 0], [0, 10, 0], [1, 9, 0], [1, 8, 0], [2, 7, 0], [2, 6, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [10, 1, 0], [11, 0, 0], [21, 0, 0], [22, 1, 0], [24, 1, 0], [25, 2, 0], [26, 2, 0], [32, 8, 0], [32, 9, 0], [33, 10, 0], [33, 12, 0], [34, 13, 0], [34, 21, 0], [33, 22, 0], [33, 24, 0], [32, 25, 0], [32, 26, 0], [26, 32, 0], [25, 32, 0], [24, 33, 0], [22, 33, 0], [21, 34, 0], [11, 34, 0], [10, 33, 0], [9, 34, 0], [9, 40, 0], [11, 42, 0], [27, 42, 0], [28, 43, 0], [29, 43, 0], [29, 44, 0], [30, 45, 0], [29, 46, 0], [29, 47, 0], [28, 47, 0], [27, 48, 0], [7, 48, 0], [6, 47, 0]];
        VAR pos Six_PtA{82} := [[13, 48, 0], [12, 47, 0], [10, 47, 0], [9, 46, 0], [8, 46, 0], [5, 43, 0], [5, 42, 0], [3, 40, 0], [3, 39, 0], [2, 38, 0], [2, 36, 0], [1, 35, 0], [1, 31, 0], [0, 30, 0], [0, 15, 0], [1, 14, 0], [1, 11, 0], [2, 10, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [12, 1, 0], [13, 0, 0], [19, 0, 0], [20, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [30, 8, 0], [30, 9, 0], [31, 10, 0], [31, 12, 0], [32, 13, 0], [32, 19, 0], [31, 20, 0], [31, 22, 0], [30, 23, 0], [30, 24, 0], [24, 30, 0], [23, 30, 0], [22, 31, 0], [20, 31, 0], [19, 32, 0], [13, 32, 0], [12, 31, 0], [10, 31, 0], [9, 30, 0], [8, 30, 0], [7, 31, 0], [7, 33, 0], [8, 34, 0], [8, 36, 0], [9, 37, 0], [9, 38, 0], [12, 41, 0], [14, 41, 0], [15, 42, 0], [19, 42, 0], [20, 41, 0], [22, 41, 0], [24, 39, 0], [24, 38, 0], [25, 37, 0], [26, 37, 0], [27, 36, 0], [28, 37, 0], [29, 37, 0], [29, 38, 0], [30, 39, 0], [30, 40, 0], [29, 41, 0], [29, 42, 0], [28, 43, 0], [28, 44, 0], [26, 46, 0], [25, 46, 0], [24, 47, 0], [22, 47, 0], [21, 48, 0], [13, 48, 0], [12, 47, 0]];
        VAR pos Six_PtB{42} := [[14, 25, 0], [15, 26, 0], [17, 26, 0], [18, 25, 0], [20, 25, 0], [21, 24, 0], [22, 24, 0], [24, 22, 0], [24, 21, 0], [25, 20, 0], [25, 18, 0], [26, 17, 0], [26, 15, 0], [25, 14, 0], [25, 12, 0], [24, 11, 0], [24, 10, 0], [22, 8, 0], [21, 8, 0], [20, 7, 0], [18, 7, 0], [17, 6, 0], [15, 6, 0], [14, 7, 0], [12, 7, 0], [11, 8, 0], [10, 8, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 15, 0], [6, 16, 0], [6, 17, 0], [7, 18, 0], [7, 20, 0], [8, 21, 0], [8, 22, 0], [10, 24, 0], [11, 24, 0], [12, 25, 0], [14, 25, 0], [15, 26, 0]];
        VAR pos Seven_PtA{101} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [1, 44, 0], [1, 43, 0], [2, 43, 0], [3, 42, 0], [25, 42, 0], [26, 41, 0], [25, 40, 0], [25, 39, 0], [24, 38, 0], [24, 36, 0], [23, 35, 0], [23, 34, 0], [22, 33, 0], [22, 32, 0], [21, 31, 0], [21, 30, 0], [20, 29, 0], [20, 28, 0], [19, 27, 0], [19, 26, 0], [18, 25, 0], [18, 24, 0], [17, 23, 0], [17, 22, 0], [16, 21, 0], [16, 20, 0], [15, 19, 0], [15, 18, 0], [14, 17, 0], [14, 15, 0], [13, 14, 0], [13, 13, 0], [12, 12, 0], [12, 11, 0], [11, 10, 0], [11, 9, 0], [10, 8, 0], [10, 7, 0], [9, 6, 0], [9, 5, 0], [8, 4, 0], [8, 3, 0], [9, 2, 0], [9, 1, 0], [10, 1, 0], [11, 0, 0], [12, 1, 0], [13, 1, 0], [14, 2, 0], [14, 3, 0], [15, 4, 0], [15, 5, 0], [16, 6, 0], [16, 7, 0], [17, 8, 0], [17, 9, 0], [18, 10, 0], [18, 12, 0], [19, 13, 0], [19, 14, 0], [20, 15, 0], [20, 16, 0], [21, 17, 0], [21, 18, 0], [22, 19, 0], [22, 20, 0], [23, 21, 0], [23, 22, 0], [24, 23, 0], [24, 24, 0], [25, 25, 0], [25, 26, 0], [26, 27, 0], [26, 28, 0], [27, 29, 0], [27, 30, 0], [28, 31, 0], [28, 33, 0], [29, 34, 0], [29, 35, 0], [30, 36, 0], [30, 37, 0], [31, 38, 0], [31, 39, 0], [32, 40, 0], [32, 41, 0], [33, 42, 0], [33, 43, 0], [34, 44, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Eight_PtA{64} := [[11, 48, 0], [10, 47, 0], [8, 47, 0], [7, 46, 0], [6, 46, 0], [4, 44, 0], [4, 43, 0], [3, 42, 0], [3, 41, 0], [2, 40, 0], [2, 34, 0], [3, 33, 0], [3, 32, 0], [4, 31, 0], [4, 30, 0], [7, 27, 0], [2, 22, 0], [2, 21, 0], [1, 20, 0], [1, 19, 0], [0, 18, 0], [0, 10, 0], [1, 9, 0], [1, 8, 0], [2, 7, 0], [2, 6, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [10, 1, 0], [11, 0, 0], [23, 0, 0], [24, 1, 0], [26, 1, 0], [27, 2, 0], [28, 2, 0], [32, 6, 0], [32, 7, 0], [33, 8, 0], [33, 9, 0], [34, 10, 0], [34, 18, 0], [33, 19, 0], [33, 20, 0], [32, 21, 0], [32, 22, 0], [27, 27, 0], [30, 30, 0], [30, 31, 0], [31, 32, 0], [31, 33, 0], [32, 34, 0], [32, 40, 0], [31, 41, 0], [31, 42, 0], [30, 43, 0], [30, 44, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [24, 47, 0], [23, 48, 0], [11, 48, 0], [10, 47, 0]];
        VAR pos Eight_PtB{34} := [[14, 23, 0], [15, 24, 0], [19, 24, 0], [20, 23, 0], [22, 23, 0], [23, 22, 0], [24, 22, 0], [27, 19, 0], [27, 18, 0], [28, 17, 0], [28, 11, 0], [27, 10, 0], [27, 9, 0], [26, 8, 0], [25, 8, 0], [24, 7, 0], [22, 7, 0], [21, 6, 0], [13, 6, 0], [12, 7, 0], [10, 7, 0], [9, 8, 0], [8, 8, 0], [7, 9, 0], [7, 10, 0], [6, 11, 0], [6, 17, 0], [7, 18, 0], [7, 19, 0], [10, 22, 0], [11, 22, 0], [12, 23, 0], [14, 23, 0], [15, 24, 0]];
        VAR pos Eight_PtC{18} := [[12, 41, 0], [13, 42, 0], [21, 42, 0], [22, 41, 0], [24, 41, 0], [26, 39, 0], [26, 35, 0], [23, 32, 0], [21, 32, 0], [20, 31, 0], [14, 31, 0], [13, 32, 0], [11, 32, 0], [8, 35, 0], [8, 39, 0], [10, 41, 0], [12, 41, 0], [13, 42, 0]];
        VAR pos Nine_PtA{82} := [[13, 48, 0], [12, 47, 0], [10, 47, 0], [9, 46, 0], [8, 46, 0], [2, 40, 0], [2, 39, 0], [1, 38, 0], [1, 36, 0], [0, 35, 0], [0, 29, 0], [1, 28, 0], [1, 26, 0], [2, 25, 0], [2, 24, 0], [8, 18, 0], [9, 18, 0], [10, 17, 0], [12, 17, 0], [13, 16, 0], [19, 16, 0], [20, 17, 0], [22, 17, 0], [23, 18, 0], [24, 18, 0], [25, 17, 0], [25, 15, 0], [24, 14, 0], [24, 12, 0], [23, 11, 0], [23, 10, 0], [20, 7, 0], [18, 7, 0], [17, 6, 0], [13, 6, 0], [12, 7, 0], [10, 7, 0], [8, 9, 0], [8, 10, 0], [7, 11, 0], [6, 11, 0], [5, 12, 0], [4, 11, 0], [3, 11, 0], [3, 10, 0], [2, 9, 0], [2, 8, 0], [3, 7, 0], [3, 6, 0], [4, 5, 0], [4, 4, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [10, 1, 0], [11, 0, 0], [19, 0, 0], [20, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [27, 5, 0], [27, 6, 0], [29, 8, 0], [29, 9, 0], [30, 10, 0], [30, 12, 0], [31, 13, 0], [31, 17, 0], [32, 18, 0], [32, 33, 0], [31, 34, 0], [31, 37, 0], [30, 38, 0], [30, 40, 0], [24, 46, 0], [23, 46, 0], [22, 47, 0], [20, 47, 0], [19, 48, 0], [13, 48, 0], [12, 47, 0]];
        VAR pos Nine_PtB{42} := [[14, 41, 0], [15, 42, 0], [17, 42, 0], [18, 41, 0], [20, 41, 0], [21, 40, 0], [22, 40, 0], [24, 38, 0], [24, 37, 0], [25, 36, 0], [25, 33, 0], [26, 32, 0], [26, 31, 0], [25, 30, 0], [25, 28, 0], [24, 27, 0], [24, 26, 0], [22, 24, 0], [21, 24, 0], [20, 23, 0], [18, 23, 0], [17, 22, 0], [15, 22, 0], [14, 23, 0], [12, 23, 0], [11, 24, 0], [10, 24, 0], [8, 26, 0], [8, 27, 0], [7, 28, 0], [7, 30, 0], [6, 31, 0], [6, 33, 0], [7, 34, 0], [7, 36, 0], [8, 37, 0], [8, 38, 0], [10, 40, 0], [11, 40, 0], [12, 41, 0], [14, 41, 0], [15, 42, 0]];
        VAR pos Colon_PtA{22} := [[5, 10, 0], [4, 9, 0], [3, 9, 0], [1, 7, 0], [1, 6, 0], [0, 5, 0], [1, 4, 0], [1, 3, 0], [3, 1, 0], [4, 1, 0], [5, 0, 0], [6, 1, 0], [7, 1, 0], [9, 3, 0], [9, 4, 0], [10, 5, 0], [9, 6, 0], [9, 7, 0], [7, 9, 0], [6, 9, 0], [5, 10, 0], [4, 9, 0]];
        VAR pos Colon_PtB{22} := [[5, 34, 0], [4, 33, 0], [3, 33, 0], [1, 31, 0], [1, 30, 0], [0, 29, 0], [1, 28, 0], [1, 27, 0], [3, 25, 0], [4, 25, 0], [5, 24, 0], [6, 25, 0], [7, 25, 0], [9, 27, 0], [9, 28, 0], [10, 29, 0], [9, 30, 0], [9, 31, 0], [7, 33, 0], [6, 33, 0], [5, 34, 0], [4, 33, 0]];
        VAR pos SemiColon_PtA{31} := [[5, 18, 0], [4, 17, 0], [3, 17, 0], [1, 15, 0], [1, 14, 0], [0, 13, 0], [1, 12, 0], [1, 11, 0], [3, 9, 0], [3, 7, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [8, 4, 0], [8, 5, 0], [9, 6, 0], [9, 7, 0], [10, 8, 0], [10, 13, 0], [9, 14, 0], [9, 15, 0], [7, 17, 0], [6, 17, 0], [5, 18, 0], [4, 17, 0]];
        VAR pos SemiColon_PtB{22} := [[5, 42, 0], [4, 41, 0], [3, 41, 0], [1, 39, 0], [1, 38, 0], [0, 37, 0], [1, 36, 0], [1, 35, 0], [3, 33, 0], [4, 33, 0], [5, 32, 0], [6, 33, 0], [7, 33, 0], [9, 35, 0], [9, 36, 0], [10, 37, 0], [9, 38, 0], [9, 39, 0], [7, 41, 0], [6, 41, 0], [5, 42, 0], [4, 41, 0]];
        VAR pos OpenAngleBracket_PtA{124} := [[34, 42, 0], [33, 41, 0], [32, 41, 0], [31, 40, 0], [30, 40, 0], [29, 39, 0], [28, 39, 0], [27, 38, 0], [26, 38, 0], [24, 36, 0], [23, 36, 0], [22, 35, 0], [21, 35, 0], [20, 34, 0], [19, 34, 0], [17, 32, 0], [16, 32, 0], [15, 31, 0], [14, 31, 0], [13, 30, 0], [12, 30, 0], [11, 29, 0], [10, 29, 0], [8, 27, 0], [7, 27, 0], [6, 26, 0], [5, 26, 0], [4, 25, 0], [3, 25, 0], [1, 23, 0], [1, 22, 0], [0, 21, 0], [1, 20, 0], [1, 19, 0], [3, 17, 0], [4, 17, 0], [5, 16, 0], [6, 16, 0], [7, 15, 0], [8, 15, 0], [10, 13, 0], [11, 13, 0], [12, 12, 0], [13, 12, 0], [14, 11, 0], [15, 11, 0], [16, 10, 0], [17, 10, 0], [19, 8, 0], [20, 8, 0], [21, 7, 0], [22, 7, 0], [23, 6, 0], [24, 6, 0], [26, 4, 0], [27, 4, 0], [28, 3, 0], [29, 3, 0], [30, 2, 0], [31, 2, 0], [32, 1, 0], [33, 1, 0], [34, 0, 0], [35, 0, 0], [36, 1, 0], [37, 1, 0], [37, 2, 0], [38, 3, 0], [37, 4, 0], [37, 5, 0], [35, 7, 0], [34, 7, 0], [33, 8, 0], [32, 8, 0], [31, 9, 0], [30, 9, 0], [28, 11, 0], [27, 11, 0], [26, 12, 0], [25, 12, 0], [24, 13, 0], [23, 13, 0], [22, 14, 0], [21, 14, 0], [19, 16, 0], [18, 16, 0], [17, 17, 0], [16, 17, 0], [15, 18, 0], [14, 18, 0], [12, 20, 0], [11, 20, 0], [10, 21, 0], [11, 22, 0], [12, 22, 0], [14, 24, 0], [15, 24, 0], [16, 25, 0], [17, 25, 0], [18, 26, 0], [19, 26, 0], [21, 28, 0], [22, 28, 0], [23, 29, 0], [24, 29, 0], [25, 30, 0], [26, 30, 0], [27, 31, 0], [28, 31, 0], [30, 33, 0], [31, 33, 0], [32, 34, 0], [33, 34, 0], [34, 35, 0], [35, 35, 0], [37, 37, 0], [37, 38, 0], [38, 39, 0], [37, 40, 0], [37, 41, 0], [36, 41, 0], [35, 42, 0], [34, 42, 0], [33, 41, 0]];
        VAR pos CloseAngleBracket_PtA{124} := [[3, 42, 0], [2, 41, 0], [1, 41, 0], [1, 40, 0], [0, 39, 0], [1, 38, 0], [1, 37, 0], [3, 35, 0], [4, 35, 0], [5, 34, 0], [6, 34, 0], [7, 33, 0], [8, 33, 0], [10, 31, 0], [11, 31, 0], [12, 30, 0], [13, 30, 0], [14, 29, 0], [15, 29, 0], [16, 28, 0], [17, 28, 0], [19, 26, 0], [20, 26, 0], [21, 25, 0], [22, 25, 0], [23, 24, 0], [24, 24, 0], [26, 22, 0], [27, 22, 0], [28, 21, 0], [27, 20, 0], [26, 20, 0], [24, 18, 0], [23, 18, 0], [22, 17, 0], [21, 17, 0], [20, 16, 0], [19, 16, 0], [17, 14, 0], [16, 14, 0], [15, 13, 0], [14, 13, 0], [13, 12, 0], [12, 12, 0], [11, 11, 0], [10, 11, 0], [8, 9, 0], [7, 9, 0], [6, 8, 0], [5, 8, 0], [4, 7, 0], [3, 7, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 0, 0], [5, 1, 0], [6, 1, 0], [7, 2, 0], [8, 2, 0], [9, 3, 0], [10, 3, 0], [11, 4, 0], [12, 4, 0], [14, 6, 0], [15, 6, 0], [16, 7, 0], [17, 7, 0], [18, 8, 0], [19, 8, 0], [21, 10, 0], [22, 10, 0], [23, 11, 0], [24, 11, 0], [25, 12, 0], [26, 12, 0], [27, 13, 0], [28, 13, 0], [30, 15, 0], [31, 15, 0], [32, 16, 0], [33, 16, 0], [34, 17, 0], [35, 17, 0], [37, 19, 0], [37, 20, 0], [38, 21, 0], [37, 22, 0], [37, 23, 0], [35, 25, 0], [34, 25, 0], [33, 26, 0], [32, 26, 0], [31, 27, 0], [30, 27, 0], [28, 29, 0], [27, 29, 0], [26, 30, 0], [25, 30, 0], [24, 31, 0], [23, 31, 0], [22, 32, 0], [21, 32, 0], [19, 34, 0], [18, 34, 0], [17, 35, 0], [16, 35, 0], [15, 36, 0], [14, 36, 0], [12, 38, 0], [11, 38, 0], [10, 39, 0], [9, 39, 0], [8, 40, 0], [7, 40, 0], [6, 41, 0], [5, 41, 0], [4, 42, 0], [3, 42, 0], [2, 41, 0]];
        VAR pos Equal_PtA{20} := [[3, 6, 0], [2, 5, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [39, 0, 0], [40, 1, 0], [41, 1, 0], [41, 2, 0], [42, 3, 0], [41, 4, 0], [41, 5, 0], [40, 5, 0], [39, 6, 0], [3, 6, 0], [2, 5, 0]];
        VAR pos Equal_PtB{20} := [[3, 18, 0], [2, 17, 0], [1, 17, 0], [1, 16, 0], [0, 15, 0], [1, 14, 0], [1, 13, 0], [2, 13, 0], [3, 12, 0], [39, 12, 0], [40, 13, 0], [41, 13, 0], [41, 14, 0], [42, 15, 0], [41, 16, 0], [41, 17, 0], [40, 17, 0], [39, 18, 0], [3, 18, 0], [2, 17, 0]];
        VAR pos Question_PtA{22} := [[15, 10, 0], [14, 9, 0], [13, 9, 0], [11, 7, 0], [11, 6, 0], [10, 5, 0], [11, 4, 0], [11, 3, 0], [13, 1, 0], [14, 1, 0], [15, 0, 0], [16, 1, 0], [17, 1, 0], [19, 3, 0], [19, 4, 0], [20, 5, 0], [19, 6, 0], [19, 7, 0], [17, 9, 0], [16, 9, 0], [15, 10, 0], [14, 9, 0]];
        VAR pos Question_PtB{78} := [[10, 48, 0], [9, 47, 0], [8, 47, 0], [7, 46, 0], [6, 46, 0], [2, 42, 0], [2, 41, 0], [1, 40, 0], [1, 39, 0], [0, 38, 0], [0, 35, 0], [1, 34, 0], [1, 33, 0], [2, 33, 0], [3, 32, 0], [4, 33, 0], [5, 33, 0], [5, 34, 0], [6, 35, 0], [6, 37, 0], [7, 38, 0], [7, 39, 0], [9, 41, 0], [10, 41, 0], [11, 42, 0], [19, 42, 0], [20, 41, 0], [21, 41, 0], [23, 39, 0], [23, 38, 0], [24, 37, 0], [24, 33, 0], [23, 32, 0], [23, 31, 0], [21, 29, 0], [20, 29, 0], [19, 28, 0], [18, 28, 0], [17, 27, 0], [16, 27, 0], [15, 26, 0], [14, 26, 0], [13, 25, 0], [13, 24, 0], [12, 23, 0], [12, 17, 0], [13, 16, 0], [13, 15, 0], [14, 15, 0], [15, 14, 0], [16, 15, 0], [17, 15, 0], [17, 16, 0], [18, 17, 0], [18, 21, 0], [19, 22, 0], [20, 22, 0], [21, 23, 0], [22, 23, 0], [23, 24, 0], [24, 24, 0], [28, 28, 0], [28, 29, 0], [29, 30, 0], [29, 31, 0], [30, 32, 0], [30, 38, 0], [29, 39, 0], [29, 40, 0], [28, 41, 0], [28, 42, 0], [24, 46, 0], [23, 46, 0], [22, 47, 0], [21, 47, 0], [20, 48, 0], [10, 48, 0], [9, 47, 0]];
        VAR pos At_PtA{79} := [[19, 48, 0], [18, 47, 0], [16, 47, 0], [15, 46, 0], [14, 46, 0], [13, 45, 0], [12, 45, 0], [11, 44, 0], [10, 44, 0], [4, 38, 0], [4, 37, 0], [3, 36, 0], [3, 35, 0], [2, 34, 0], [2, 33, 0], [1, 32, 0], [1, 30, 0], [0, 29, 0], [0, 19, 0], [1, 18, 0], [1, 16, 0], [2, 15, 0], [2, 14, 0], [3, 13, 0], [3, 12, 0], [4, 11, 0], [4, 10, 0], [10, 4, 0], [11, 4, 0], [12, 3, 0], [13, 3, 0], [14, 2, 0], [15, 2, 0], [16, 1, 0], [18, 1, 0], [19, 0, 0], [29, 0, 0], [30, 1, 0], [32, 1, 0], [33, 2, 0], [34, 2, 0], [35, 3, 0], [36, 3, 0], [37, 4, 0], [38, 4, 0], [39, 5, 0], [39, 6, 0], [40, 7, 0], [39, 8, 0], [39, 9, 0], [40, 10, 0], [41, 10, 0], [42, 11, 0], [43, 11, 0], [46, 14, 0], [46, 15, 0], [47, 16, 0], [47, 17, 0], [48, 18, 0], [48, 29, 0], [47, 30, 0], [47, 32, 0], [46, 33, 0], [46, 34, 0], [45, 35, 0], [45, 36, 0], [44, 37, 0], [44, 38, 0], [38, 44, 0], [37, 44, 0], [36, 45, 0], [35, 45, 0], [34, 46, 0], [33, 46, 0], [32, 47, 0], [30, 47, 0], [29, 48, 0], [19, 48, 0], [18, 47, 0]];
        VAR pos At_PtB{18} := [[20, 31, 0], [21, 32, 0], [27, 32, 0], [30, 29, 0], [30, 19, 0], [27, 16, 0], [21, 16, 0], [20, 17, 0], [19, 17, 0], [17, 19, 0], [17, 20, 0], [16, 21, 0], [16, 27, 0], [17, 28, 0], [17, 29, 0], [19, 31, 0], [20, 31, 0], [21, 32, 0]];
        VAR pos At_PtC{21} := [[35, 37, 0], [36, 38, 0], [39, 35, 0], [39, 34, 0], [40, 33, 0], [40, 31, 0], [41, 30, 0], [41, 28, 0], [42, 27, 0], [42, 19, 0], [41, 18, 0], [41, 17, 0], [40, 16, 0], [38, 16, 0], [37, 17, 0], [37, 18, 0], [36, 19, 0], [36, 35, 0], [35, 36, 0], [35, 37, 0], [36, 38, 0]];
        VAR pos At_PtD{8} := [[33, 38, 0], [34, 39, 0], [35, 39, 0], [36, 38, 0], [35, 37, 0], [34, 37, 0], [33, 38, 0], [34, 39, 0]];
        VAR pos At_PtE{73} := [[20, 41, 0], [21, 42, 0], [27, 42, 0], [28, 41, 0], [30, 41, 0], [31, 40, 0], [33, 40, 0], [34, 39, 0], [32, 37, 0], [29, 37, 0], [28, 38, 0], [20, 38, 0], [19, 37, 0], [18, 37, 0], [17, 36, 0], [16, 36, 0], [12, 32, 0], [12, 31, 0], [11, 30, 0], [11, 29, 0], [10, 28, 0], [10, 20, 0], [11, 19, 0], [11, 18, 0], [12, 17, 0], [12, 16, 0], [16, 12, 0], [17, 12, 0], [18, 11, 0], [19, 11, 0], [20, 10, 0], [28, 10, 0], [29, 11, 0], [30, 11, 0], [31, 12, 0], [32, 12, 0], [33, 13, 0], [36, 10, 0], [35, 9, 0], [34, 9, 0], [33, 8, 0], [31, 8, 0], [30, 7, 0], [28, 7, 0], [27, 6, 0], [21, 6, 0], [20, 7, 0], [18, 7, 0], [17, 8, 0], [15, 8, 0], [14, 9, 0], [13, 9, 0], [9, 13, 0], [9, 14, 0], [8, 15, 0], [8, 17, 0], [7, 18, 0], [7, 20, 0], [6, 21, 0], [6, 27, 0], [7, 28, 0], [7, 30, 0], [8, 31, 0], [8, 33, 0], [9, 34, 0], [9, 35, 0], [13, 39, 0], [14, 39, 0], [15, 40, 0], [17, 40, 0], [18, 41, 0], [20, 41, 0], [21, 42, 0]];
        VAR pos Upper_A_PtA{109} := [[19, 48, 0], [18, 47, 0], [17, 47, 0], [16, 46, 0], [16, 45, 0], [15, 44, 0], [15, 42, 0], [14, 41, 0], [14, 39, 0], [13, 38, 0], [13, 37, 0], [12, 36, 0], [12, 34, 0], [11, 33, 0], [11, 32, 0], [10, 31, 0], [10, 29, 0], [9, 28, 0], [9, 26, 0], [8, 25, 0], [8, 24, 0], [7, 23, 0], [7, 21, 0], [6, 20, 0], [6, 18, 0], [5, 17, 0], [5, 16, 0], [4, 15, 0], [4, 13, 0], [3, 12, 0], [3, 11, 0], [2, 10, 0], [2, 8, 0], [1, 7, 0], [1, 5, 0], [0, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [6, 2, 0], [6, 3, 0], [7, 4, 0], [7, 6, 0], [8, 7, 0], [8, 9, 0], [9, 10, 0], [9, 11, 0], [10, 12, 0], [10, 13, 0], [11, 14, 0], [27, 14, 0], [28, 13, 0], [28, 12, 0], [29, 11, 0], [29, 10, 0], [30, 9, 0], [30, 7, 0], [31, 6, 0], [31, 4, 0], [32, 3, 0], [32, 2, 0], [33, 1, 0], [34, 1, 0], [35, 0, 0], [36, 1, 0], [37, 1, 0], [37, 2, 0], [38, 3, 0], [38, 4, 0], [37, 5, 0], [37, 7, 0], [36, 8, 0], [36, 10, 0], [35, 11, 0], [35, 12, 0], [34, 13, 0], [34, 15, 0], [33, 16, 0], [33, 17, 0], [32, 18, 0], [32, 20, 0], [31, 21, 0], [31, 23, 0], [30, 24, 0], [30, 25, 0], [29, 26, 0], [29, 28, 0], [28, 29, 0], [28, 31, 0], [27, 32, 0], [27, 33, 0], [26, 34, 0], [26, 36, 0], [25, 37, 0], [25, 38, 0], [24, 39, 0], [24, 41, 0], [23, 42, 0], [23, 44, 0], [22, 45, 0], [22, 46, 0], [21, 47, 0], [20, 47, 0], [19, 48, 0], [18, 47, 0]];
        VAR pos Upper_A_PtB{29} := [[18, 35, 0], [19, 36, 0], [20, 35, 0], [20, 33, 0], [21, 32, 0], [21, 31, 0], [22, 30, 0], [22, 28, 0], [23, 27, 0], [23, 25, 0], [24, 24, 0], [24, 23, 0], [25, 22, 0], [25, 21, 0], [24, 20, 0], [14, 20, 0], [13, 21, 0], [13, 22, 0], [14, 23, 0], [14, 24, 0], [15, 25, 0], [15, 27, 0], [16, 28, 0], [16, 30, 0], [17, 31, 0], [17, 32, 0], [18, 33, 0], [18, 35, 0], [19, 36, 0]];
        VAR pos Upper_B_PtA{43} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [23, 0, 0], [24, 1, 0], [26, 1, 0], [27, 2, 0], [28, 2, 0], [32, 6, 0], [32, 7, 0], [33, 8, 0], [33, 9, 0], [34, 10, 0], [34, 18, 0], [33, 19, 0], [33, 20, 0], [32, 21, 0], [32, 22, 0], [29, 25, 0], [32, 28, 0], [32, 29, 0], [33, 30, 0], [33, 31, 0], [34, 32, 0], [34, 38, 0], [33, 39, 0], [33, 40, 0], [32, 41, 0], [32, 42, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [24, 47, 0], [23, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_B_PtB{22} := [[6, 21, 0], [7, 22, 0], [21, 22, 0], [22, 21, 0], [24, 21, 0], [25, 20, 0], [26, 20, 0], [27, 19, 0], [27, 18, 0], [28, 17, 0], [28, 11, 0], [27, 10, 0], [27, 9, 0], [26, 8, 0], [25, 8, 0], [24, 7, 0], [22, 7, 0], [21, 6, 0], [7, 6, 0], [6, 7, 0], [6, 21, 0], [7, 22, 0]];
        VAR pos Upper_B_PtC{22} := [[6, 41, 0], [7, 42, 0], [21, 42, 0], [22, 41, 0], [24, 41, 0], [25, 40, 0], [26, 40, 0], [27, 39, 0], [27, 38, 0], [28, 37, 0], [28, 33, 0], [27, 32, 0], [27, 31, 0], [26, 30, 0], [25, 30, 0], [24, 29, 0], [22, 29, 0], [21, 28, 0], [7, 28, 0], [6, 29, 0], [6, 41, 0], [7, 42, 0]];
        VAR pos Upper_C_PtA{98} := [[14, 48, 0], [13, 47, 0], [12, 47, 0], [11, 46, 0], [10, 46, 0], [4, 40, 0], [4, 39, 0], [3, 38, 0], [3, 37, 0], [2, 36, 0], [2, 35, 0], [1, 34, 0], [1, 32, 0], [0, 31, 0], [0, 17, 0], [1, 16, 0], [1, 14, 0], [2, 13, 0], [2, 12, 0], [3, 11, 0], [3, 10, 0], [4, 9, 0], [4, 8, 0], [10, 2, 0], [11, 2, 0], [12, 1, 0], [13, 1, 0], [14, 0, 0], [24, 0, 0], [25, 1, 0], [26, 1, 0], [27, 2, 0], [28, 2, 0], [34, 8, 0], [34, 9, 0], [35, 10, 0], [35, 11, 0], [36, 12, 0], [36, 13, 0], [35, 14, 0], [35, 15, 0], [34, 15, 0], [33, 16, 0], [32, 15, 0], [31, 15, 0], [30, 14, 0], [30, 13, 0], [29, 12, 0], [29, 11, 0], [25, 7, 0], [24, 7, 0], [23, 6, 0], [15, 6, 0], [14, 7, 0], [13, 7, 0], [9, 11, 0], [9, 12, 0], [8, 13, 0], [8, 15, 0], [7, 16, 0], [7, 18, 0], [6, 19, 0], [6, 29, 0], [7, 30, 0], [7, 32, 0], [8, 33, 0], [8, 35, 0], [9, 36, 0], [9, 37, 0], [13, 41, 0], [14, 41, 0], [15, 42, 0], [23, 42, 0], [24, 41, 0], [25, 41, 0], [29, 37, 0], [29, 36, 0], [30, 35, 0], [30, 34, 0], [31, 33, 0], [32, 33, 0], [33, 32, 0], [34, 33, 0], [35, 33, 0], [35, 34, 0], [36, 35, 0], [36, 36, 0], [35, 37, 0], [35, 38, 0], [34, 39, 0], [34, 40, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [25, 47, 0], [24, 48, 0], [14, 48, 0], [13, 47, 0]];
        VAR pos Upper_D_PtA{40} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [19, 0, 0], [20, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [30, 8, 0], [30, 9, 0], [31, 10, 0], [31, 11, 0], [32, 12, 0], [32, 13, 0], [33, 14, 0], [33, 16, 0], [34, 17, 0], [34, 31, 0], [33, 32, 0], [33, 34, 0], [32, 35, 0], [32, 36, 0], [31, 37, 0], [31, 38, 0], [30, 39, 0], [30, 40, 0], [24, 46, 0], [23, 46, 0], [22, 47, 0], [20, 47, 0], [19, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_D_PtB{30} := [[6, 41, 0], [7, 42, 0], [17, 42, 0], [18, 41, 0], [20, 41, 0], [21, 40, 0], [22, 40, 0], [25, 37, 0], [25, 36, 0], [26, 35, 0], [26, 33, 0], [27, 32, 0], [27, 30, 0], [28, 29, 0], [28, 19, 0], [27, 18, 0], [27, 16, 0], [26, 15, 0], [26, 13, 0], [25, 12, 0], [25, 11, 0], [22, 8, 0], [21, 8, 0], [20, 7, 0], [18, 7, 0], [17, 6, 0], [7, 6, 0], [6, 7, 0], [6, 41, 0], [7, 42, 0]];
        VAR pos Upper_E_PtA{47} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [29, 0, 0], [30, 1, 0], [31, 1, 0], [31, 2, 0], [32, 3, 0], [31, 4, 0], [31, 5, 0], [30, 5, 0], [29, 6, 0], [7, 6, 0], [6, 7, 0], [6, 21, 0], [7, 22, 0], [19, 22, 0], [20, 23, 0], [21, 23, 0], [21, 24, 0], [22, 25, 0], [21, 26, 0], [21, 27, 0], [20, 27, 0], [19, 28, 0], [7, 28, 0], [6, 29, 0], [6, 41, 0], [7, 42, 0], [29, 42, 0], [30, 43, 0], [31, 43, 0], [31, 44, 0], [32, 45, 0], [31, 46, 0], [31, 47, 0], [30, 47, 0], [29, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_F_PtA{40} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 21, 0], [7, 22, 0], [19, 22, 0], [20, 23, 0], [21, 23, 0], [21, 24, 0], [22, 25, 0], [21, 26, 0], [21, 27, 0], [20, 27, 0], [19, 28, 0], [7, 28, 0], [6, 29, 0], [6, 41, 0], [7, 42, 0], [29, 42, 0], [30, 43, 0], [31, 43, 0], [31, 44, 0], [32, 45, 0], [31, 46, 0], [31, 47, 0], [30, 47, 0], [29, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_G_PtA{106} := [[14, 48, 0], [13, 47, 0], [12, 47, 0], [11, 46, 0], [10, 46, 0], [4, 40, 0], [4, 39, 0], [3, 38, 0], [3, 37, 0], [2, 36, 0], [2, 35, 0], [1, 34, 0], [1, 32, 0], [0, 31, 0], [0, 17, 0], [1, 16, 0], [1, 14, 0], [2, 13, 0], [2, 12, 0], [3, 11, 0], [3, 10, 0], [4, 9, 0], [4, 8, 0], [10, 2, 0], [11, 2, 0], [12, 1, 0], [13, 1, 0], [14, 0, 0], [24, 0, 0], [25, 1, 0], [26, 1, 0], [27, 2, 0], [28, 2, 0], [34, 8, 0], [34, 9, 0], [35, 10, 0], [35, 11, 0], [36, 12, 0], [36, 19, 0], [35, 20, 0], [35, 21, 0], [34, 21, 0], [33, 22, 0], [23, 22, 0], [22, 21, 0], [21, 21, 0], [21, 20, 0], [20, 19, 0], [21, 18, 0], [21, 17, 0], [22, 17, 0], [23, 16, 0], [29, 16, 0], [30, 15, 0], [30, 13, 0], [29, 12, 0], [29, 11, 0], [25, 7, 0], [24, 7, 0], [23, 6, 0], [15, 6, 0], [14, 7, 0], [13, 7, 0], [9, 11, 0], [9, 12, 0], [8, 13, 0], [8, 15, 0], [7, 16, 0], [7, 18, 0], [6, 19, 0], [6, 29, 0], [7, 30, 0], [7, 32, 0], [8, 33, 0], [8, 35, 0], [9, 36, 0], [9, 37, 0], [13, 41, 0], [14, 41, 0], [15, 42, 0], [23, 42, 0], [24, 41, 0], [25, 41, 0], [29, 37, 0], [29, 36, 0], [30, 35, 0], [30, 34, 0], [31, 33, 0], [32, 33, 0], [33, 32, 0], [34, 33, 0], [35, 33, 0], [35, 34, 0], [36, 35, 0], [36, 36, 0], [35, 37, 0], [35, 38, 0], [34, 39, 0], [34, 40, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [25, 47, 0], [24, 48, 0], [14, 48, 0], [13, 47, 0]];
        VAR pos Upper_H_PtA{46} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 21, 0], [7, 22, 0], [27, 22, 0], [28, 21, 0], [28, 3, 0], [29, 2, 0], [29, 1, 0], [30, 1, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [30, 47, 0], [29, 47, 0], [29, 46, 0], [28, 45, 0], [28, 29, 0], [27, 28, 0], [7, 28, 0], [6, 29, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_I_PtA{20} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_J_PtA{56} := [[23, 48, 0], [22, 47, 0], [21, 47, 0], [21, 46, 0], [20, 45, 0], [20, 13, 0], [19, 12, 0], [19, 10, 0], [18, 9, 0], [18, 8, 0], [17, 7, 0], [16, 7, 0], [15, 6, 0], [11, 6, 0], [10, 7, 0], [9, 7, 0], [8, 8, 0], [8, 9, 0], [7, 10, 0], [7, 12, 0], [6, 13, 0], [6, 17, 0], [5, 18, 0], [5, 19, 0], [4, 19, 0], [3, 20, 0], [2, 19, 0], [1, 19, 0], [1, 18, 0], [0, 17, 0], [0, 11, 0], [1, 10, 0], [1, 8, 0], [2, 7, 0], [2, 6, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [9, 1, 0], [10, 0, 0], [16, 0, 0], [17, 1, 0], [18, 1, 0], [19, 2, 0], [20, 2, 0], [24, 6, 0], [24, 7, 0], [25, 8, 0], [25, 10, 0], [26, 11, 0], [26, 45, 0], [25, 46, 0], [25, 47, 0], [24, 47, 0], [23, 48, 0], [22, 47, 0]];
        VAR pos Upper_K_PtA{64} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 16, 0], [12, 22, 0], [13, 22, 0], [14, 21, 0], [14, 20, 0], [17, 17, 0], [17, 16, 0], [20, 13, 0], [20, 12, 0], [23, 9, 0], [23, 8, 0], [26, 5, 0], [26, 4, 0], [29, 1, 0], [30, 1, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [33, 4, 0], [33, 6, 0], [30, 9, 0], [30, 10, 0], [27, 13, 0], [27, 14, 0], [24, 17, 0], [24, 18, 0], [21, 21, 0], [21, 22, 0], [18, 25, 0], [18, 26, 0], [17, 27, 0], [33, 43, 0], [33, 44, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [30, 47, 0], [29, 47, 0], [7, 25, 0], [6, 26, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_L_PtA{27} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [27, 0, 0], [28, 1, 0], [29, 1, 0], [29, 2, 0], [30, 3, 0], [29, 4, 0], [29, 5, 0], [28, 5, 0], [27, 6, 0], [7, 6, 0], [6, 7, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_M_PtA{132} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 24, 0], [7, 25, 0], [8, 24, 0], [8, 23, 0], [9, 22, 0], [9, 20, 0], [10, 19, 0], [10, 17, 0], [11, 16, 0], [11, 15, 0], [12, 14, 0], [12, 12, 0], [13, 11, 0], [13, 10, 0], [14, 9, 0], [14, 7, 0], [15, 6, 0], [15, 4, 0], [16, 3, 0], [16, 2, 0], [17, 1, 0], [18, 1, 0], [19, 0, 0], [20, 1, 0], [21, 1, 0], [22, 2, 0], [22, 3, 0], [23, 4, 0], [23, 6, 0], [24, 7, 0], [24, 9, 0], [25, 10, 0], [25, 11, 0], [26, 12, 0], [26, 14, 0], [27, 15, 0], [27, 16, 0], [28, 17, 0], [28, 19, 0], [29, 20, 0], [29, 22, 0], [30, 23, 0], [30, 24, 0], [31, 25, 0], [32, 24, 0], [32, 3, 0], [33, 2, 0], [33, 1, 0], [34, 1, 0], [35, 0, 0], [36, 1, 0], [37, 1, 0], [37, 2, 0], [38, 3, 0], [38, 45, 0], [37, 46, 0], [37, 47, 0], [36, 47, 0], [35, 48, 0], [34, 47, 0], [33, 47, 0], [32, 46, 0], [32, 45, 0], [31, 44, 0], [31, 42, 0], [30, 41, 0], [30, 39, 0], [29, 38, 0], [29, 37, 0], [28, 36, 0], [28, 34, 0], [27, 33, 0], [27, 32, 0], [26, 31, 0], [26, 29, 0], [25, 28, 0], [25, 26, 0], [24, 25, 0], [24, 24, 0], [23, 23, 0], [23, 21, 0], [22, 20, 0], [22, 18, 0], [21, 17, 0], [21, 16, 0], [20, 15, 0], [20, 13, 0], [19, 12, 0], [18, 13, 0], [18, 15, 0], [17, 16, 0], [17, 17, 0], [16, 18, 0], [16, 20, 0], [15, 21, 0], [15, 23, 0], [14, 24, 0], [14, 25, 0], [13, 26, 0], [13, 28, 0], [12, 29, 0], [12, 31, 0], [11, 32, 0], [11, 33, 0], [10, 34, 0], [10, 36, 0], [9, 37, 0], [9, 38, 0], [8, 39, 0], [8, 41, 0], [7, 42, 0], [7, 44, 0], [6, 45, 0], [6, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_N_PtA{78} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 32, 0], [7, 33, 0], [9, 31, 0], [9, 30, 0], [11, 28, 0], [11, 27, 0], [13, 25, 0], [13, 24, 0], [15, 22, 0], [15, 21, 0], [17, 19, 0], [17, 18, 0], [19, 16, 0], [19, 15, 0], [21, 13, 0], [21, 12, 0], [23, 10, 0], [23, 9, 0], [25, 7, 0], [25, 6, 0], [27, 4, 0], [27, 3, 0], [29, 1, 0], [30, 1, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [30, 47, 0], [29, 47, 0], [29, 46, 0], [28, 45, 0], [28, 16, 0], [27, 15, 0], [25, 17, 0], [25, 18, 0], [23, 20, 0], [23, 21, 0], [21, 23, 0], [21, 24, 0], [19, 26, 0], [19, 27, 0], [17, 29, 0], [17, 30, 0], [15, 32, 0], [15, 33, 0], [13, 35, 0], [13, 36, 0], [11, 38, 0], [11, 39, 0], [9, 41, 0], [9, 42, 0], [7, 44, 0], [7, 45, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_O_PtA{58} := [[14, 48, 0], [13, 47, 0], [12, 47, 0], [11, 46, 0], [10, 46, 0], [4, 40, 0], [4, 39, 0], [3, 38, 0], [3, 37, 0], [2, 36, 0], [2, 35, 0], [1, 34, 0], [1, 32, 0], [0, 31, 0], [0, 17, 0], [1, 16, 0], [1, 14, 0], [2, 13, 0], [2, 12, 0], [3, 11, 0], [3, 10, 0], [4, 9, 0], [4, 8, 0], [10, 2, 0], [11, 2, 0], [12, 1, 0], [13, 1, 0], [14, 0, 0], [24, 0, 0], [25, 1, 0], [26, 1, 0], [27, 2, 0], [28, 2, 0], [34, 8, 0], [34, 9, 0], [35, 10, 0], [35, 11, 0], [36, 12, 0], [36, 13, 0], [37, 14, 0], [37, 16, 0], [38, 17, 0], [38, 31, 0], [37, 32, 0], [37, 34, 0], [36, 35, 0], [36, 36, 0], [35, 37, 0], [35, 38, 0], [34, 39, 0], [34, 40, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [25, 47, 0], [24, 48, 0], [14, 48, 0], [13, 47, 0]];
        VAR pos Upper_O_PtB{42} := [[14, 41, 0], [15, 42, 0], [23, 42, 0], [24, 41, 0], [25, 41, 0], [29, 37, 0], [29, 36, 0], [30, 35, 0], [30, 33, 0], [31, 32, 0], [31, 30, 0], [32, 29, 0], [32, 19, 0], [31, 18, 0], [31, 16, 0], [30, 15, 0], [30, 13, 0], [29, 12, 0], [29, 11, 0], [25, 7, 0], [24, 7, 0], [23, 6, 0], [15, 6, 0], [14, 7, 0], [13, 7, 0], [9, 11, 0], [9, 12, 0], [8, 13, 0], [8, 15, 0], [7, 16, 0], [7, 18, 0], [6, 19, 0], [6, 29, 0], [7, 30, 0], [7, 32, 0], [8, 33, 0], [8, 35, 0], [9, 36, 0], [9, 37, 0], [13, 41, 0], [14, 41, 0], [15, 42, 0]];
        VAR pos Upper_P_PtA{38} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 19, 0], [7, 20, 0], [23, 20, 0], [24, 21, 0], [26, 21, 0], [27, 22, 0], [28, 22, 0], [32, 26, 0], [32, 27, 0], [33, 28, 0], [33, 29, 0], [34, 30, 0], [34, 38, 0], [33, 39, 0], [33, 40, 0], [32, 41, 0], [32, 42, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [24, 47, 0], [23, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_P_PtB{22} := [[6, 41, 0], [7, 42, 0], [21, 42, 0], [22, 41, 0], [24, 41, 0], [25, 40, 0], [26, 40, 0], [27, 39, 0], [27, 38, 0], [28, 37, 0], [28, 31, 0], [27, 30, 0], [27, 29, 0], [26, 28, 0], [25, 28, 0], [24, 27, 0], [22, 27, 0], [21, 26, 0], [7, 26, 0], [6, 27, 0], [6, 41, 0], [7, 42, 0]];
        VAR pos Upper_Q_PtA{66} := [[14, 52, 0], [13, 51, 0], [12, 51, 0], [11, 50, 0], [10, 50, 0], [4, 44, 0], [4, 43, 0], [3, 42, 0], [3, 41, 0], [2, 40, 0], [2, 39, 0], [1, 38, 0], [1, 36, 0], [0, 35, 0], [0, 21, 0], [1, 20, 0], [1, 18, 0], [2, 17, 0], [2, 16, 0], [3, 15, 0], [3, 14, 0], [4, 13, 0], [4, 12, 0], [10, 6, 0], [11, 6, 0], [12, 5, 0], [13, 5, 0], [14, 4, 0], [24, 4, 0], [25, 5, 0], [27, 5, 0], [31, 1, 0], [32, 1, 0], [33, 0, 0], [34, 1, 0], [35, 1, 0], [35, 2, 0], [36, 3, 0], [35, 4, 0], [35, 5, 0], [31, 9, 0], [34, 12, 0], [34, 13, 0], [35, 14, 0], [35, 15, 0], [36, 16, 0], [36, 17, 0], [37, 18, 0], [37, 20, 0], [38, 21, 0], [38, 35, 0], [37, 36, 0], [37, 38, 0], [36, 39, 0], [36, 40, 0], [35, 41, 0], [35, 42, 0], [34, 43, 0], [34, 44, 0], [28, 50, 0], [27, 50, 0], [26, 51, 0], [25, 51, 0], [24, 52, 0], [14, 52, 0], [13, 51, 0]];
        VAR pos Upper_Q_PtB{51} := [[14, 45, 0], [15, 46, 0], [23, 46, 0], [24, 45, 0], [25, 45, 0], [29, 41, 0], [29, 40, 0], [30, 39, 0], [30, 37, 0], [31, 36, 0], [31, 34, 0], [32, 33, 0], [32, 23, 0], [31, 22, 0], [31, 20, 0], [30, 19, 0], [30, 17, 0], [29, 16, 0], [29, 15, 0], [27, 13, 0], [23, 17, 0], [22, 17, 0], [21, 18, 0], [20, 17, 0], [19, 17, 0], [19, 16, 0], [18, 15, 0], [19, 14, 0], [19, 13, 0], [21, 11, 0], [20, 10, 0], [15, 10, 0], [14, 11, 0], [13, 11, 0], [9, 15, 0], [9, 16, 0], [8, 17, 0], [8, 19, 0], [7, 20, 0], [7, 22, 0], [6, 23, 0], [6, 33, 0], [7, 34, 0], [7, 36, 0], [8, 37, 0], [8, 39, 0], [9, 40, 0], [9, 41, 0], [13, 45, 0], [14, 45, 0], [15, 46, 0]];
        VAR pos Upper_R_PtA{74} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 21, 0], [7, 22, 0], [15, 22, 0], [16, 21, 0], [16, 20, 0], [18, 18, 0], [18, 17, 0], [20, 15, 0], [20, 14, 0], [21, 13, 0], [21, 12, 0], [23, 10, 0], [23, 9, 0], [25, 7, 0], [25, 6, 0], [27, 4, 0], [27, 3, 0], [28, 2, 0], [28, 1, 0], [30, 1, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [33, 4, 0], [34, 5, 0], [32, 7, 0], [32, 8, 0], [30, 10, 0], [30, 11, 0], [28, 13, 0], [28, 14, 0], [27, 15, 0], [27, 16, 0], [25, 18, 0], [25, 19, 0], [23, 21, 0], [23, 22, 0], [24, 23, 0], [26, 23, 0], [27, 24, 0], [28, 24, 0], [32, 28, 0], [32, 29, 0], [33, 30, 0], [33, 31, 0], [34, 32, 0], [34, 38, 0], [33, 39, 0], [33, 40, 0], [32, 41, 0], [32, 42, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [24, 47, 0], [23, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_R_PtB{22} := [[6, 41, 0], [7, 42, 0], [21, 42, 0], [22, 41, 0], [24, 41, 0], [25, 40, 0], [26, 40, 0], [27, 39, 0], [27, 38, 0], [28, 37, 0], [28, 33, 0], [27, 32, 0], [27, 31, 0], [26, 30, 0], [25, 30, 0], [24, 29, 0], [22, 29, 0], [21, 28, 0], [7, 28, 0], [6, 29, 0], [6, 41, 0], [7, 42, 0]];
        VAR pos Upper_S_PtA{116} := [[11, 48, 0], [10, 47, 0], [8, 47, 0], [7, 46, 0], [6, 46, 0], [1, 41, 0], [1, 40, 0], [0, 39, 0], [0, 34, 0], [1, 33, 0], [1, 32, 0], [2, 31, 0], [2, 30, 0], [6, 26, 0], [7, 26, 0], [8, 25, 0], [9, 25, 0], [10, 24, 0], [11, 24, 0], [12, 23, 0], [14, 23, 0], [15, 22, 0], [17, 22, 0], [18, 21, 0], [20, 21, 0], [21, 20, 0], [23, 20, 0], [24, 19, 0], [25, 19, 0], [27, 17, 0], [27, 16, 0], [28, 15, 0], [28, 10, 0], [26, 8, 0], [25, 8, 0], [24, 7, 0], [22, 7, 0], [21, 6, 0], [13, 6, 0], [12, 7, 0], [10, 7, 0], [9, 8, 0], [8, 8, 0], [5, 11, 0], [4, 11, 0], [3, 12, 0], [2, 11, 0], [1, 11, 0], [1, 10, 0], [0, 9, 0], [1, 8, 0], [1, 7, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [10, 1, 0], [11, 0, 0], [23, 0, 0], [24, 1, 0], [26, 1, 0], [27, 2, 0], [28, 2, 0], [33, 7, 0], [33, 8, 0], [34, 9, 0], [34, 16, 0], [33, 17, 0], [33, 18, 0], [32, 19, 0], [32, 20, 0], [28, 24, 0], [27, 24, 0], [26, 25, 0], [25, 25, 0], [24, 26, 0], [23, 26, 0], [22, 27, 0], [20, 27, 0], [19, 28, 0], [17, 28, 0], [16, 29, 0], [14, 29, 0], [13, 30, 0], [11, 30, 0], [10, 31, 0], [9, 31, 0], [7, 33, 0], [7, 34, 0], [6, 35, 0], [6, 38, 0], [8, 40, 0], [9, 40, 0], [10, 41, 0], [12, 41, 0], [13, 42, 0], [21, 42, 0], [22, 41, 0], [24, 41, 0], [25, 40, 0], [26, 40, 0], [29, 37, 0], [30, 37, 0], [31, 36, 0], [32, 37, 0], [33, 37, 0], [33, 38, 0], [34, 39, 0], [33, 40, 0], [33, 41, 0], [28, 46, 0], [27, 46, 0], [26, 47, 0], [24, 47, 0], [23, 48, 0], [11, 48, 0], [10, 47, 0]];
        VAR pos Upper_T_PtA{33} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [1, 44, 0], [1, 43, 0], [2, 43, 0], [3, 42, 0], [13, 42, 0], [14, 41, 0], [14, 3, 0], [15, 2, 0], [15, 1, 0], [16, 1, 0], [17, 0, 0], [18, 1, 0], [19, 1, 0], [19, 2, 0], [20, 3, 0], [20, 41, 0], [21, 42, 0], [31, 42, 0], [32, 43, 0], [33, 43, 0], [33, 44, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_U_PtA{60} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 13, 0], [1, 12, 0], [1, 10, 0], [2, 9, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [12, 1, 0], [13, 0, 0], [21, 0, 0], [22, 1, 0], [24, 1, 0], [25, 2, 0], [26, 2, 0], [32, 8, 0], [32, 9, 0], [33, 10, 0], [33, 12, 0], [34, 13, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [30, 47, 0], [29, 47, 0], [29, 46, 0], [28, 45, 0], [28, 15, 0], [27, 14, 0], [27, 12, 0], [26, 11, 0], [26, 10, 0], [24, 8, 0], [23, 8, 0], [22, 7, 0], [20, 7, 0], [19, 6, 0], [15, 6, 0], [14, 7, 0], [12, 7, 0], [11, 8, 0], [10, 8, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 14, 0], [6, 15, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_V_PtA{140} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 44, 0], [1, 43, 0], [1, 41, 0], [2, 40, 0], [2, 38, 0], [3, 37, 0], [3, 36, 0], [4, 35, 0], [4, 33, 0], [5, 32, 0], [5, 31, 0], [6, 30, 0], [6, 28, 0], [7, 27, 0], [7, 25, 0], [8, 24, 0], [8, 23, 0], [9, 22, 0], [9, 20, 0], [10, 19, 0], [10, 17, 0], [11, 16, 0], [11, 15, 0], [12, 14, 0], [12, 12, 0], [13, 11, 0], [13, 10, 0], [14, 9, 0], [14, 7, 0], [15, 6, 0], [15, 4, 0], [16, 3, 0], [16, 2, 0], [17, 1, 0], [18, 1, 0], [19, 0, 0], [20, 1, 0], [21, 1, 0], [22, 2, 0], [22, 3, 0], [23, 4, 0], [23, 6, 0], [24, 7, 0], [24, 9, 0], [25, 10, 0], [25, 11, 0], [26, 12, 0], [26, 14, 0], [27, 15, 0], [27, 16, 0], [28, 17, 0], [28, 19, 0], [29, 20, 0], [29, 22, 0], [30, 23, 0], [30, 24, 0], [31, 25, 0], [31, 27, 0], [32, 28, 0], [32, 30, 0], [33, 31, 0], [33, 32, 0], [34, 33, 0], [34, 35, 0], [35, 36, 0], [35, 37, 0], [36, 38, 0], [36, 40, 0], [37, 41, 0], [37, 43, 0], [38, 44, 0], [38, 45, 0], [37, 46, 0], [37, 47, 0], [36, 47, 0], [35, 48, 0], [34, 47, 0], [33, 47, 0], [32, 46, 0], [32, 45, 0], [31, 44, 0], [31, 42, 0], [30, 41, 0], [30, 39, 0], [29, 38, 0], [29, 37, 0], [28, 36, 0], [28, 34, 0], [27, 33, 0], [27, 32, 0], [26, 31, 0], [26, 29, 0], [25, 28, 0], [25, 26, 0], [24, 25, 0], [24, 24, 0], [23, 23, 0], [23, 21, 0], [22, 20, 0], [22, 18, 0], [21, 17, 0], [21, 16, 0], [20, 15, 0], [20, 13, 0], [19, 12, 0], [18, 13, 0], [18, 15, 0], [17, 16, 0], [17, 17, 0], [16, 18, 0], [16, 20, 0], [15, 21, 0], [15, 23, 0], [14, 24, 0], [14, 25, 0], [13, 26, 0], [13, 28, 0], [12, 29, 0], [12, 31, 0], [11, 32, 0], [11, 33, 0], [10, 34, 0], [10, 36, 0], [9, 37, 0], [9, 38, 0], [8, 39, 0], [8, 41, 0], [7, 42, 0], [7, 44, 0], [6, 45, 0], [6, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_W_PtA{160} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 43, 0], [1, 42, 0], [1, 39, 0], [2, 38, 0], [2, 34, 0], [3, 33, 0], [3, 30, 0], [4, 29, 0], [4, 26, 0], [5, 25, 0], [5, 22, 0], [6, 21, 0], [6, 18, 0], [7, 17, 0], [7, 13, 0], [8, 12, 0], [8, 9, 0], [9, 8, 0], [9, 5, 0], [10, 4, 0], [10, 2, 0], [11, 1, 0], [12, 1, 0], [13, 0, 0], [14, 1, 0], [15, 1, 0], [16, 2, 0], [16, 4, 0], [17, 5, 0], [17, 8, 0], [18, 9, 0], [18, 12, 0], [19, 13, 0], [19, 17, 0], [20, 18, 0], [20, 21, 0], [21, 22, 0], [21, 25, 0], [22, 26, 0], [22, 29, 0], [23, 30, 0], [24, 29, 0], [24, 26, 0], [25, 25, 0], [25, 22, 0], [26, 21, 0], [26, 18, 0], [27, 17, 0], [27, 13, 0], [28, 12, 0], [28, 9, 0], [29, 8, 0], [29, 5, 0], [30, 4, 0], [30, 2, 0], [31, 1, 0], [32, 1, 0], [33, 0, 0], [34, 1, 0], [35, 1, 0], [36, 2, 0], [36, 4, 0], [37, 5, 0], [37, 8, 0], [38, 9, 0], [38, 12, 0], [39, 13, 0], [39, 17, 0], [40, 18, 0], [40, 21, 0], [41, 22, 0], [41, 25, 0], [42, 26, 0], [42, 29, 0], [43, 30, 0], [43, 33, 0], [44, 34, 0], [44, 38, 0], [45, 39, 0], [45, 42, 0], [46, 43, 0], [46, 45, 0], [45, 46, 0], [45, 47, 0], [44, 47, 0], [43, 48, 0], [42, 47, 0], [41, 47, 0], [40, 46, 0], [40, 44, 0], [39, 43, 0], [39, 40, 0], [38, 39, 0], [38, 36, 0], [37, 35, 0], [37, 31, 0], [36, 30, 0], [36, 27, 0], [35, 26, 0], [35, 23, 0], [34, 22, 0], [34, 19, 0], [33, 18, 0], [32, 19, 0], [32, 22, 0], [31, 23, 0], [31, 26, 0], [30, 27, 0], [30, 30, 0], [29, 31, 0], [29, 35, 0], [28, 36, 0], [28, 39, 0], [27, 40, 0], [27, 43, 0], [26, 44, 0], [26, 46, 0], [25, 47, 0], [24, 47, 0], [23, 48, 0], [22, 47, 0], [21, 47, 0], [20, 46, 0], [20, 44, 0], [19, 43, 0], [19, 40, 0], [18, 39, 0], [18, 36, 0], [17, 35, 0], [17, 31, 0], [16, 30, 0], [16, 27, 0], [15, 26, 0], [15, 23, 0], [14, 22, 0], [14, 19, 0], [13, 18, 0], [12, 19, 0], [12, 22, 0], [11, 23, 0], [11, 26, 0], [10, 27, 0], [10, 30, 0], [9, 31, 0], [9, 35, 0], [8, 36, 0], [8, 39, 0], [7, 40, 0], [7, 43, 0], [6, 44, 0], [6, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_X_PtA{124} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [1, 44, 0], [1, 42, 0], [3, 40, 0], [3, 39, 0], [5, 37, 0], [5, 36, 0], [7, 34, 0], [7, 33, 0], [9, 31, 0], [9, 30, 0], [11, 28, 0], [11, 27, 0], [13, 25, 0], [13, 23, 0], [11, 21, 0], [11, 20, 0], [9, 18, 0], [9, 17, 0], [7, 15, 0], [7, 14, 0], [5, 12, 0], [5, 11, 0], [3, 9, 0], [3, 8, 0], [1, 6, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [7, 3, 0], [7, 4, 0], [9, 6, 0], [9, 7, 0], [11, 9, 0], [11, 10, 0], [13, 12, 0], [13, 13, 0], [15, 15, 0], [15, 16, 0], [17, 18, 0], [19, 16, 0], [19, 15, 0], [21, 13, 0], [21, 12, 0], [23, 10, 0], [23, 9, 0], [25, 7, 0], [25, 6, 0], [27, 4, 0], [27, 3, 0], [29, 1, 0], [30, 1, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [33, 4, 0], [33, 6, 0], [31, 8, 0], [31, 9, 0], [29, 11, 0], [29, 12, 0], [27, 14, 0], [27, 15, 0], [25, 17, 0], [25, 18, 0], [23, 20, 0], [23, 21, 0], [21, 23, 0], [21, 25, 0], [23, 27, 0], [23, 28, 0], [25, 30, 0], [25, 31, 0], [27, 33, 0], [27, 34, 0], [29, 36, 0], [29, 37, 0], [31, 39, 0], [31, 40, 0], [33, 42, 0], [33, 44, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [30, 47, 0], [29, 47, 0], [27, 45, 0], [27, 44, 0], [25, 42, 0], [25, 41, 0], [23, 39, 0], [23, 38, 0], [21, 36, 0], [21, 35, 0], [19, 33, 0], [19, 32, 0], [17, 30, 0], [15, 32, 0], [15, 33, 0], [13, 35, 0], [13, 36, 0], [11, 38, 0], [11, 39, 0], [9, 41, 0], [9, 42, 0], [7, 44, 0], [7, 45, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_Y_PtA{56} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [1, 44, 0], [1, 42, 0], [5, 38, 0], [5, 37, 0], [9, 33, 0], [9, 32, 0], [13, 28, 0], [13, 27, 0], [16, 24, 0], [16, 3, 0], [17, 2, 0], [17, 1, 0], [18, 1, 0], [19, 0, 0], [20, 1, 0], [21, 1, 0], [21, 2, 0], [22, 3, 0], [22, 24, 0], [25, 27, 0], [25, 28, 0], [29, 32, 0], [29, 33, 0], [33, 37, 0], [33, 38, 0], [37, 42, 0], [37, 44, 0], [38, 45, 0], [37, 46, 0], [37, 47, 0], [36, 47, 0], [35, 48, 0], [34, 47, 0], [33, 47, 0], [29, 43, 0], [29, 42, 0], [25, 38, 0], [25, 37, 0], [21, 33, 0], [21, 32, 0], [19, 30, 0], [17, 32, 0], [17, 33, 0], [13, 37, 0], [13, 38, 0], [9, 42, 0], [9, 43, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Upper_Z_PtA{82} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [1, 44, 0], [1, 43, 0], [2, 43, 0], [3, 42, 0], [24, 42, 0], [25, 41, 0], [23, 39, 0], [23, 38, 0], [21, 36, 0], [21, 35, 0], [19, 33, 0], [19, 32, 0], [17, 30, 0], [17, 29, 0], [15, 27, 0], [15, 26, 0], [13, 24, 0], [13, 23, 0], [11, 21, 0], [11, 20, 0], [9, 18, 0], [9, 17, 0], [7, 15, 0], [7, 14, 0], [5, 12, 0], [5, 11, 0], [3, 9, 0], [3, 8, 0], [1, 6, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [31, 0, 0], [32, 1, 0], [33, 1, 0], [33, 2, 0], [34, 3, 0], [33, 4, 0], [33, 5, 0], [32, 5, 0], [31, 6, 0], [10, 6, 0], [9, 7, 0], [11, 9, 0], [11, 10, 0], [13, 12, 0], [13, 13, 0], [15, 15, 0], [15, 16, 0], [17, 18, 0], [17, 19, 0], [19, 21, 0], [19, 22, 0], [21, 24, 0], [21, 25, 0], [23, 27, 0], [23, 28, 0], [25, 30, 0], [25, 31, 0], [27, 33, 0], [27, 34, 0], [29, 36, 0], [29, 37, 0], [31, 39, 0], [31, 40, 0], [33, 42, 0], [33, 44, 0], [34, 45, 0], [33, 46, 0], [33, 47, 0], [32, 47, 0], [31, 48, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos OpenSquareBracket_PtA{26} := [[0, 67, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [17, 0, 0], [18, 1, 0], [19, 1, 0], [19, 2, 0], [20, 3, 0], [19, 4, 0], [19, 5, 0], [18, 5, 0], [17, 6, 0], [7, 6, 0], [6, 7, 0], [6, 63, 0], [7, 64, 0], [17, 64, 0], [18, 65, 0], [19, 65, 0], [19, 66, 0], [20, 67, 0], [0, 67, 0], [0, 3, 0]];
        VAR pos CloseSquareBracket_PtB{26} := [[0, 67, 0], [1, 66, 0], [1, 65, 0], [2, 65, 0], [3, 64, 0], [13, 64, 0], [14, 63, 0], [14, 7, 0], [13, 6, 0], [3, 6, 0], [2, 5, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [17, 0, 0], [18, 1, 0], [19, 1, 0], [19, 2, 0], [20, 3, 0], [20, 67, 0], [0, 67, 0], [1, 66, 0]];
        VAR pos BackSlash_PtA{48} := [[3, 50, 0], [2, 49, 0], [1, 49, 0], [1, 48, 0], [0, 47, 0], [1, 46, 0], [1, 44, 0], [6, 39, 0], [6, 38, 0], [10, 34, 0], [10, 33, 0], [15, 28, 0], [15, 27, 0], [19, 23, 0], [19, 22, 0], [24, 17, 0], [24, 16, 0], [28, 12, 0], [28, 11, 0], [33, 6, 0], [33, 5, 0], [37, 1, 0], [38, 1, 0], [39, 0, 0], [40, 1, 0], [41, 1, 0], [41, 2, 0], [42, 3, 0], [41, 4, 0], [41, 6, 0], [36, 11, 0], [36, 12, 0], [32, 16, 0], [32, 17, 0], [27, 22, 0], [27, 23, 0], [23, 27, 0], [23, 28, 0], [18, 33, 0], [18, 34, 0], [14, 38, 0], [14, 39, 0], [9, 44, 0], [9, 45, 0], [5, 49, 0], [4, 49, 0], [3, 50, 0], [2, 49, 0]];
        VAR pos Power_PtA{70} := [[17, 16, 0], [15, 14, 0], [14, 14, 0], [12, 12, 0], [11, 12, 0], [10, 11, 0], [9, 11, 0], [7, 9, 0], [6, 9, 0], [4, 7, 0], [3, 7, 0], [2, 6, 0], [1, 6, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [5, 0, 0], [7, 2, 0], [8, 2, 0], [9, 3, 0], [10, 3, 0], [11, 4, 0], [12, 4, 0], [13, 5, 0], [14, 5, 0], [15, 6, 0], [16, 6, 0], [17, 7, 0], [18, 7, 0], [19, 8, 0], [20, 7, 0], [21, 7, 0], [22, 6, 0], [23, 6, 0], [24, 5, 0], [25, 5, 0], [26, 4, 0], [27, 4, 0], [28, 3, 0], [29, 3, 0], [30, 2, 0], [31, 2, 0], [33, 0, 0], [35, 0, 0], [36, 1, 0], [37, 1, 0], [37, 2, 0], [38, 3, 0], [37, 4, 0], [37, 6, 0], [36, 6, 0], [35, 7, 0], [34, 7, 0], [32, 9, 0], [31, 9, 0], [29, 11, 0], [28, 11, 0], [27, 12, 0], [26, 12, 0], [24, 14, 0], [23, 14, 0], [21, 16, 0], [20, 15, 0], [19, 16, 0], [18, 15, 0], [17, 16, 0], [15, 14, 0]];
        VAR pos Underscore_PtA{20} := [[3, 6, 0], [2, 5, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [35, 0, 0], [36, 1, 0], [37, 1, 0], [37, 2, 0], [38, 3, 0], [37, 4, 0], [37, 5, 0], [36, 5, 0], [35, 6, 0], [3, 6, 0], [2, 5, 0]];
        VAR pos InvertedSingleQuote_PtA{29} := [[5, 18, 0], [4, 17, 0], [3, 17, 0], [1, 15, 0], [1, 14, 0], [0, 13, 0], [1, 12, 0], [1, 11, 0], [5, 7, 0], [6, 7, 0], [11, 2, 0], [12, 2, 0], [13, 1, 0], [14, 1, 0], [15, 0, 0], [16, 1, 0], [17, 1, 0], [17, 2, 0], [18, 3, 0], [17, 4, 0], [17, 5, 0], [16, 6, 0], [16, 7, 0], [11, 12, 0], [11, 13, 0], [7, 17, 0], [6, 17, 0], [5, 18, 0], [4, 17, 0]];
        VAR pos Lower_A_PtA{46} := [[12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [2, 26, 0], [2, 25, 0], [1, 24, 0], [1, 22, 0], [0, 21, 0], [0, 13, 0], [1, 12, 0], [1, 10, 0], [2, 9, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [11, 1, 0], [12, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [25, 1, 0], [26, 1, 0], [27, 0, 0], [28, 1, 0], [29, 1, 0], [29, 2, 0], [30, 3, 0], [30, 31, 0], [29, 32, 0], [29, 33, 0], [28, 33, 0], [27, 34, 0], [26, 33, 0], [25, 33, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0]];
        VAR pos Lower_A_PtB{26} := [[12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 27, 0], [21, 27, 0], [24, 24, 0], [24, 10, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [11, 7, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 14, 0], [6, 15, 0], [6, 19, 0], [7, 20, 0], [7, 22, 0], [8, 23, 0], [8, 24, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0]];
        VAR pos Lower_B_PtA{48} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [6, 2, 0], [7, 2, 0], [8, 1, 0], [9, 1, 0], [10, 0, 0], [18, 0, 0], [19, 1, 0], [20, 1, 0], [21, 2, 0], [22, 2, 0], [28, 8, 0], [28, 9, 0], [29, 10, 0], [29, 12, 0], [30, 13, 0], [30, 21, 0], [29, 22, 0], [29, 24, 0], [28, 25, 0], [28, 26, 0], [22, 32, 0], [21, 32, 0], [20, 33, 0], [19, 33, 0], [18, 34, 0], [10, 34, 0], [9, 33, 0], [8, 33, 0], [7, 32, 0], [6, 33, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Lower_B_PtB{26} := [[10, 27, 0], [11, 28, 0], [17, 28, 0], [18, 27, 0], [19, 27, 0], [22, 24, 0], [22, 23, 0], [23, 22, 0], [23, 20, 0], [24, 19, 0], [24, 15, 0], [23, 14, 0], [23, 12, 0], [22, 11, 0], [22, 10, 0], [19, 7, 0], [18, 7, 0], [17, 6, 0], [11, 6, 0], [10, 7, 0], [9, 7, 0], [6, 10, 0], [6, 24, 0], [9, 27, 0], [10, 27, 0], [11, 28, 0]];
        VAR pos Lower_C_PtA{72} := [[12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [2, 26, 0], [2, 25, 0], [1, 24, 0], [1, 22, 0], [0, 21, 0], [0, 13, 0], [1, 12, 0], [1, 10, 0], [2, 9, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [11, 1, 0], [12, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [29, 7, 0], [29, 8, 0], [30, 9, 0], [29, 10, 0], [29, 11, 0], [28, 11, 0], [27, 12, 0], [26, 11, 0], [25, 11, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [11, 7, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 14, 0], [6, 15, 0], [6, 19, 0], [7, 20, 0], [7, 22, 0], [8, 23, 0], [8, 24, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 27, 0], [21, 27, 0], [25, 23, 0], [26, 23, 0], [27, 22, 0], [28, 23, 0], [29, 23, 0], [29, 24, 0], [30, 25, 0], [29, 26, 0], [29, 27, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0]];
        VAR pos Lower_D_PtA{48} := [[27, 48, 0], [26, 47, 0], [25, 47, 0], [25, 46, 0], [24, 45, 0], [24, 33, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [2, 26, 0], [2, 25, 0], [1, 24, 0], [1, 22, 0], [0, 21, 0], [0, 13, 0], [1, 12, 0], [1, 10, 0], [2, 9, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [11, 1, 0], [12, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [25, 1, 0], [26, 1, 0], [27, 0, 0], [28, 1, 0], [29, 1, 0], [29, 2, 0], [30, 3, 0], [30, 45, 0], [29, 46, 0], [29, 47, 0], [28, 47, 0], [27, 48, 0], [26, 47, 0]];
        VAR pos Lower_D_PtB{26} := [[12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 27, 0], [21, 27, 0], [24, 24, 0], [24, 10, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [11, 7, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 14, 0], [6, 15, 0], [6, 19, 0], [7, 20, 0], [7, 22, 0], [8, 23, 0], [8, 24, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0]];
        VAR pos Lower_E_PtA{63} := [[12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [2, 26, 0], [2, 25, 0], [1, 24, 0], [1, 22, 0], [0, 21, 0], [0, 13, 0], [1, 12, 0], [1, 10, 0], [2, 9, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [11, 1, 0], [12, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [29, 7, 0], [29, 8, 0], [30, 9, 0], [29, 10, 0], [29, 11, 0], [28, 11, 0], [27, 12, 0], [26, 11, 0], [25, 11, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [11, 7, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 14, 0], [6, 15, 0], [7, 16, 0], [27, 16, 0], [28, 17, 0], [29, 17, 0], [29, 18, 0], [30, 19, 0], [30, 24, 0], [29, 25, 0], [29, 26, 0], [28, 27, 0], [28, 28, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0]];
        VAR pos Lower_E_PtB{15} := [[12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 27, 0], [21, 27, 0], [23, 25, 0], [23, 24, 0], [24, 23, 0], [23, 22, 0], [9, 22, 0], [8, 23, 0], [8, 24, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0]];
        VAR pos Lower_F_PtA{60} := [[14, 48, 0], [13, 47, 0], [12, 47, 0], [11, 46, 0], [10, 46, 0], [8, 44, 0], [8, 43, 0], [7, 42, 0], [7, 40, 0], [6, 39, 0], [6, 35, 0], [5, 34, 0], [3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [1, 30, 0], [1, 29, 0], [2, 29, 0], [3, 28, 0], [5, 28, 0], [6, 27, 0], [6, 3, 0], [7, 2, 0], [7, 1, 0], [8, 1, 0], [9, 0, 0], [10, 1, 0], [11, 1, 0], [11, 2, 0], [12, 3, 0], [12, 27, 0], [13, 28, 0], [17, 28, 0], [18, 29, 0], [19, 29, 0], [19, 30, 0], [20, 31, 0], [19, 32, 0], [19, 33, 0], [18, 33, 0], [17, 34, 0], [13, 34, 0], [12, 35, 0], [12, 37, 0], [13, 38, 0], [13, 40, 0], [15, 42, 0], [19, 42, 0], [20, 43, 0], [21, 43, 0], [21, 44, 0], [22, 45, 0], [21, 46, 0], [21, 47, 0], [20, 47, 0], [19, 48, 0], [14, 48, 0], [13, 47, 0]];
        VAR pos Lower_G_PtA{73} := [[12, 48, 0], [11, 47, 0], [10, 47, 0], [9, 46, 0], [8, 46, 0], [2, 40, 0], [2, 39, 0], [1, 38, 0], [1, 36, 0], [0, 35, 0], [0, 27, 0], [1, 26, 0], [1, 24, 0], [2, 23, 0], [2, 22, 0], [8, 16, 0], [9, 16, 0], [10, 15, 0], [11, 15, 0], [12, 14, 0], [20, 14, 0], [21, 15, 0], [22, 15, 0], [23, 16, 0], [24, 15, 0], [24, 13, 0], [23, 12, 0], [23, 10, 0], [22, 9, 0], [22, 8, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [11, 7, 0], [10, 8, 0], [9, 8, 0], [8, 7, 0], [7, 7, 0], [7, 6, 0], [6, 5, 0], [7, 4, 0], [7, 3, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [11, 1, 0], [12, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [28, 6, 0], [28, 7, 0], [29, 8, 0], [29, 10, 0], [30, 11, 0], [30, 45, 0], [29, 46, 0], [29, 47, 0], [28, 47, 0], [27, 48, 0], [26, 47, 0], [25, 47, 0], [24, 46, 0], [23, 46, 0], [22, 47, 0], [21, 47, 0], [20, 48, 0], [12, 48, 0], [11, 47, 0]];
        VAR pos Lower_G_PtB{26} := [[12, 41, 0], [13, 42, 0], [19, 42, 0], [20, 41, 0], [21, 41, 0], [24, 38, 0], [24, 24, 0], [21, 21, 0], [20, 21, 0], [19, 20, 0], [13, 20, 0], [12, 21, 0], [11, 21, 0], [8, 24, 0], [8, 25, 0], [7, 26, 0], [7, 28, 0], [6, 29, 0], [6, 33, 0], [7, 34, 0], [7, 36, 0], [8, 37, 0], [8, 38, 0], [11, 41, 0], [12, 41, 0], [13, 42, 0]];
        VAR pos Lower_H_PtA{54} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 22, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0], [19, 28, 0], [21, 26, 0], [21, 24, 0], [22, 23, 0], [22, 3, 0], [23, 2, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [28, 25, 0], [27, 26, 0], [27, 28, 0], [26, 29, 0], [26, 30, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [7, 31, 0], [6, 32, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Lower_I_PtA{20} := [[5, 34, 0], [4, 33, 0], [3, 33, 0], [3, 32, 0], [2, 31, 0], [2, 3, 0], [3, 2, 0], [3, 1, 0], [4, 1, 0], [5, 0, 0], [6, 1, 0], [7, 1, 0], [7, 2, 0], [8, 3, 0], [8, 31, 0], [7, 32, 0], [7, 33, 0], [6, 33, 0], [5, 34, 0], [4, 33, 0]];
        VAR pos Lower_I_PtB{22} := [[5, 50, 0], [4, 49, 0], [3, 49, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [1, 44, 0], [1, 43, 0], [3, 41, 0], [4, 41, 0], [5, 40, 0], [6, 41, 0], [7, 41, 0], [9, 43, 0], [9, 44, 0], [10, 45, 0], [9, 46, 0], [9, 47, 0], [7, 49, 0], [6, 49, 0], [5, 50, 0], [4, 49, 0]];
        VAR pos Lower_J_PtA{34} := [[13, 48, 0], [12, 47, 0], [11, 47, 0], [11, 46, 0], [10, 45, 0], [10, 11, 0], [9, 10, 0], [9, 8, 0], [7, 6, 0], [3, 6, 0], [2, 5, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [8, 0, 0], [9, 1, 0], [10, 1, 0], [11, 2, 0], [12, 2, 0], [14, 4, 0], [14, 5, 0], [15, 6, 0], [15, 8, 0], [16, 9, 0], [16, 45, 0], [15, 46, 0], [15, 47, 0], [14, 47, 0], [13, 48, 0], [12, 47, 0]];
        VAR pos Lower_J_PtB{22} := [[13, 64, 0], [12, 63, 0], [11, 63, 0], [9, 61, 0], [9, 60, 0], [8, 59, 0], [9, 58, 0], [9, 57, 0], [11, 55, 0], [12, 55, 0], [13, 54, 0], [14, 55, 0], [15, 55, 0], [17, 57, 0], [17, 58, 0], [18, 59, 0], [17, 60, 0], [17, 61, 0], [15, 63, 0], [14, 63, 0], [13, 64, 0], [12, 63, 0]];
        VAR pos Lower_K_PtA{50} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 10, 0], [10, 14, 0], [11, 14, 0], [17, 8, 0], [17, 7, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [27, 4, 0], [27, 5, 0], [26, 6, 0], [26, 7, 0], [19, 14, 0], [19, 15, 0], [15, 19, 0], [25, 29, 0], [25, 30, 0], [26, 31, 0], [25, 32, 0], [25, 33, 0], [24, 33, 0], [23, 34, 0], [22, 33, 0], [21, 33, 0], [7, 19, 0], [6, 20, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Lower_L_PtA{20} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 45, 0], [5, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Lower_M_PtA{81} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 22, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0], [19, 28, 0], [21, 26, 0], [21, 24, 0], [22, 23, 0], [22, 3, 0], [23, 2, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [28, 22, 0], [33, 27, 0], [34, 27, 0], [35, 28, 0], [41, 28, 0], [43, 26, 0], [43, 24, 0], [44, 23, 0], [44, 3, 0], [45, 2, 0], [45, 1, 0], [46, 1, 0], [47, 0, 0], [48, 1, 0], [49, 1, 0], [49, 2, 0], [50, 3, 0], [50, 25, 0], [49, 26, 0], [49, 28, 0], [48, 29, 0], [48, 30, 0], [46, 32, 0], [45, 32, 0], [44, 33, 0], [43, 33, 0], [42, 34, 0], [34, 34, 0], [33, 33, 0], [32, 33, 0], [31, 32, 0], [30, 32, 0], [27, 29, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [7, 31, 0], [6, 31, 0], [5, 32, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_N_PtA{53} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 22, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0], [19, 28, 0], [21, 26, 0], [21, 24, 0], [22, 23, 0], [22, 3, 0], [23, 2, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [28, 25, 0], [27, 26, 0], [27, 28, 0], [26, 29, 0], [26, 30, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [7, 31, 0], [6, 31, 0], [5, 32, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_O_PtA{42} := [[12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [2, 26, 0], [2, 25, 0], [1, 24, 0], [1, 22, 0], [0, 21, 0], [0, 13, 0], [1, 12, 0], [1, 10, 0], [2, 9, 0], [2, 8, 0], [8, 2, 0], [9, 2, 0], [10, 1, 0], [11, 1, 0], [12, 0, 0], [20, 0, 0], [21, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [30, 8, 0], [30, 9, 0], [31, 10, 0], [31, 12, 0], [32, 13, 0], [32, 21, 0], [31, 22, 0], [31, 24, 0], [30, 25, 0], [30, 26, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [21, 33, 0], [20, 34, 0], [12, 34, 0], [11, 33, 0]];
        VAR pos Lower_O_PtB{34} := [[12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 27, 0], [21, 27, 0], [24, 24, 0], [24, 23, 0], [25, 22, 0], [25, 20, 0], [26, 19, 0], [26, 15, 0], [25, 14, 0], [25, 12, 0], [24, 11, 0], [24, 10, 0], [21, 7, 0], [20, 7, 0], [19, 6, 0], [13, 6, 0], [12, 7, 0], [11, 7, 0], [8, 10, 0], [8, 11, 0], [7, 12, 0], [7, 14, 0], [6, 15, 0], [6, 19, 0], [7, 20, 0], [7, 22, 0], [8, 23, 0], [8, 24, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0]];
        VAR pos Lower_P_PtA{48} := [[3, 48, 0], [2, 47, 0], [1, 47, 0], [1, 46, 0], [0, 45, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 15, 0], [7, 16, 0], [8, 15, 0], [9, 15, 0], [10, 14, 0], [18, 14, 0], [19, 15, 0], [20, 15, 0], [21, 16, 0], [22, 16, 0], [28, 22, 0], [28, 23, 0], [29, 24, 0], [29, 26, 0], [30, 27, 0], [30, 35, 0], [29, 36, 0], [29, 38, 0], [28, 39, 0], [28, 40, 0], [22, 46, 0], [21, 46, 0], [20, 47, 0], [19, 47, 0], [18, 48, 0], [10, 48, 0], [9, 47, 0], [8, 47, 0], [7, 46, 0], [6, 46, 0], [5, 47, 0], [4, 47, 0], [3, 48, 0], [2, 47, 0]];
        VAR pos Lower_P_PtB{26} := [[10, 41, 0], [11, 42, 0], [17, 42, 0], [18, 41, 0], [19, 41, 0], [22, 38, 0], [22, 37, 0], [23, 36, 0], [23, 34, 0], [24, 33, 0], [24, 29, 0], [23, 28, 0], [23, 26, 0], [22, 25, 0], [22, 24, 0], [19, 21, 0], [18, 21, 0], [17, 20, 0], [11, 20, 0], [10, 21, 0], [9, 21, 0], [6, 24, 0], [6, 38, 0], [9, 41, 0], [10, 41, 0], [11, 42, 0]];
        VAR pos Lower_Q_PtA{48} := [[12, 48, 0], [11, 47, 0], [10, 47, 0], [9, 46, 0], [8, 46, 0], [2, 40, 0], [2, 39, 0], [1, 38, 0], [1, 36, 0], [0, 35, 0], [0, 27, 0], [1, 26, 0], [1, 24, 0], [2, 23, 0], [2, 22, 0], [8, 16, 0], [9, 16, 0], [10, 15, 0], [11, 15, 0], [12, 14, 0], [20, 14, 0], [21, 15, 0], [22, 15, 0], [23, 16, 0], [24, 15, 0], [24, 3, 0], [25, 2, 0], [25, 1, 0], [26, 1, 0], [27, 0, 0], [28, 1, 0], [29, 1, 0], [29, 2, 0], [30, 3, 0], [30, 45, 0], [29, 46, 0], [29, 47, 0], [28, 47, 0], [27, 48, 0], [26, 47, 0], [25, 47, 0], [24, 46, 0], [23, 46, 0], [22, 47, 0], [21, 47, 0], [20, 48, 0], [12, 48, 0], [11, 47, 0]];
        VAR pos Lower_Q_PtB{26} := [[12, 41, 0], [13, 42, 0], [19, 42, 0], [20, 41, 0], [21, 41, 0], [24, 38, 0], [24, 24, 0], [21, 21, 0], [20, 21, 0], [19, 20, 0], [13, 20, 0], [12, 21, 0], [11, 21, 0], [8, 24, 0], [8, 25, 0], [7, 26, 0], [7, 28, 0], [6, 29, 0], [6, 33, 0], [7, 34, 0], [7, 36, 0], [8, 37, 0], [8, 38, 0], [11, 41, 0], [12, 41, 0], [13, 42, 0]];
        VAR pos Lower_R_PtA{43} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 19, 0], [7, 20, 0], [7, 22, 0], [8, 23, 0], [8, 24, 0], [11, 27, 0], [12, 27, 0], [13, 28, 0], [19, 28, 0], [20, 29, 0], [21, 29, 0], [21, 30, 0], [22, 31, 0], [21, 32, 0], [21, 33, 0], [20, 33, 0], [19, 34, 0], [12, 34, 0], [11, 33, 0], [10, 33, 0], [9, 32, 0], [8, 32, 0], [7, 31, 0], [6, 31, 0], [5, 32, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_S_PtA{105} := [[9, 34, 0], [8, 33, 0], [6, 33, 0], [5, 32, 0], [4, 32, 0], [2, 30, 0], [2, 29, 0], [1, 28, 0], [1, 27, 0], [0, 26, 0], [0, 24, 0], [1, 23, 0], [1, 22, 0], [2, 21, 0], [2, 20, 0], [4, 18, 0], [5, 18, 0], [6, 17, 0], [7, 17, 0], [8, 16, 0], [10, 16, 0], [11, 15, 0], [15, 15, 0], [16, 14, 0], [19, 14, 0], [22, 11, 0], [22, 9, 0], [20, 7, 0], [18, 7, 0], [17, 6, 0], [11, 6, 0], [10, 7, 0], [8, 7, 0], [6, 9, 0], [6, 10, 0], [5, 11, 0], [4, 11, 0], [3, 12, 0], [2, 11, 0], [1, 11, 0], [1, 10, 0], [0, 9, 0], [0, 8, 0], [1, 7, 0], [1, 6, 0], [2, 5, 0], [2, 4, 0], [4, 2, 0], [5, 2, 0], [6, 1, 0], [8, 1, 0], [9, 0, 0], [19, 0, 0], [20, 1, 0], [22, 1, 0], [23, 2, 0], [24, 2, 0], [26, 4, 0], [26, 5, 0], [27, 6, 0], [27, 7, 0], [28, 8, 0], [28, 12, 0], [27, 13, 0], [27, 14, 0], [26, 15, 0], [26, 16, 0], [24, 18, 0], [23, 18, 0], [22, 19, 0], [21, 19, 0], [20, 20, 0], [18, 20, 0], [17, 21, 0], [13, 21, 0], [12, 22, 0], [9, 22, 0], [6, 25, 0], [8, 27, 0], [10, 27, 0], [11, 28, 0], [17, 28, 0], [18, 27, 0], [20, 27, 0], [22, 25, 0], [22, 24, 0], [23, 23, 0], [24, 23, 0], [25, 22, 0], [26, 23, 0], [27, 23, 0], [27, 24, 0], [28, 25, 0], [28, 26, 0], [27, 27, 0], [27, 28, 0], [26, 29, 0], [26, 30, 0], [24, 32, 0], [23, 32, 0], [22, 33, 0], [20, 33, 0], [19, 34, 0], [9, 34, 0], [8, 33, 0]];
        VAR pos Lower_T_PtA{60} := [[9, 48, 0], [8, 47, 0], [7, 47, 0], [7, 46, 0], [6, 45, 0], [6, 35, 0], [5, 34, 0], [3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [1, 30, 0], [1, 29, 0], [2, 29, 0], [3, 28, 0], [5, 28, 0], [6, 27, 0], [6, 9, 0], [7, 8, 0], [7, 6, 0], [8, 5, 0], [8, 4, 0], [10, 2, 0], [11, 2, 0], [12, 1, 0], [13, 1, 0], [14, 0, 0], [19, 0, 0], [20, 1, 0], [21, 1, 0], [21, 2, 0], [22, 3, 0], [21, 4, 0], [21, 5, 0], [20, 5, 0], [19, 6, 0], [15, 6, 0], [13, 8, 0], [13, 10, 0], [12, 11, 0], [12, 27, 0], [13, 28, 0], [17, 28, 0], [18, 29, 0], [19, 29, 0], [19, 30, 0], [20, 31, 0], [19, 32, 0], [19, 33, 0], [18, 33, 0], [17, 34, 0], [13, 34, 0], [12, 35, 0], [12, 45, 0], [11, 46, 0], [11, 47, 0], [10, 47, 0], [9, 48, 0], [8, 47, 0]];
        VAR pos Lower_U_PtA{53} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [0, 9, 0], [1, 8, 0], [1, 6, 0], [2, 5, 0], [2, 4, 0], [4, 2, 0], [5, 2, 0], [6, 1, 0], [7, 1, 0], [8, 0, 0], [16, 0, 0], [17, 1, 0], [18, 1, 0], [19, 2, 0], [20, 2, 0], [21, 3, 0], [22, 3, 0], [23, 2, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [28, 31, 0], [27, 32, 0], [27, 33, 0], [26, 33, 0], [25, 34, 0], [24, 33, 0], [23, 33, 0], [23, 32, 0], [22, 31, 0], [22, 12, 0], [17, 7, 0], [16, 7, 0], [15, 6, 0], [9, 6, 0], [7, 8, 0], [7, 10, 0], [6, 11, 0], [6, 31, 0], [5, 32, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_V_PtA{108} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [0, 30, 0], [1, 29, 0], [1, 28, 0], [2, 27, 0], [2, 25, 0], [3, 24, 0], [3, 23, 0], [4, 22, 0], [4, 21, 0], [5, 20, 0], [5, 18, 0], [6, 17, 0], [6, 16, 0], [7, 15, 0], [7, 14, 0], [8, 13, 0], [8, 11, 0], [9, 10, 0], [9, 9, 0], [10, 8, 0], [10, 7, 0], [11, 6, 0], [11, 4, 0], [12, 3, 0], [12, 2, 0], [13, 1, 0], [14, 1, 0], [15, 0, 0], [16, 1, 0], [17, 1, 0], [18, 2, 0], [18, 3, 0], [19, 4, 0], [19, 6, 0], [20, 7, 0], [20, 8, 0], [21, 9, 0], [21, 10, 0], [22, 11, 0], [22, 13, 0], [23, 14, 0], [23, 15, 0], [24, 16, 0], [24, 17, 0], [25, 18, 0], [25, 20, 0], [26, 21, 0], [26, 22, 0], [27, 23, 0], [27, 24, 0], [28, 25, 0], [28, 27, 0], [29, 28, 0], [29, 29, 0], [30, 30, 0], [30, 31, 0], [29, 32, 0], [29, 33, 0], [28, 33, 0], [27, 34, 0], [26, 33, 0], [25, 33, 0], [24, 32, 0], [24, 31, 0], [23, 30, 0], [23, 28, 0], [22, 27, 0], [22, 26, 0], [21, 25, 0], [21, 24, 0], [20, 23, 0], [20, 21, 0], [19, 20, 0], [19, 19, 0], [18, 18, 0], [18, 17, 0], [17, 16, 0], [17, 14, 0], [16, 13, 0], [16, 12, 0], [15, 11, 0], [14, 12, 0], [14, 13, 0], [13, 14, 0], [13, 16, 0], [12, 17, 0], [12, 18, 0], [11, 19, 0], [11, 20, 0], [10, 21, 0], [10, 23, 0], [9, 24, 0], [9, 25, 0], [8, 26, 0], [8, 27, 0], [7, 28, 0], [7, 30, 0], [6, 31, 0], [6, 32, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_W_PtA{128} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [0, 29, 0], [1, 28, 0], [1, 26, 0], [2, 25, 0], [2, 22, 0], [3, 21, 0], [3, 19, 0], [4, 18, 0], [4, 15, 0], [5, 14, 0], [5, 12, 0], [6, 11, 0], [6, 8, 0], [7, 7, 0], [7, 5, 0], [8, 4, 0], [8, 2, 0], [9, 1, 0], [10, 1, 0], [11, 0, 0], [12, 1, 0], [13, 1, 0], [14, 2, 0], [14, 4, 0], [15, 5, 0], [15, 7, 0], [16, 8, 0], [16, 11, 0], [17, 12, 0], [17, 14, 0], [18, 15, 0], [18, 18, 0], [19, 19, 0], [20, 18, 0], [20, 15, 0], [21, 14, 0], [21, 12, 0], [22, 11, 0], [22, 8, 0], [23, 7, 0], [23, 5, 0], [24, 4, 0], [24, 2, 0], [25, 1, 0], [26, 1, 0], [27, 0, 0], [28, 1, 0], [29, 1, 0], [30, 2, 0], [30, 4, 0], [31, 5, 0], [31, 7, 0], [32, 8, 0], [32, 11, 0], [33, 12, 0], [33, 14, 0], [34, 15, 0], [34, 18, 0], [35, 19, 0], [35, 21, 0], [36, 22, 0], [36, 25, 0], [37, 26, 0], [37, 28, 0], [38, 29, 0], [38, 31, 0], [37, 32, 0], [37, 33, 0], [36, 33, 0], [35, 34, 0], [34, 33, 0], [33, 33, 0], [32, 32, 0], [32, 30, 0], [31, 29, 0], [31, 27, 0], [30, 26, 0], [30, 23, 0], [29, 22, 0], [29, 20, 0], [28, 19, 0], [28, 16, 0], [27, 15, 0], [26, 16, 0], [26, 19, 0], [25, 20, 0], [25, 22, 0], [24, 23, 0], [24, 26, 0], [23, 27, 0], [23, 29, 0], [22, 30, 0], [22, 32, 0], [21, 33, 0], [20, 33, 0], [19, 34, 0], [18, 33, 0], [17, 33, 0], [16, 32, 0], [16, 30, 0], [15, 29, 0], [15, 27, 0], [14, 26, 0], [14, 23, 0], [13, 22, 0], [13, 20, 0], [12, 19, 0], [12, 16, 0], [11, 15, 0], [10, 16, 0], [10, 19, 0], [9, 20, 0], [9, 22, 0], [8, 23, 0], [8, 26, 0], [7, 27, 0], [7, 29, 0], [6, 30, 0], [6, 32, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_X_PtA{74} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [1, 30, 0], [1, 28, 0], [5, 24, 0], [5, 23, 0], [8, 20, 0], [8, 19, 0], [10, 17, 0], [8, 15, 0], [8, 14, 0], [5, 11, 0], [5, 10, 0], [1, 6, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [9, 5, 0], [9, 6, 0], [12, 9, 0], [12, 10, 0], [14, 12, 0], [16, 10, 0], [16, 9, 0], [19, 6, 0], [19, 5, 0], [23, 1, 0], [24, 1, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [27, 4, 0], [27, 6, 0], [23, 10, 0], [23, 11, 0], [20, 14, 0], [20, 15, 0], [18, 17, 0], [20, 19, 0], [20, 20, 0], [23, 23, 0], [23, 24, 0], [27, 28, 0], [27, 30, 0], [28, 31, 0], [27, 32, 0], [27, 33, 0], [26, 33, 0], [25, 34, 0], [24, 33, 0], [23, 33, 0], [19, 29, 0], [19, 28, 0], [16, 25, 0], [16, 24, 0], [14, 22, 0], [12, 24, 0], [12, 25, 0], [9, 28, 0], [9, 29, 0], [5, 33, 0], [4, 33, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos Lower_Y_PtA{133} := [[5, 48, 0], [4, 47, 0], [3, 47, 0], [3, 46, 0], [2, 45, 0], [2, 44, 0], [3, 43, 0], [3, 42, 0], [4, 41, 0], [4, 39, 0], [5, 38, 0], [5, 37, 0], [6, 36, 0], [6, 35, 0], [7, 34, 0], [7, 32, 0], [8, 31, 0], [8, 30, 0], [9, 29, 0], [9, 28, 0], [10, 27, 0], [10, 25, 0], [11, 24, 0], [11, 23, 0], [12, 22, 0], [12, 21, 0], [13, 20, 0], [13, 18, 0], [14, 17, 0], [13, 16, 0], [13, 15, 0], [12, 14, 0], [12, 13, 0], [11, 12, 0], [11, 11, 0], [7, 7, 0], [6, 7, 0], [5, 6, 0], [3, 6, 0], [2, 5, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [6, 0, 0], [7, 1, 0], [8, 1, 0], [9, 2, 0], [10, 2, 0], [16, 8, 0], [16, 9, 0], [17, 10, 0], [17, 11, 0], [18, 12, 0], [18, 13, 0], [19, 14, 0], [19, 15, 0], [20, 16, 0], [20, 17, 0], [21, 18, 0], [21, 20, 0], [22, 21, 0], [22, 22, 0], [23, 23, 0], [23, 24, 0], [24, 25, 0], [24, 27, 0], [25, 28, 0], [25, 29, 0], [26, 30, 0], [26, 31, 0], [27, 32, 0], [27, 34, 0], [28, 35, 0], [28, 36, 0], [29, 37, 0], [29, 38, 0], [30, 39, 0], [30, 41, 0], [31, 42, 0], [31, 43, 0], [32, 44, 0], [32, 45, 0], [31, 46, 0], [31, 47, 0], [30, 47, 0], [29, 48, 0], [28, 47, 0], [27, 47, 0], [26, 46, 0], [26, 45, 0], [25, 44, 0], [25, 42, 0], [24, 41, 0], [24, 40, 0], [23, 39, 0], [23, 38, 0], [22, 37, 0], [22, 35, 0], [21, 34, 0], [21, 33, 0], [20, 32, 0], [20, 31, 0], [19, 30, 0], [19, 28, 0], [18, 27, 0], [18, 26, 0], [17, 25, 0], [16, 26, 0], [16, 27, 0], [15, 28, 0], [15, 30, 0], [14, 31, 0], [14, 32, 0], [13, 33, 0], [13, 34, 0], [12, 35, 0], [12, 37, 0], [11, 38, 0], [11, 39, 0], [10, 40, 0], [10, 41, 0], [9, 42, 0], [9, 44, 0], [8, 45, 0], [8, 46, 0], [7, 47, 0], [6, 47, 0], [5, 48, 0], [4, 47, 0]];
        VAR pos Lower_Z_PtA{54} := [[3, 34, 0], [2, 33, 0], [1, 33, 0], [1, 32, 0], [0, 31, 0], [1, 30, 0], [1, 29, 0], [2, 29, 0], [3, 28, 0], [17, 28, 0], [18, 27, 0], [16, 25, 0], [16, 24, 0], [12, 20, 0], [12, 19, 0], [8, 15, 0], [8, 14, 0], [5, 11, 0], [5, 10, 0], [1, 6, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [25, 0, 0], [26, 1, 0], [27, 1, 0], [27, 2, 0], [28, 3, 0], [27, 4, 0], [27, 5, 0], [26, 5, 0], [25, 6, 0], [11, 6, 0], [10, 7, 0], [12, 9, 0], [12, 10, 0], [16, 14, 0], [16, 15, 0], [20, 19, 0], [20, 20, 0], [23, 23, 0], [23, 24, 0], [27, 28, 0], [27, 30, 0], [28, 31, 0], [27, 32, 0], [27, 33, 0], [26, 33, 0], [25, 34, 0], [3, 34, 0], [2, 33, 0]];
        VAR pos OpenCurlyBrackets_PtA{87} := [[9, 67, 0], [4, 62, 0], [4, 61, 0], [3, 60, 0], [3, 58, 0], [2, 57, 0], [2, 49, 0], [3, 48, 0], [3, 46, 0], [4, 45, 0], [4, 44, 0], [7, 41, 0], [5, 39, 0], [4, 39, 0], [3, 38, 0], [2, 38, 0], [1, 37, 0], [1, 36, 0], [0, 35, 0], [1, 34, 0], [1, 33, 0], [2, 32, 0], [3, 32, 0], [4, 31, 0], [5, 31, 0], [7, 29, 0], [4, 26, 0], [4, 25, 0], [3, 24, 0], [3, 22, 0], [2, 21, 0], [2, 13, 0], [3, 12, 0], [3, 10, 0], [4, 9, 0], [4, 8, 0], [11, 1, 0], [12, 1, 0], [13, 0, 0], [14, 1, 0], [15, 1, 0], [15, 2, 0], [16, 3, 0], [15, 4, 0], [15, 5, 0], [10, 10, 0], [10, 11, 0], [9, 12, 0], [9, 14, 0], [8, 15, 0], [8, 19, 0], [9, 20, 0], [9, 22, 0], [10, 23, 0], [10, 24, 0], [13, 27, 0], [13, 28, 0], [14, 29, 0], [14, 31, 0], [13, 32, 0], [13, 33, 0], [12, 34, 0], [11, 34, 0], [10, 35, 0], [11, 36, 0], [12, 36, 0], [13, 37, 0], [13, 38, 0], [14, 39, 0], [14, 41, 0], [13, 42, 0], [13, 43, 0], [10, 46, 0], [10, 47, 0], [9, 48, 0], [9, 50, 0], [8, 51, 0], [8, 55, 0], [9, 56, 0], [9, 58, 0], [10, 59, 0], [10, 60, 0], [15, 65, 0], [15, 66, 0], [16, 67, 0], [9, 67, 0], [4, 62, 0]];
        VAR pos CloseCurlyBrackets_PtB{87} := [[0, 67, 0], [1, 66, 0], [1, 65, 0], [6, 60, 0], [6, 59, 0], [7, 58, 0], [7, 56, 0], [8, 55, 0], [8, 51, 0], [7, 50, 0], [7, 48, 0], [6, 47, 0], [6, 46, 0], [3, 43, 0], [3, 42, 0], [2, 41, 0], [2, 39, 0], [3, 38, 0], [3, 37, 0], [4, 36, 0], [5, 36, 0], [6, 35, 0], [5, 34, 0], [4, 34, 0], [3, 33, 0], [3, 32, 0], [2, 31, 0], [2, 29, 0], [3, 28, 0], [3, 27, 0], [6, 24, 0], [6, 23, 0], [7, 22, 0], [7, 20, 0], [8, 19, 0], [8, 15, 0], [7, 14, 0], [7, 12, 0], [6, 11, 0], [6, 10, 0], [1, 5, 0], [1, 4, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [12, 8, 0], [12, 9, 0], [13, 10, 0], [13, 12, 0], [14, 13, 0], [14, 21, 0], [13, 22, 0], [13, 24, 0], [12, 25, 0], [12, 26, 0], [9, 29, 0], [11, 31, 0], [12, 31, 0], [13, 32, 0], [14, 32, 0], [15, 33, 0], [15, 34, 0], [16, 35, 0], [15, 36, 0], [15, 37, 0], [14, 38, 0], [13, 38, 0], [12, 39, 0], [11, 39, 0], [9, 41, 0], [12, 44, 0], [12, 45, 0], [13, 46, 0], [13, 48, 0], [14, 49, 0], [14, 57, 0], [13, 58, 0], [13, 60, 0], [12, 61, 0], [12, 62, 0], [7, 67, 0], [0, 67, 0], [1, 66, 0]];
        VAR pos VerticalBar_PtA{13} := [[0, 67, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 67, 0], [0, 67, 0], [0, 3, 0]];
        VAR pos Tilty_PtA{68} := [[8, 18, 0], [7, 17, 0], [6, 17, 0], [5, 16, 0], [4, 16, 0], [2, 14, 0], [2, 13, 0], [1, 12, 0], [1, 10, 0], [0, 9, 0], [0, 3, 0], [1, 2, 0], [1, 1, 0], [2, 1, 0], [3, 0, 0], [4, 1, 0], [5, 1, 0], [5, 2, 0], [6, 3, 0], [6, 7, 0], [9, 10, 0], [13, 10, 0], [14, 9, 0], [15, 9, 0], [18, 6, 0], [19, 6, 0], [22, 3, 0], [23, 3, 0], [24, 2, 0], [25, 2, 0], [26, 1, 0], [27, 1, 0], [28, 0, 0], [34, 0, 0], [35, 1, 0], [36, 1, 0], [37, 2, 0], [38, 2, 0], [40, 4, 0], [40, 5, 0], [41, 6, 0], [41, 8, 0], [42, 9, 0], [42, 15, 0], [41, 16, 0], [41, 17, 0], [40, 17, 0], [39, 18, 0], [38, 17, 0], [37, 17, 0], [37, 16, 0], [36, 15, 0], [36, 11, 0], [33, 8, 0], [29, 8, 0], [28, 9, 0], [27, 9, 0], [24, 12, 0], [23, 12, 0], [20, 15, 0], [19, 15, 0], [18, 16, 0], [17, 16, 0], [16, 17, 0], [15, 17, 0], [14, 18, 0], [8, 18, 0], [7, 17, 0]];
        
        VAR num last_index := 0;
        
        ! Define variables to be used when drawing
        VAR pos position := [0,0,0];
        VAR robtarget next_target := [[0,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
        penup_offset := z_offset + penup_offset;
        
        ! Draw the given character
        IF character = " " THEN
            ! Skip
            
        ELSEIF character = "!" THEN
            ! Raise pen to avoid drawing of surface
            position := Exclamation_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Exclamation_PtA, 1) DO
                position := Exclamation_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Exclamation_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Exclamation_PtB, 1) DO
                position := Exclamation_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = """" THEN
            ! Raise pen to avoid drawing of surface
            position := DoubleQuotation_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(DoubleQuotation_PtA, 1) DO
                position := DoubleQuotation_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := DoubleQuotation_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(DoubleQuotation_PtB, 1) DO
                position := DoubleQuotation_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "'" THEN
            ! Raise pen to avoid drawing of surface
            position := SingleQuotation_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(SingleQuotation_PtA, 1) DO
                position := SingleQuotation_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "#" THEN
            ! Raise pen to avoid drawing of surface
            position := HashTag_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(HashTag_PtA, 1) DO
                position := HashTag_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := HashTag_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(HashTag_PtB, 1) DO
                position := HashTag_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "$" THEN
            ! Raise pen to avoid drawing of surface
            position := Dollar_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Dollar_PtA, 1) DO
                position := Dollar_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Dollar_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Dollar_PtB, 1) DO
                position := Dollar_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Dollar_PtC{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Dollar_PtC, 1) DO
                position := Dollar_PtC{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Dollar_PtD{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Dollar_PtD, 1) DO
                position := Dollar_PtD{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Dollar_PtE{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Dollar_PtE, 1) DO
                position := Dollar_PtE{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "%" THEN
            ! Raise pen to avoid drawing of surface
            position := Percent_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Percent_PtA, 1) DO
                position := Percent_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Percent_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Percent_PtB, 1) DO
                position := Percent_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Percent_PtC{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Percent_PtC, 1) DO
                position := Percent_PtC{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Percent_PtD{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Percent_PtD, 1) DO
                position := Percent_PtD{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "&" THEN
            ! Raise pen to avoid drawing of surface
            position := Ampersand_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Ampersand_PtA, 1) DO
                position := Ampersand_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Ampersand_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Ampersand_PtB, 1) DO
                position := Ampersand_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Ampersand_PtC{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Ampersand_PtC, 1) DO
                position := Ampersand_PtC{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "(" THEN
            ! Raise pen to avoid drawing of surface
            position := OpenBracket_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(OpenBracket_PtA, 1) DO
                position := OpenBracket_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = ")" THEN
            ! Raise pen to avoid drawing of surface
            position := CloseBracket_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(CloseBracket_PtA, 1) DO
                position := CloseBracket_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "*" THEN
            ! Raise pen to avoid drawing of surface
            position := Asterisk_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Asterisk_PtA, 1) DO
                position := Asterisk_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "+" THEN
            ! Raise pen to avoid drawing of surface
            position := Plus_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Plus_PtA, 1) DO
                position := Plus_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "," THEN
            ! Raise pen to avoid drawing of surface
            position := Comma_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Comma_PtA, 1) DO
                position := Comma_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "-" THEN
            ! Raise pen to avoid drawing of surface
            position := Minus_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Minus_PtA, 1) DO
                position := Minus_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "." THEN
            ! Raise pen to avoid drawing of surface
            position := Fullstop_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Fullstop_PtA, 1) DO
                position := Fullstop_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "/" THEN
            ! Raise pen to avoid drawing of surface
            position := ForwardSlash_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(ForwardSlash_PtA, 1) DO
                position := ForwardSlash_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "0" THEN
            ! Raise pen to avoid drawing of surface
            position := Zero_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Zero_PtA, 1) DO
                position := Zero_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Zero_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Zero_PtB, 1) DO
                position := Zero_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "1" THEN
            ! Raise pen to avoid drawing of surface
            position := One_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(One_PtA, 1) DO
                position := One_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "2" THEN
            ! Raise pen to avoid drawing of surface
            position := Two_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Two_PtA, 1) DO
                position := Two_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "3" THEN
            ! Raise pen to avoid drawing of surface
            position := Three_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Three_PtA, 1) DO
                position := Three_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "4" THEN
            ! Raise pen to avoid drawing of surface
            position := Four_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Four_PtA, 1) DO
                position := Four_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Four_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Four_PtB, 1) DO
                position := Four_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "5" THEN
            ! Raise pen to avoid drawing of surface
            position := Five_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Five_PtA, 1) DO
                position := Five_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "6" THEN
            ! Raise pen to avoid drawing of surface
            position := Six_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Six_PtA, 1) DO
                position := Six_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Six_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Six_PtB, 1) DO
                position := Six_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "7" THEN
            ! Raise pen to avoid drawing of surface
            position := Seven_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Seven_PtA, 1) DO
                position := Seven_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "8" THEN
            ! Raise pen to avoid drawing of surface
            position := Eight_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Eight_PtA, 1) DO
                position := Eight_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Eight_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Eight_PtB, 1) DO
                position := Eight_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Eight_PtC{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Eight_PtC, 1) DO
                position := Eight_PtC{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "9" THEN
            ! Raise pen to avoid drawing of surface
            position := Nine_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Nine_PtA, 1) DO
                position := Nine_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Nine_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Nine_PtB, 1) DO
                position := Nine_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = ":" THEN
            ! Raise pen to avoid drawing of surface
            position := Colon_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Colon_PtA, 1) DO
                position := Colon_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Colon_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Colon_PtB, 1) DO
                position := Colon_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = ";" THEN
            ! Raise pen to avoid drawing of surface
            position := SemiColon_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(SemiColon_PtA, 1) DO
                position := SemiColon_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := SemiColon_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(SemiColon_PtB, 1) DO
                position := SemiColon_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "<" THEN
            ! Raise pen to avoid drawing of surface
            position := OpenAngleBracket_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(OpenAngleBracket_PtA, 1) DO
                position := OpenAngleBracket_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = ">" THEN
            ! Raise pen to avoid drawing of surface
            position := CloseAngleBracket_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(CloseAngleBracket_PtA, 1) DO
                position := CloseAngleBracket_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "=" THEN
            ! Raise pen to avoid drawing of surface
            position := Equal_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Equal_PtA, 1) DO
                position := Equal_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Equal_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Equal_PtB, 1) DO
                position := Equal_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "?" THEN
            ! Raise pen to avoid drawing of surface
            position := Question_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Question_PtA, 1) DO
                position := Question_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Question_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Question_PtB, 1) DO
                position := Question_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "@" THEN
            ! Raise pen to avoid drawing of surface
            position := At_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(At_PtA, 1) DO
                position := At_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := At_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(At_PtB, 1) DO
                position := At_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := At_PtC{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(At_PtC, 1) DO
                position := At_PtC{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := At_PtD{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(At_PtD, 1) DO
                position := At_PtD{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := At_PtE{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(At_PtE, 1) DO
                position := At_PtE{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "A" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_A_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_A_PtA, 1) DO
                position := Upper_A_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_A_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_A_PtB, 1) DO
                position := Upper_A_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "B" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_B_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_B_PtA, 1) DO
                position := Upper_B_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_B_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_B_PtB, 1) DO
                position := Upper_B_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_B_PtC{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_B_PtC, 1) DO
                position := Upper_B_PtC{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "C" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_C_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_C_PtA, 1) DO
                position := Upper_C_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "D" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_D_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_D_PtA, 1) DO
                position := Upper_D_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_D_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_D_PtB, 1) DO
                position := Upper_D_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "E" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_E_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_E_PtA, 1) DO
                position := Upper_E_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "F" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_F_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_F_PtA, 1) DO
                position := Upper_F_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "G" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_G_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_G_PtA, 1) DO
                position := Upper_G_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "H" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_H_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_H_PtA, 1) DO
                position := Upper_H_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "I" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_I_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_I_PtA, 1) DO
                position := Upper_I_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "J" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_J_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_J_PtA, 1) DO
                position := Upper_J_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "K" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_K_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_K_PtA, 1) DO
                position := Upper_K_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "L" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_L_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_L_PtA, 1) DO
                position := Upper_L_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "M" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_M_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_M_PtA, 1) DO
                position := Upper_M_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "N" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_N_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_N_PtA, 1) DO
                position := Upper_N_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "O" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_O_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_O_PtA, 1) DO
                position := Upper_O_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_O_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_O_PtB, 1) DO
                position := Upper_O_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "P" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_P_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_P_PtA, 1) DO
                position := Upper_P_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_P_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_P_PtB, 1) DO
                position := Upper_P_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "Q" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_Q_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_Q_PtA, 1) DO
                position := Upper_Q_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_Q_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_Q_PtB, 1) DO
                position := Upper_Q_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "R" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_R_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_R_PtA, 1) DO
                position := Upper_R_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Upper_R_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_R_PtB, 1) DO
                position := Upper_R_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "S" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_S_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_S_PtA, 1) DO
                position := Upper_S_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "T" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_T_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_T_PtA, 1) DO
                position := Upper_T_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "U" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_U_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_U_PtA, 1) DO
                position := Upper_U_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "V" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_V_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_V_PtA, 1) DO
                position := Upper_V_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "W" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_W_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_W_PtA, 1) DO
                position := Upper_W_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "X" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_X_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_X_PtA, 1) DO
                position := Upper_X_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "Y" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_Y_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_Y_PtA, 1) DO
                position := Upper_Y_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "Z" THEN
            ! Raise pen to avoid drawing of surface
            position := Upper_Z_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Upper_Z_PtA, 1) DO
                position := Upper_Z_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "[" THEN
            ! Raise pen to avoid drawing of surface
            position := OpenSquareBracket_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(OpenSquareBracket_PtA, 1) DO
                position := OpenSquareBracket_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "]" THEN
            ! Raise pen to avoid drawing of surface
            position := CloseSquareBracket_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(CloseSquareBracket_PtB, 1) DO
                position := CloseSquareBracket_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "\\" THEN
            ! Raise pen to avoid drawing of surface
            position := BackSlash_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(BackSlash_PtA, 1) DO
                position := BackSlash_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "^" THEN
            ! Raise pen to avoid drawing of surface
            position := Power_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Power_PtA, 1) DO
                position := Power_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "_" THEN
            ! Raise pen to avoid drawing of surface
            position := Underscore_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Underscore_PtA, 1) DO
                position := Underscore_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "`" THEN
            ! Raise pen to avoid drawing of surface
            position := InvertedSingleQuote_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(InvertedSingleQuote_PtA, 1) DO
                position := InvertedSingleQuote_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "a" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_A_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_A_PtA, 1) DO
                position := Lower_A_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_A_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_A_PtB, 1) DO
                position := Lower_A_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "b" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_B_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_B_PtA, 1) DO
                position := Lower_B_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_B_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_B_PtB, 1) DO
                position := Lower_B_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "c" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_C_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_C_PtA, 1) DO
                position := Lower_C_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "d" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_D_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_D_PtA, 1) DO
                position := Lower_D_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_D_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_D_PtB, 1) DO
                position := Lower_D_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "e" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_E_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_E_PtA, 1) DO
                position := Lower_E_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_E_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_E_PtB, 1) DO
                position := Lower_E_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "f" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_F_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_F_PtA, 1) DO
                position := Lower_F_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "g" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_G_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_G_PtA, 1) DO
                position := Lower_G_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_G_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_G_PtB, 1) DO
                position := Lower_G_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "h" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_H_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_H_PtA, 1) DO
                position := Lower_H_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "i" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_I_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_I_PtA, 1) DO
                position := Lower_I_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_I_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_I_PtB, 1) DO
                position := Lower_I_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "j" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_J_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_J_PtA, 1) DO
                position := Lower_J_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_J_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_J_PtB, 1) DO
                position := Lower_J_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "k" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_K_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_K_PtA, 1) DO
                position := Lower_K_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "l" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_L_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_L_PtA, 1) DO
                position := Lower_L_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "m" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_M_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_M_PtA, 1) DO
                position := Lower_M_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "n" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_N_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_N_PtA, 1) DO
                position := Lower_N_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "o" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_O_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_O_PtA, 1) DO
                position := Lower_O_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_O_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_O_PtB, 1) DO
                position := Lower_O_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "p" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_P_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_P_PtA, 1) DO
                position := Lower_P_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_P_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_P_PtB, 1) DO
                position := Lower_P_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "q" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_Q_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_Q_PtA, 1) DO
                position := Lower_Q_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Raise pen to avoid drawing of surface
            position := Lower_Q_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_Q_PtB, 1) DO
                position := Lower_Q_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "r" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_R_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_R_PtA, 1) DO
                position := Lower_R_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "s" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_S_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_S_PtA, 1) DO
                position := Lower_S_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "t" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_T_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_T_PtA, 1) DO
                position := Lower_T_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "u" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_U_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_U_PtA, 1) DO
                position := Lower_U_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "v" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_V_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_V_PtA, 1) DO
                position := Lower_V_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "w" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_W_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_W_PtA, 1) DO
                position := Lower_W_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "x" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_X_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_X_PtA, 1) DO
                position := Lower_X_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "y" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_Y_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_Y_PtA, 1) DO
                position := Lower_Y_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "z" THEN
            ! Raise pen to avoid drawing of surface
            position := Lower_Z_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Lower_Z_PtA, 1) DO
                position := Lower_Z_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "{" THEN
            ! Raise pen to avoid drawing of surface
            position := OpenCurlyBrackets_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(OpenCurlyBrackets_PtA, 1) DO
                position := OpenCurlyBrackets_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "}" THEN
            ! Raise pen to avoid drawing of surface
            position := CloseCurlyBrackets_PtB{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(CloseCurlyBrackets_PtB, 1) DO
                position := CloseCurlyBrackets_PtB{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "|" THEN
            ! Raise pen to avoid drawing of surface
            position := VerticalBar_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(VerticalBar_PtA, 1) DO
                position := VerticalBar_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSEIF character = "~" THEN
            ! Raise pen to avoid drawing of surface
            position := Tilty_PtA{1} * font_size;
            next_target.trans := position;
            MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            ! Drop pen
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            
            FOR index FROM 1 TO Dim(Tilty_PtA, 1) DO
                position := Tilty_PtA{index} * font_size;
                next_target.trans := position; last_index := index;
                
                MoveJ Offs(next_target, x_offset, y_offset, z_offset),write_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
            ENDFOR
            
            ! Raise pen
            MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ELSE
            TPWrite "Unknown character " + character;
        ENDIF
        
    ENDPROC
    
    
    !***********************************************************
    !
    ! Procedure DrawArtWork_House
    !   This procedure draws my house artwork on the work surface
    !   This is mainly used by the Special User function
    !
    ! Example
    !   VAR speeddata approach_speed := v100;  // Approach speed for arm
    !   VAR speeddata write_speed := v80;      // Write speed for arm
    !   VAR num x_offset := 0;                 // x offset from worksurface origin
    !   VAR num y_offset := 0;                 // y offset from worksurface origin
    !   VAR num z_offset := 0;                 // z offset from worksurface origin
    !   VAR num pen_offset := 30;              // Defines pen position for pen up
    !
    !   DrawArtWork_House 1.0, approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
    !
    !***********************************************************
    PROC DrawArtWork_House(num font_size, speeddata approach_speed, speeddata write_speed, num x_offset, num y_offset, num z_offset, num penup_offset)
        ! Define all points for artwork
        VAR pos pos0{30} := [[147.0, 28.0, 0],[146.0, 29.0, 0],[146.0, 48.0, 0],[147.0, 49.0, 0],[147.0, 60.0, 0],[148.0, 61.0, 0],[148.0, 67.0, 0],[149.0, 68.0, 0],[149.0, 77.0, 0],[151.0, 79.0, 0],[153.0, 79.0, 0],[154.0, 78.0, 0],[155.0, 78.0, 0],[156.0, 77.0, 0],[156.0, 72.0, 0],[155.0, 71.0, 0],[155.0, 67.0, 0],[154.0, 66.0, 0],[154.0, 60.0, 0],[153.0, 59.0, 0],[153.0, 16.0, 0],[154.0, 15.0, 0],[154.0, 13.0, 0],[151.0, 10.0, 0],[150.0, 10.0, 0],[148.0, 12.0, 0],[148.0, 14.0, 0],[147.0, 15.0, 0],[147.0, 28.0, 0],[146.0, 29.0, 0]];
        VAR pos pos1{120} := [[99.0, 127.0, 0],[98.0, 128.0, 0],[98.0, 129.0, 0],[101.0, 132.0, 0],[102.0, 131.0, 0],[103.0, 131.0, 0],[106.0, 128.0, 0],[107.0, 128.0, 0],[110.0, 125.0, 0],[111.0, 125.0, 0],[114.0, 122.0, 0],[115.0, 122.0, 0],[118.0, 119.0, 0],[119.0, 119.0, 0],[121.0, 117.0, 0],[122.0, 117.0, 0],[125.0, 114.0, 0],[126.0, 114.0, 0],[129.0, 111.0, 0],[130.0, 111.0, 0],[131.0, 110.0, 0],[132.0, 110.0, 0],[134.0, 108.0, 0],[135.0, 108.0, 0],[138.0, 105.0, 0],[139.0, 105.0, 0],[140.0, 104.0, 0],[141.0, 104.0, 0],[142.0, 103.0, 0],[143.0, 103.0, 0],[146.0, 100.0, 0],[147.0, 100.0, 0],[148.0, 99.0, 0],[149.0, 99.0, 0],[151.0, 97.0, 0],[152.0, 97.0, 0],[153.0, 96.0, 0],[154.0, 96.0, 0],[156.0, 94.0, 0],[158.0, 94.0, 0],[159.0, 93.0, 0],[159.0, 92.0, 0],[161.0, 92.0, 0],[164.0, 89.0, 0],[166.0, 89.0, 0],[168.0, 87.0, 0],[169.0, 87.0, 0],[170.0, 86.0, 0],[172.0, 86.0, 0],[175.0, 83.0, 0],[177.0, 83.0, 0],[179.0, 81.0, 0],[180.0, 81.0, 0],[181.0, 80.0, 0],[183.0, 80.0, 0],[184.0, 79.0, 0],[184.0, 78.0, 0],[186.0, 78.0, 0],[187.0, 77.0, 0],[187.0, 76.0, 0],[184.0, 73.0, 0],[182.0, 73.0, 0],[181.0, 74.0, 0],[179.0, 74.0, 0],[177.0, 76.0, 0],[176.0, 76.0, 0],[175.0, 77.0, 0],[173.0, 77.0, 0],[172.0, 78.0, 0],[172.0, 79.0, 0],[170.0, 79.0, 0],[169.0, 80.0, 0],[168.0, 80.0, 0],[166.0, 82.0, 0],[164.0, 82.0, 0],[162.0, 84.0, 0],[161.0, 84.0, 0],[160.0, 85.0, 0],[159.0, 85.0, 0],[156.0, 88.0, 0],[154.0, 88.0, 0],[151.0, 91.0, 0],[150.0, 91.0, 0],[149.0, 92.0, 0],[148.0, 92.0, 0],[147.0, 93.0, 0],[146.0, 93.0, 0],[143.0, 96.0, 0],[141.0, 96.0, 0],[138.0, 99.0, 0],[136.0, 99.0, 0],[135.0, 100.0, 0],[135.0, 101.0, 0],[134.0, 101.0, 0],[133.0, 102.0, 0],[132.0, 102.0, 0],[130.0, 104.0, 0],[129.0, 104.0, 0],[126.0, 107.0, 0],[125.0, 107.0, 0],[124.0, 108.0, 0],[123.0, 108.0, 0],[121.0, 110.0, 0],[120.0, 110.0, 0],[119.0, 111.0, 0],[119.0, 112.0, 0],[118.0, 112.0, 0],[117.0, 113.0, 0],[116.0, 113.0, 0],[113.0, 116.0, 0],[112.0, 116.0, 0],[110.0, 118.0, 0],[109.0, 118.0, 0],[105.0, 122.0, 0],[104.0, 122.0, 0],[102.0, 124.0, 0],[101.0, 124.0, 0],[99.0, 126.0, 0],[99.0, 127.0, 0],[98.0, 128.0, 0]];
        VAR pos pos2{51} := [[78.0, 87.0, 0],[78.0, 89.0, 0],[79.0, 90.0, 0],[80.0, 90.0, 0],[81.0, 91.0, 0],[82.0, 91.0, 0],[83.0, 92.0, 0],[83.0, 93.0, 0],[84.0, 94.0, 0],[84.0, 95.0, 0],[85.0, 96.0, 0],[85.0, 97.0, 0],[90.0, 102.0, 0],[91.0, 102.0, 0],[92.0, 103.0, 0],[93.0, 103.0, 0],[94.0, 104.0, 0],[96.0, 104.0, 0],[97.0, 105.0, 0],[103.0, 105.0, 0],[104.0, 104.0, 0],[105.0, 104.0, 0],[106.0, 103.0, 0],[109.0, 103.0, 0],[112.0, 100.0, 0],[113.0, 100.0, 0],[114.0, 99.0, 0],[114.0, 97.0, 0],[115.0, 97.0, 0],[116.0, 96.0, 0],[116.0, 95.0, 0],[117.0, 94.0, 0],[117.0, 92.0, 0],[118.0, 92.0, 0],[119.0, 91.0, 0],[121.0, 91.0, 0],[122.0, 90.0, 0],[122.0, 87.0, 0],[121.0, 86.0, 0],[118.0, 86.0, 0],[117.0, 87.0, 0],[111.0, 87.0, 0],[110.0, 88.0, 0],[95.0, 88.0, 0],[94.0, 87.0, 0],[86.0, 87.0, 0],[85.0, 86.0, 0],[81.0, 86.0, 0],[80.0, 85.0, 0],[78.0, 87.0, 0],[78.0, 89.0, 0]];
        VAR pos pos3{12} := [[88.0, 92.0, 0],[112.0, 92.0, 0],[112.0, 93.0, 0],[110.0, 95.0, 0],[110.0, 96.0, 0],[109.0, 96.0, 0],[106.0, 99.0, 0],[94.0, 99.0, 0],[89.0, 94.0, 0],[89.0, 93.0, 0],[88.0, 92.0, 0],[112.0, 92.0, 0]];
        VAR pos pos4{46} := [[78.0, 70.0, 0],[77.0, 71.0, 0],[78.0, 72.0, 0],[79.0, 72.0, 0],[80.0, 73.0, 0],[81.0, 72.0, 0],[81.0, 70.0, 0],[82.0, 69.0, 0],[90.0, 69.0, 0],[91.0, 68.0, 0],[113.0, 68.0, 0],[114.0, 69.0, 0],[127.0, 69.0, 0],[127.0, 71.0, 0],[128.0, 72.0, 0],[129.0, 72.0, 0],[130.0, 73.0, 0],[131.0, 72.0, 0],[131.0, 60.0, 0],[130.0, 59.0, 0],[130.0, 47.0, 0],[129.0, 46.0, 0],[129.0, 36.0, 0],[130.0, 35.0, 0],[130.0, 25.0, 0],[129.0, 24.0, 0],[128.0, 24.0, 0],[126.0, 26.0, 0],[126.0, 27.0, 0],[125.0, 28.0, 0],[122.0, 28.0, 0],[121.0, 29.0, 0],[88.0, 29.0, 0],[87.0, 28.0, 0],[85.0, 28.0, 0],[84.0, 27.0, 0],[84.0, 26.0, 0],[82.0, 24.0, 0],[81.0, 24.0, 0],[80.0, 25.0, 0],[80.0, 59.0, 0],[79.0, 60.0, 0],[79.0, 65.0, 0],[78.0, 66.0, 0],[78.0, 70.0, 0],[77.0, 71.0, 0]];
        VAR pos pos5{31} := [[106.0, 35.0, 0],[107.0, 34.0, 0],[107.0, 33.0, 0],[116.0, 33.0, 0],[117.0, 32.0, 0],[125.0, 32.0, 0],[126.0, 33.0, 0],[126.0, 38.0, 0],[125.0, 39.0, 0],[125.0, 45.0, 0],[126.0, 46.0, 0],[126.0, 57.0, 0],[127.0, 58.0, 0],[127.0, 65.0, 0],[110.0, 65.0, 0],[109.0, 64.0, 0],[108.0, 64.0, 0],[107.0, 63.0, 0],[107.0, 60.0, 0],[106.0, 59.0, 0],[106.0, 52.0, 0],[108.0, 50.0, 0],[124.0, 50.0, 0],[125.0, 49.0, 0],[125.0, 48.0, 0],[124.0, 47.0, 0],[119.0, 47.0, 0],[118.0, 46.0, 0],[106.0, 46.0, 0],[106.0, 35.0, 0],[107.0, 34.0, 0]];
        VAR pos pos6{30} := [[83.0, 52.0, 0],[84.0, 51.0, 0],[84.0, 33.0, 0],[85.0, 32.0, 0],[92.0, 32.0, 0],[93.0, 33.0, 0],[102.0, 33.0, 0],[103.0, 34.0, 0],[103.0, 39.0, 0],[102.0, 40.0, 0],[102.0, 43.0, 0],[103.0, 44.0, 0],[103.0, 45.0, 0],[102.0, 46.0, 0],[91.0, 46.0, 0],[90.0, 47.0, 0],[85.0, 47.0, 0],[84.0, 48.0, 0],[84.0, 49.0, 0],[85.0, 50.0, 0],[102.0, 50.0, 0],[102.0, 51.0, 0],[103.0, 52.0, 0],[103.0, 63.0, 0],[102.0, 64.0, 0],[98.0, 64.0, 0],[97.0, 65.0, 0],[83.0, 65.0, 0],[83.0, 52.0, 0],[84.0, 51.0, 0]];
        VAR pos pos7{26} := [[54.0, 69.0, 0],[53.0, 70.0, 0],[53.0, 74.0, 0],[54.0, 75.0, 0],[58.0, 75.0, 0],[59.0, 74.0, 0],[59.0, 71.0, 0],[60.0, 70.0, 0],[60.0, 66.0, 0],[61.0, 65.0, 0],[61.0, 54.0, 0],[62.0, 53.0, 0],[62.0, 45.0, 0],[63.0, 44.0, 0],[63.0, 12.0, 0],[61.0, 10.0, 0],[58.0, 10.0, 0],[57.0, 11.0, 0],[57.0, 45.0, 0],[56.0, 46.0, 0],[56.0, 53.0, 0],[55.0, 54.0, 0],[55.0, 59.0, 0],[54.0, 60.0, 0],[54.0, 69.0, 0],[53.0, 70.0, 0]];
        VAR pos pos8{107} := [[33.0, 68.0, 0],[32.0, 69.0, 0],[32.0, 71.0, 0],[33.0, 72.0, 0],[34.0, 72.0, 0],[37.0, 75.0, 0],[38.0, 75.0, 0],[38.0, 76.0, 0],[42.0, 80.0, 0],[43.0, 80.0, 0],[63.0, 100.0, 0],[63.0, 101.0, 0],[65.0, 103.0, 0],[66.0, 103.0, 0],[66.0, 104.0, 0],[67.0, 105.0, 0],[68.0, 105.0, 0],[68.0, 106.0, 0],[71.0, 109.0, 0],[71.0, 110.0, 0],[72.0, 111.0, 0],[73.0, 111.0, 0],[74.0, 112.0, 0],[74.0, 113.0, 0],[77.0, 116.0, 0],[77.0, 117.0, 0],[79.0, 119.0, 0],[80.0, 119.0, 0],[80.0, 121.0, 0],[81.0, 122.0, 0],[82.0, 122.0, 0],[82.0, 124.0, 0],[83.0, 125.0, 0],[84.0, 125.0, 0],[85.0, 126.0, 0],[85.0, 127.0, 0],[88.0, 130.0, 0],[88.0, 131.0, 0],[89.0, 132.0, 0],[90.0, 132.0, 0],[91.0, 131.0, 0],[92.0, 131.0, 0],[93.0, 130.0, 0],[93.0, 128.0, 0],[92.0, 127.0, 0],[92.0, 125.0, 0],[91.0, 124.0, 0],[90.0, 124.0, 0],[90.0, 123.0, 0],[88.0, 121.0, 0],[88.0, 120.0, 0],[83.0, 115.0, 0],[83.0, 114.0, 0],[81.0, 112.0, 0],[81.0, 111.0, 0],[80.0, 110.0, 0],[79.0, 110.0, 0],[78.0, 109.0, 0],[78.0, 108.0, 0],[74.0, 104.0, 0],[74.0, 103.0, 0],[73.0, 102.0, 0],[72.0, 102.0, 0],[72.0, 101.0, 0],[70.0, 99.0, 0],[69.0, 99.0, 0],[69.0, 98.0, 0],[67.0, 96.0, 0],[67.0, 95.0, 0],[65.0, 93.0, 0],[64.0, 93.0, 0],[64.0, 92.0, 0],[63.0, 91.0, 0],[62.0, 91.0, 0],[61.0, 90.0, 0],[61.0, 89.0, 0],[60.0, 88.0, 0],[59.0, 88.0, 0],[58.0, 87.0, 0],[58.0, 86.0, 0],[57.0, 85.0, 0],[56.0, 85.0, 0],[55.0, 84.0, 0],[55.0, 83.0, 0],[54.0, 82.0, 0],[53.0, 82.0, 0],[53.0, 81.0, 0],[51.0, 79.0, 0],[50.0, 79.0, 0],[50.0, 78.0, 0],[49.0, 77.0, 0],[48.0, 77.0, 0],[47.0, 76.0, 0],[47.0, 75.0, 0],[46.0, 74.0, 0],[44.0, 74.0, 0],[44.0, 73.0, 0],[42.0, 71.0, 0],[41.0, 71.0, 0],[41.0, 70.0, 0],[39.0, 68.0, 0],[38.0, 68.0, 0],[37.0, 67.0, 0],[35.0, 67.0, 0],[34.0, 68.0, 0],[33.0, 68.0, 0],[32.0, 69.0, 0]];
        VAR pos pos9{54} := [[0.0, 2.0, 0],[0.0, 4.0, 0],[2.0, 6.0, 0],[4.0, 6.0, 0],[5.0, 7.0, 0],[10.0, 7.0, 0],[11.0, 8.0, 0],[27.0, 8.0, 0],[28.0, 9.0, 0],[46.0, 9.0, 0],[47.0, 10.0, 0],[71.0, 10.0, 0],[72.0, 9.0, 0],[100.0, 9.0, 0],[101.0, 8.0, 0],[185.0, 8.0, 0],[186.0, 9.0, 0],[193.0, 9.0, 0],[194.0, 10.0, 0],[199.0, 10.0, 0],[200.0, 11.0, 0],[208.0, 11.0, 0],[209.0, 10.0, 0],[209.0, 6.0, 0],[208.0, 5.0, 0],[206.0, 5.0, 0],[205.0, 4.0, 0],[194.0, 4.0, 0],[193.0, 3.0, 0],[185.0, 3.0, 0],[184.0, 2.0, 0],[172.0, 2.0, 0],[171.0, 1.0, 0],[122.0, 1.0, 0],[121.0, 2.0, 0],[117.0, 2.0, 0],[116.0, 1.0, 0],[106.0, 1.0, 0],[105.0, 2.0, 0],[92.0, 2.0, 0],[91.0, 3.0, 0],[70.0, 3.0, 0],[69.0, 4.0, 0],[47.0, 4.0, 0],[46.0, 3.0, 0],[29.0, 3.0, 0],[28.0, 2.0, 0],[19.0, 2.0, 0],[18.0, 1.0, 0],[5.0, 1.0, 0],[4.0, 0.0, 0],[2.0, 0.0, 0],[0.0, 2.0, 0],[0.0, 4.0, 0]];
        
        ! Define variables to be used while drawing
        VAR pos position := [0,0,0];
        VAR robtarget next_target := [[0,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
        ! Update the penup_offset based on the z_offset
        penup_offset := z_offset + penup_offset;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos0{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos0, 1) DO
            position := pos0{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos1{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos1, 1) DO
            position := pos1{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos2{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos2, 1) DO
            position := pos2{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos3{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos3, 1) DO
            position := pos3{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos4{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos4, 1) DO
            position := pos4{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos5{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos5, 1) DO
            position := pos5{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos6{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos6, 1) DO
            position := pos6{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos7{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos7, 1) DO
            position := pos7{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos8{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos8, 1) DO
            position := pos8{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos9{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos9, 1) DO
            position := pos9{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure DrawArtWork_Glasses
    !   This procedure draws my glasses artwork on the work surface
    !   This is mainly used by the Special User function
    !
    ! Example
    !   VAR speeddata approach_speed := v100;  // Approach speed for arm
    !   VAR speeddata write_speed := v80;      // Write speed for arm
    !   VAR num x_offset := 0;                 // x offset from worksurface origin
    !   VAR num y_offset := 0;                 // y offset from worksurface origin
    !   VAR num z_offset := 0;                 // z offset from worksurface origin
    !   VAR num pen_offset := 30;              // Defines pen position for pen up
    !
    !   DrawArtWork_Glasses 1.0, approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
    !
    !***********************************************************
    PROC DrawArtWork_Glasses(num font_size, speeddata approach_speed, speeddata write_speed, num x_offset, num y_offset, num z_offset, num penup_offset)
        ! Define all points for artwork
        VAR pos pos0{233} := [[1.0, 42.0, 0],[0.0, 43.0, 0],[0.0, 47.0, 0],[1.0, 48.0, 0],[1.0, 49.0, 0],[5.0, 53.0, 0],[5.0, 54.0, 0],[9.0, 58.0, 0],[9.0, 59.0, 0],[10.0, 60.0, 0],[10.0, 61.0, 0],[11.0, 62.0, 0],[11.0, 63.0, 0],[12.0, 64.0, 0],[12.0, 65.0, 0],[14.0, 67.0, 0],[14.0, 68.0, 0],[22.0, 76.0, 0],[23.0, 76.0, 0],[24.0, 77.0, 0],[25.0, 77.0, 0],[26.0, 78.0, 0],[27.0, 78.0, 0],[28.0, 79.0, 0],[30.0, 79.0, 0],[31.0, 80.0, 0],[35.0, 80.0, 0],[36.0, 81.0, 0],[41.0, 81.0, 0],[42.0, 82.0, 0],[50.0, 82.0, 0],[51.0, 83.0, 0],[63.0, 83.0, 0],[64.0, 84.0, 0],[65.0, 84.0, 0],[66.0, 83.0, 0],[67.0, 83.0, 0],[68.0, 84.0, 0],[128.0, 84.0, 0],[129.0, 83.0, 0],[130.0, 84.0, 0],[132.0, 84.0, 0],[133.0, 83.0, 0],[134.0, 84.0, 0],[135.0, 84.0, 0],[136.0, 83.0, 0],[162.0, 83.0, 0],[163.0, 82.0, 0],[164.0, 82.0, 0],[165.0, 83.0, 0],[166.0, 82.0, 0],[171.0, 82.0, 0],[172.0, 81.0, 0],[176.0, 81.0, 0],[177.0, 80.0, 0],[180.0, 80.0, 0],[181.0, 79.0, 0],[183.0, 79.0, 0],[184.0, 78.0, 0],[185.0, 78.0, 0],[186.0, 77.0, 0],[187.0, 77.0, 0],[188.0, 76.0, 0],[189.0, 76.0, 0],[197.0, 68.0, 0],[197.0, 67.0, 0],[198.0, 66.0, 0],[198.0, 65.0, 0],[199.0, 64.0, 0],[199.0, 63.0, 0],[200.0, 62.0, 0],[200.0, 61.0, 0],[202.0, 59.0, 0],[202.0, 58.0, 0],[205.0, 55.0, 0],[205.0, 54.0, 0],[209.0, 50.0, 0],[209.0, 48.0, 0],[210.0, 47.0, 0],[210.0, 43.0, 0],[209.0, 42.0, 0],[209.0, 40.0, 0],[202.0, 33.0, 0],[202.0, 32.0, 0],[201.0, 31.0, 0],[201.0, 29.0, 0],[200.0, 28.0, 0],[200.0, 26.0, 0],[199.0, 25.0, 0],[199.0, 24.0, 0],[198.0, 23.0, 0],[198.0, 21.0, 0],[196.0, 19.0, 0],[196.0, 18.0, 0],[195.0, 17.0, 0],[195.0, 16.0, 0],[193.0, 14.0, 0],[193.0, 13.0, 0],[186.0, 6.0, 0],[185.0, 6.0, 0],[183.0, 4.0, 0],[182.0, 4.0, 0],[181.0, 3.0, 0],[180.0, 3.0, 0],[179.0, 2.0, 0],[177.0, 2.0, 0],[176.0, 1.0, 0],[173.0, 1.0, 0],[172.0, 0.0, 0],[163.0, 0.0, 0],[162.0, 1.0, 0],[158.0, 1.0, 0],[157.0, 2.0, 0],[155.0, 2.0, 0],[154.0, 3.0, 0],[153.0, 3.0, 0],[152.0, 4.0, 0],[150.0, 4.0, 0],[148.0, 6.0, 0],[147.0, 6.0, 0],[146.0, 7.0, 0],[145.0, 7.0, 0],[144.0, 8.0, 0],[143.0, 8.0, 0],[140.0, 11.0, 0],[139.0, 11.0, 0],[127.0, 23.0, 0],[127.0, 24.0, 0],[125.0, 26.0, 0],[125.0, 27.0, 0],[123.0, 29.0, 0],[123.0, 30.0, 0],[121.0, 32.0, 0],[121.0, 34.0, 0],[119.0, 36.0, 0],[119.0, 38.0, 0],[118.0, 39.0, 0],[118.0, 40.0, 0],[117.0, 41.0, 0],[117.0, 42.0, 0],[116.0, 43.0, 0],[116.0, 44.0, 0],[115.0, 45.0, 0],[115.0, 47.0, 0],[114.0, 48.0, 0],[114.0, 50.0, 0],[113.0, 51.0, 0],[113.0, 53.0, 0],[112.0, 54.0, 0],[112.0, 56.0, 0],[109.0, 59.0, 0],[102.0, 59.0, 0],[100.0, 57.0, 0],[100.0, 56.0, 0],[99.0, 55.0, 0],[99.0, 53.0, 0],[98.0, 52.0, 0],[98.0, 50.0, 0],[97.0, 49.0, 0],[97.0, 47.0, 0],[96.0, 46.0, 0],[96.0, 44.0, 0],[95.0, 43.0, 0],[95.0, 42.0, 0],[94.0, 41.0, 0],[94.0, 40.0, 0],[93.0, 39.0, 0],[93.0, 38.0, 0],[92.0, 37.0, 0],[92.0, 36.0, 0],[91.0, 35.0, 0],[91.0, 34.0, 0],[90.0, 33.0, 0],[90.0, 32.0, 0],[89.0, 31.0, 0],[89.0, 30.0, 0],[87.0, 28.0, 0],[87.0, 27.0, 0],[85.0, 25.0, 0],[85.0, 24.0, 0],[80.0, 19.0, 0],[80.0, 18.0, 0],[76.0, 14.0, 0],[75.0, 14.0, 0],[71.0, 10.0, 0],[70.0, 10.0, 0],[68.0, 8.0, 0],[67.0, 8.0, 0],[65.0, 6.0, 0],[64.0, 6.0, 0],[63.0, 5.0, 0],[62.0, 5.0, 0],[61.0, 4.0, 0],[60.0, 4.0, 0],[59.0, 3.0, 0],[58.0, 3.0, 0],[57.0, 2.0, 0],[55.0, 2.0, 0],[54.0, 1.0, 0],[51.0, 1.0, 0],[50.0, 0.0, 0],[37.0, 0.0, 0],[36.0, 1.0, 0],[34.0, 1.0, 0],[33.0, 2.0, 0],[31.0, 2.0, 0],[30.0, 3.0, 0],[29.0, 3.0, 0],[28.0, 4.0, 0],[27.0, 4.0, 0],[24.0, 7.0, 0],[23.0, 7.0, 0],[18.0, 12.0, 0],[18.0, 13.0, 0],[15.0, 16.0, 0],[15.0, 17.0, 0],[14.0, 18.0, 0],[14.0, 19.0, 0],[13.0, 20.0, 0],[13.0, 21.0, 0],[12.0, 22.0, 0],[12.0, 23.0, 0],[11.0, 24.0, 0],[11.0, 26.0, 0],[10.0, 27.0, 0],[10.0, 29.0, 0],[9.0, 30.0, 0],[9.0, 31.0, 0],[8.0, 32.0, 0],[8.0, 33.0, 0],[1.0, 40.0, 0],[1.0, 42.0, 0],[0.0, 43.0, 0]];
        VAR pos pos1{108} := [[118.0, 56.0, 0],[119.0, 55.0, 0],[119.0, 52.0, 0],[120.0, 51.0, 0],[120.0, 49.0, 0],[121.0, 48.0, 0],[121.0, 46.0, 0],[122.0, 45.0, 0],[122.0, 44.0, 0],[123.0, 43.0, 0],[123.0, 41.0, 0],[124.0, 40.0, 0],[124.0, 39.0, 0],[125.0, 38.0, 0],[125.0, 37.0, 0],[126.0, 36.0, 0],[126.0, 35.0, 0],[127.0, 34.0, 0],[127.0, 33.0, 0],[129.0, 31.0, 0],[129.0, 30.0, 0],[131.0, 28.0, 0],[131.0, 27.0, 0],[134.0, 24.0, 0],[134.0, 23.0, 0],[141.0, 16.0, 0],[142.0, 16.0, 0],[145.0, 13.0, 0],[146.0, 13.0, 0],[147.0, 12.0, 0],[148.0, 12.0, 0],[150.0, 10.0, 0],[152.0, 10.0, 0],[153.0, 9.0, 0],[154.0, 9.0, 0],[155.0, 8.0, 0],[157.0, 8.0, 0],[158.0, 7.0, 0],[160.0, 7.0, 0],[161.0, 6.0, 0],[175.0, 6.0, 0],[176.0, 7.0, 0],[178.0, 7.0, 0],[179.0, 8.0, 0],[180.0, 8.0, 0],[181.0, 9.0, 0],[182.0, 9.0, 0],[185.0, 12.0, 0],[186.0, 12.0, 0],[188.0, 14.0, 0],[188.0, 15.0, 0],[191.0, 18.0, 0],[191.0, 19.0, 0],[192.0, 20.0, 0],[192.0, 21.0, 0],[193.0, 22.0, 0],[193.0, 23.0, 0],[194.0, 24.0, 0],[194.0, 27.0, 0],[195.0, 28.0, 0],[195.0, 31.0, 0],[196.0, 32.0, 0],[196.0, 54.0, 0],[195.0, 55.0, 0],[195.0, 58.0, 0],[194.0, 59.0, 0],[194.0, 60.0, 0],[193.0, 61.0, 0],[193.0, 62.0, 0],[192.0, 63.0, 0],[192.0, 64.0, 0],[186.0, 70.0, 0],[185.0, 70.0, 0],[184.0, 71.0, 0],[183.0, 71.0, 0],[182.0, 72.0, 0],[181.0, 72.0, 0],[180.0, 73.0, 0],[178.0, 73.0, 0],[177.0, 74.0, 0],[174.0, 74.0, 0],[173.0, 75.0, 0],[169.0, 75.0, 0],[168.0, 76.0, 0],[163.0, 76.0, 0],[162.0, 77.0, 0],[156.0, 77.0, 0],[155.0, 78.0, 0],[152.0, 78.0, 0],[151.0, 77.0, 0],[147.0, 77.0, 0],[146.0, 76.0, 0],[141.0, 76.0, 0],[140.0, 75.0, 0],[136.0, 75.0, 0],[135.0, 74.0, 0],[132.0, 74.0, 0],[131.0, 73.0, 0],[129.0, 73.0, 0],[128.0, 72.0, 0],[126.0, 72.0, 0],[125.0, 71.0, 0],[124.0, 71.0, 0],[119.0, 66.0, 0],[119.0, 64.0, 0],[118.0, 63.0, 0],[118.0, 56.0, 0],[119.0, 55.0, 0]];
        VAR pos pos2{21} := [[156.0, 59.0, 0],[155.0, 60.0, 0],[155.0, 63.0, 0],[156.0, 64.0, 0],[156.0, 65.0, 0],[159.0, 68.0, 0],[165.0, 68.0, 0],[168.0, 65.0, 0],[168.0, 63.0, 0],[169.0, 62.0, 0],[169.0, 59.0, 0],[168.0, 58.0, 0],[167.0, 59.0, 0],[166.0, 59.0, 0],[163.0, 62.0, 0],[161.0, 62.0, 0],[160.0, 61.0, 0],[159.0, 61.0, 0],[157.0, 59.0, 0],[156.0, 59.0, 0],[155.0, 60.0, 0]];
        VAR pos pos3{19} := [[89.0, 77.0, 0],[92.0, 74.0, 0],[92.0, 73.0, 0],[94.0, 71.0, 0],[94.0, 70.0, 0],[98.0, 66.0, 0],[98.0, 65.0, 0],[99.0, 65.0, 0],[100.0, 64.0, 0],[107.0, 64.0, 0],[108.0, 65.0, 0],[111.0, 65.0, 0],[119.0, 73.0, 0],[119.0, 74.0, 0],[122.0, 77.0, 0],[122.0, 78.0, 0],[89.0, 78.0, 0],[89.0, 77.0, 0],[92.0, 74.0, 0]];
        VAR pos pos4{108} := [[14.0, 38.0, 0],[15.0, 37.0, 0],[15.0, 32.0, 0],[16.0, 31.0, 0],[16.0, 28.0, 0],[17.0, 27.0, 0],[17.0, 25.0, 0],[18.0, 24.0, 0],[18.0, 22.0, 0],[19.0, 21.0, 0],[19.0, 20.0, 0],[20.0, 19.0, 0],[20.0, 18.0, 0],[21.0, 17.0, 0],[21.0, 16.0, 0],[27.0, 10.0, 0],[28.0, 10.0, 0],[29.0, 9.0, 0],[30.0, 9.0, 0],[31.0, 8.0, 0],[33.0, 8.0, 0],[34.0, 7.0, 0],[36.0, 7.0, 0],[37.0, 6.0, 0],[50.0, 6.0, 0],[51.0, 7.0, 0],[53.0, 7.0, 0],[54.0, 8.0, 0],[55.0, 8.0, 0],[56.0, 9.0, 0],[58.0, 9.0, 0],[59.0, 10.0, 0],[60.0, 10.0, 0],[62.0, 12.0, 0],[63.0, 12.0, 0],[64.0, 13.0, 0],[65.0, 13.0, 0],[67.0, 15.0, 0],[68.0, 15.0, 0],[73.0, 20.0, 0],[74.0, 20.0, 0],[76.0, 22.0, 0],[76.0, 23.0, 0],[81.0, 28.0, 0],[81.0, 29.0, 0],[83.0, 31.0, 0],[83.0, 32.0, 0],[84.0, 33.0, 0],[84.0, 34.0, 0],[86.0, 36.0, 0],[86.0, 37.0, 0],[87.0, 38.0, 0],[87.0, 39.0, 0],[88.0, 40.0, 0],[88.0, 42.0, 0],[89.0, 43.0, 0],[89.0, 44.0, 0],[90.0, 45.0, 0],[90.0, 47.0, 0],[91.0, 48.0, 0],[91.0, 51.0, 0],[92.0, 52.0, 0],[92.0, 54.0, 0],[93.0, 55.0, 0],[93.0, 65.0, 0],[92.0, 66.0, 0],[92.0, 67.0, 0],[88.0, 71.0, 0],[87.0, 71.0, 0],[86.0, 72.0, 0],[84.0, 72.0, 0],[83.0, 73.0, 0],[81.0, 73.0, 0],[80.0, 74.0, 0],[77.0, 74.0, 0],[76.0, 75.0, 0],[72.0, 75.0, 0],[71.0, 76.0, 0],[67.0, 76.0, 0],[66.0, 77.0, 0],[61.0, 77.0, 0],[60.0, 78.0, 0],[57.0, 78.0, 0],[56.0, 77.0, 0],[48.0, 77.0, 0],[47.0, 76.0, 0],[40.0, 76.0, 0],[39.0, 75.0, 0],[35.0, 75.0, 0],[34.0, 74.0, 0],[32.0, 74.0, 0],[31.0, 73.0, 0],[29.0, 73.0, 0],[28.0, 72.0, 0],[27.0, 72.0, 0],[26.0, 71.0, 0],[25.0, 71.0, 0],[19.0, 65.0, 0],[19.0, 64.0, 0],[17.0, 62.0, 0],[17.0, 60.0, 0],[16.0, 59.0, 0],[16.0, 57.0, 0],[15.0, 56.0, 0],[15.0, 52.0, 0],[14.0, 51.0, 0],[14.0, 38.0, 0],[15.0, 37.0, 0]];
        VAR pos pos5{16} := [[40.0, 59.0, 0],[39.0, 60.0, 0],[39.0, 62.0, 0],[40.0, 63.0, 0],[40.0, 65.0, 0],[43.0, 68.0, 0],[44.0, 68.0, 0],[45.0, 67.0, 0],[47.0, 67.0, 0],[51.0, 63.0, 0],[51.0, 59.0, 0],[49.0, 57.0, 0],[46.0, 60.0, 0],[41.0, 60.0, 0],[40.0, 59.0, 0],[39.0, 60.0, 0]];
        
        ! Define variables to be used while drawing
        VAR pos position := [0,0,0];
        VAR robtarget next_target := [[0,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
        ! Update the penup_offset based on the z_offset
        penup_offset := z_offset + penup_offset;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos0{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos0, 1) DO
            position := pos0{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos1{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos1, 1) DO
            position := pos1{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos2{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos2, 1) DO
            position := pos2{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos3{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos3, 1) DO
            position := pos3{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos4{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos4, 1) DO
            position := pos4{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos5{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos5, 1) DO
            position := pos5{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure DrawArtWork_Glasses
    !   This procedure draws the bottom border artwork on the work surface
    !   This is used by the Special User function
    !
    ! Example
    !   VAR speeddata approach_speed := v100;  // Approach speed for arm
    !   VAR speeddata write_speed := v80;      // Write speed for arm
    !   VAR num x_offset := 0;                 // x offset from worksurface origin
    !   VAR num y_offset := 0;                 // y offset from worksurface origin
    !   VAR num z_offset := 0;                 // z offset from worksurface origin
    !   VAR num pen_offset := 30;              // Defines pen position for pen up
    !
    !   DrawArtWork_ArtBorder 1.0, approach_speed, write_speed, x_offset, y_offset, z_offset, penup_offset;
    !
    !***********************************************************
    PROC DrawArtWork_ArtBorder(num font_size, speeddata approach_speed, speeddata write_speed, num x_offset, num y_offset, num z_offset, num penup_offset)
        ! Define all points for artwork
        VAR pos pos0{117} := [[494.0, 142.0, 0],[493.0, 143.0, 0],[493.0, 172.0, 0],[494.0, 173.0, 0],[497.0, 173.0, 0],[498.0, 174.0, 0],[509.0, 174.0, 0],[510.0, 175.0, 0],[522.0, 175.0, 0],[523.0, 176.0, 0],[534.0, 176.0, 0],[535.0, 177.0, 0],[543.0, 177.0, 0],[544.0, 176.0, 0],[555.0, 176.0, 0],[556.0, 175.0, 0],[567.0, 175.0, 0],[568.0, 174.0, 0],[579.0, 174.0, 0],[580.0, 173.0, 0],[583.0, 173.0, 0],[584.0, 172.0, 0],[584.0, 162.0, 0],[585.0, 161.0, 0],[585.0, 147.0, 0],[584.0, 146.0, 0],[584.0, 136.0, 0],[583.0, 135.0, 0],[583.0, 131.0, 0],[582.0, 130.0, 0],[582.0, 126.0, 0],[581.0, 125.0, 0],[581.0, 120.0, 0],[580.0, 119.0, 0],[580.0, 117.0, 0],[579.0, 116.0, 0],[579.0, 114.0, 0],[578.0, 113.0, 0],[578.0, 112.0, 0],[576.0, 110.0, 0],[576.0, 109.0, 0],[575.0, 108.0, 0],[575.0, 107.0, 0],[574.0, 106.0, 0],[574.0, 105.0, 0],[573.0, 104.0, 0],[573.0, 103.0, 0],[572.0, 102.0, 0],[572.0, 101.0, 0],[570.0, 99.0, 0],[570.0, 98.0, 0],[569.0, 97.0, 0],[569.0, 96.0, 0],[564.0, 91.0, 0],[564.0, 90.0, 0],[561.0, 87.0, 0],[560.0, 87.0, 0],[558.0, 85.0, 0],[558.0, 84.0, 0],[557.0, 83.0, 0],[556.0, 83.0, 0],[553.0, 80.0, 0],[552.0, 80.0, 0],[549.0, 77.0, 0],[548.0, 77.0, 0],[547.0, 76.0, 0],[546.0, 76.0, 0],[545.0, 75.0, 0],[544.0, 75.0, 0],[543.0, 74.0, 0],[542.0, 74.0, 0],[541.0, 73.0, 0],[540.0, 73.0, 0],[539.0, 72.0, 0],[538.0, 73.0, 0],[537.0, 73.0, 0],[536.0, 74.0, 0],[535.0, 74.0, 0],[533.0, 76.0, 0],[531.0, 76.0, 0],[530.0, 77.0, 0],[529.0, 77.0, 0],[527.0, 79.0, 0],[526.0, 79.0, 0],[518.0, 87.0, 0],[517.0, 87.0, 0],[511.0, 93.0, 0],[511.0, 94.0, 0],[510.0, 95.0, 0],[510.0, 96.0, 0],[509.0, 97.0, 0],[509.0, 98.0, 0],[506.0, 101.0, 0],[506.0, 102.0, 0],[504.0, 104.0, 0],[504.0, 105.0, 0],[503.0, 106.0, 0],[503.0, 107.0, 0],[502.0, 108.0, 0],[502.0, 109.0, 0],[501.0, 110.0, 0],[501.0, 111.0, 0],[500.0, 112.0, 0],[500.0, 113.0, 0],[499.0, 114.0, 0],[499.0, 118.0, 0],[498.0, 119.0, 0],[498.0, 121.0, 0],[497.0, 122.0, 0],[497.0, 124.0, 0],[496.0, 125.0, 0],[496.0, 129.0, 0],[495.0, 130.0, 0],[495.0, 134.0, 0],[494.0, 135.0, 0],[494.0, 142.0, 0],[493.0, 143.0, 0]];
        VAR pos pos1{60} := [[524.0, 162.0, 0],[525.0, 161.0, 0],[525.0, 160.0, 0],[526.0, 160.0, 0],[527.0, 159.0, 0],[527.0, 157.0, 0],[528.0, 156.0, 0],[528.0, 152.0, 0],[529.0, 151.0, 0],[529.0, 149.0, 0],[530.0, 149.0, 0],[531.0, 148.0, 0],[532.0, 148.0, 0],[533.0, 147.0, 0],[545.0, 147.0, 0],[546.0, 148.0, 0],[547.0, 148.0, 0],[549.0, 150.0, 0],[549.0, 154.0, 0],[550.0, 155.0, 0],[550.0, 158.0, 0],[552.0, 160.0, 0],[553.0, 160.0, 0],[553.0, 164.0, 0],[552.0, 165.0, 0],[551.0, 165.0, 0],[550.0, 164.0, 0],[550.0, 163.0, 0],[549.0, 162.0, 0],[549.0, 159.0, 0],[548.0, 158.0, 0],[547.0, 158.0, 0],[546.0, 157.0, 0],[545.0, 157.0, 0],[544.0, 158.0, 0],[541.0, 158.0, 0],[540.0, 159.0, 0],[540.0, 164.0, 0],[541.0, 165.0, 0],[540.0, 166.0, 0],[540.0, 168.0, 0],[537.0, 168.0, 0],[537.0, 166.0, 0],[536.0, 165.0, 0],[538.0, 163.0, 0],[538.0, 162.0, 0],[537.0, 161.0, 0],[537.0, 159.0, 0],[536.0, 158.0, 0],[534.0, 158.0, 0],[533.0, 157.0, 0],[531.0, 157.0, 0],[528.0, 160.0, 0],[528.0, 161.0, 0],[529.0, 162.0, 0],[526.0, 165.0, 0],[525.0, 164.0, 0],[524.0, 164.0, 0],[524.0, 162.0, 0],[525.0, 161.0, 0]];
        VAR pos pos2{17} := [[531.0, 149.0, 0],[530.0, 150.0, 0],[530.0, 151.0, 0],[531.0, 152.0, 0],[534.0, 152.0, 0],[535.0, 153.0, 0],[543.0, 153.0, 0],[544.0, 152.0, 0],[546.0, 152.0, 0],[548.0, 150.0, 0],[547.0, 149.0, 0],[546.0, 149.0, 0],[545.0, 148.0, 0],[533.0, 148.0, 0],[532.0, 149.0, 0],[531.0, 149.0, 0],[530.0, 150.0, 0]];
        VAR pos pos3{52} := [[519.0, 91.0, 0],[520.0, 90.0, 0],[521.0, 90.0, 0],[522.0, 91.0, 0],[523.0, 91.0, 0],[524.0, 92.0, 0],[525.0, 92.0, 0],[526.0, 93.0, 0],[527.0, 93.0, 0],[528.0, 92.0, 0],[526.0, 90.0, 0],[527.0, 89.0, 0],[528.0, 89.0, 0],[529.0, 90.0, 0],[529.0, 93.0, 0],[530.0, 94.0, 0],[533.0, 94.0, 0],[534.0, 95.0, 0],[540.0, 95.0, 0],[541.0, 94.0, 0],[543.0, 94.0, 0],[545.0, 96.0, 0],[546.0, 96.0, 0],[548.0, 94.0, 0],[548.0, 90.0, 0],[557.0, 90.0, 0],[557.0, 93.0, 0],[555.0, 95.0, 0],[554.0, 95.0, 0],[553.0, 96.0, 0],[552.0, 96.0, 0],[551.0, 97.0, 0],[549.0, 97.0, 0],[548.0, 98.0, 0],[546.0, 98.0, 0],[545.0, 99.0, 0],[535.0, 99.0, 0],[534.0, 98.0, 0],[531.0, 98.0, 0],[530.0, 97.0, 0],[528.0, 97.0, 0],[527.0, 98.0, 0],[528.0, 99.0, 0],[526.0, 99.0, 0],[526.0, 97.0, 0],[524.0, 95.0, 0],[523.0, 95.0, 0],[521.0, 93.0, 0],[520.0, 93.0, 0],[519.0, 92.0, 0],[519.0, 91.0, 0],[520.0, 90.0, 0]];
        VAR pos pos4{66} := [[512.0, 107.0, 0],[513.0, 106.0, 0],[513.0, 105.0, 0],[515.0, 105.0, 0],[516.0, 106.0, 0],[517.0, 106.0, 0],[518.0, 107.0, 0],[520.0, 107.0, 0],[521.0, 108.0, 0],[522.0, 108.0, 0],[523.0, 107.0, 0],[523.0, 105.0, 0],[524.0, 105.0, 0],[525.0, 106.0, 0],[525.0, 109.0, 0],[526.0, 110.0, 0],[527.0, 110.0, 0],[528.0, 111.0, 0],[534.0, 111.0, 0],[535.0, 112.0, 0],[537.0, 112.0, 0],[538.0, 111.0, 0],[543.0, 111.0, 0],[544.0, 110.0, 0],[545.0, 110.0, 0],[545.0, 111.0, 0],[546.0, 112.0, 0],[550.0, 112.0, 0],[551.0, 111.0, 0],[551.0, 106.0, 0],[552.0, 105.0, 0],[564.0, 105.0, 0],[564.0, 107.0, 0],[560.0, 111.0, 0],[558.0, 111.0, 0],[556.0, 113.0, 0],[555.0, 113.0, 0],[554.0, 114.0, 0],[552.0, 114.0, 0],[551.0, 115.0, 0],[547.0, 115.0, 0],[546.0, 116.0, 0],[535.0, 116.0, 0],[534.0, 115.0, 0],[531.0, 115.0, 0],[530.0, 114.0, 0],[527.0, 114.0, 0],[526.0, 113.0, 0],[524.0, 113.0, 0],[523.0, 114.0, 0],[523.0, 115.0, 0],[524.0, 116.0, 0],[524.0, 117.0, 0],[523.0, 117.0, 0],[523.0, 116.0, 0],[522.0, 115.0, 0],[522.0, 112.0, 0],[521.0, 111.0, 0],[518.0, 111.0, 0],[517.0, 110.0, 0],[515.0, 110.0, 0],[514.0, 109.0, 0],[513.0, 109.0, 0],[512.0, 108.0, 0],[512.0, 107.0, 0],[513.0, 106.0, 0]];
        VAR pos pos5{6} := [[523.0, 107.0, 0],[522.0, 108.0, 0],[523.0, 109.0, 0],[524.0, 108.0, 0],[523.0, 107.0, 0],[522.0, 108.0, 0]];
        VAR pos pos6{74} := [[507.0, 125.0, 0],[508.0, 124.0, 0],[512.0, 124.0, 0],[513.0, 125.0, 0],[515.0, 125.0, 0],[516.0, 126.0, 0],[518.0, 126.0, 0],[519.0, 127.0, 0],[520.0, 127.0, 0],[521.0, 126.0, 0],[521.0, 125.0, 0],[519.0, 123.0, 0],[522.0, 123.0, 0],[522.0, 128.0, 0],[523.0, 129.0, 0],[526.0, 129.0, 0],[527.0, 130.0, 0],[541.0, 130.0, 0],[542.0, 129.0, 0],[545.0, 129.0, 0],[546.0, 128.0, 0],[547.0, 128.0, 0],[549.0, 130.0, 0],[550.0, 130.0, 0],[551.0, 131.0, 0],[552.0, 131.0, 0],[555.0, 128.0, 0],[555.0, 125.0, 0],[554.0, 124.0, 0],[555.0, 124.0, 0],[557.0, 122.0, 0],[558.0, 123.0, 0],[559.0, 122.0, 0],[569.0, 122.0, 0],[570.0, 123.0, 0],[569.0, 124.0, 0],[569.0, 126.0, 0],[564.0, 131.0, 0],[563.0, 131.0, 0],[562.0, 132.0, 0],[561.0, 132.0, 0],[560.0, 133.0, 0],[559.0, 133.0, 0],[558.0, 134.0, 0],[557.0, 134.0, 0],[556.0, 135.0, 0],[548.0, 135.0, 0],[547.0, 136.0, 0],[534.0, 136.0, 0],[533.0, 135.0, 0],[526.0, 135.0, 0],[525.0, 134.0, 0],[523.0, 134.0, 0],[522.0, 133.0, 0],[521.0, 133.0, 0],[520.0, 134.0, 0],[520.0, 135.0, 0],[521.0, 136.0, 0],[522.0, 136.0, 0],[521.0, 137.0, 0],[520.0, 137.0, 0],[518.0, 135.0, 0],[518.0, 132.0, 0],[517.0, 131.0, 0],[515.0, 131.0, 0],[514.0, 130.0, 0],[513.0, 130.0, 0],[511.0, 128.0, 0],[510.0, 128.0, 0],[509.0, 127.0, 0],[508.0, 127.0, 0],[507.0, 126.0, 0],[507.0, 125.0, 0],[508.0, 124.0, 0]];
        VAR pos pos7{36} := [[226.0, 120.0, 0],[225.0, 121.0, 0],[225.0, 163.0, 0],[226.0, 164.0, 0],[238.0, 164.0, 0],[239.0, 163.0, 0],[241.0, 163.0, 0],[242.0, 162.0, 0],[243.0, 162.0, 0],[245.0, 160.0, 0],[246.0, 160.0, 0],[250.0, 156.0, 0],[250.0, 155.0, 0],[252.0, 153.0, 0],[252.0, 151.0, 0],[253.0, 150.0, 0],[253.0, 148.0, 0],[254.0, 147.0, 0],[254.0, 140.0, 0],[253.0, 139.0, 0],[253.0, 137.0, 0],[252.0, 136.0, 0],[252.0, 134.0, 0],[250.0, 132.0, 0],[250.0, 131.0, 0],[246.0, 127.0, 0],[245.0, 127.0, 0],[244.0, 126.0, 0],[245.0, 125.0, 0],[246.0, 125.0, 0],[247.0, 124.0, 0],[248.0, 124.0, 0],[251.0, 121.0, 0],[250.0, 120.0, 0],[226.0, 120.0, 0],[225.0, 121.0, 0]];
        VAR pos pos8{34} := [[226.0, 73.0, 0],[225.0, 74.0, 0],[225.0, 116.0, 0],[226.0, 117.0, 0],[255.0, 117.0, 0],[256.0, 116.0, 0],[256.0, 115.0, 0],[257.0, 114.0, 0],[257.0, 113.0, 0],[259.0, 111.0, 0],[259.0, 109.0, 0],[260.0, 108.0, 0],[260.0, 104.0, 0],[261.0, 103.0, 0],[261.0, 98.0, 0],[260.0, 97.0, 0],[260.0, 93.0, 0],[259.0, 92.0, 0],[259.0, 90.0, 0],[258.0, 89.0, 0],[258.0, 88.0, 0],[256.0, 86.0, 0],[256.0, 85.0, 0],[248.0, 77.0, 0],[247.0, 77.0, 0],[246.0, 76.0, 0],[245.0, 76.0, 0],[244.0, 75.0, 0],[243.0, 75.0, 0],[242.0, 74.0, 0],[240.0, 74.0, 0],[239.0, 73.0, 0],[226.0, 73.0, 0],[225.0, 74.0, 0]];
        VAR pos pos9{10} := [[197.0, 120.0, 0],[196.0, 121.0, 0],[196.0, 163.0, 0],[197.0, 164.0, 0],[222.0, 164.0, 0],[223.0, 163.0, 0],[223.0, 122.0, 0],[221.0, 120.0, 0],[197.0, 120.0, 0],[196.0, 121.0, 0]];
        VAR pos pos10{10} := [[197.0, 73.0, 0],[196.0, 74.0, 0],[196.0, 116.0, 0],[197.0, 117.0, 0],[222.0, 117.0, 0],[223.0, 116.0, 0],[223.0, 74.0, 0],[222.0, 73.0, 0],[197.0, 73.0, 0],[196.0, 74.0, 0]];
        VAR pos pos11{37} := [[155.0, 120.0, 0],[154.0, 121.0, 0],[154.0, 163.0, 0],[155.0, 164.0, 0],[168.0, 164.0, 0],[169.0, 163.0, 0],[170.0, 163.0, 0],[171.0, 162.0, 0],[172.0, 162.0, 0],[173.0, 161.0, 0],[174.0, 161.0, 0],[180.0, 155.0, 0],[180.0, 154.0, 0],[181.0, 153.0, 0],[181.0, 152.0, 0],[182.0, 151.0, 0],[182.0, 149.0, 0],[183.0, 148.0, 0],[183.0, 139.0, 0],[182.0, 138.0, 0],[182.0, 136.0, 0],[181.0, 135.0, 0],[181.0, 134.0, 0],[180.0, 133.0, 0],[180.0, 132.0, 0],[174.0, 126.0, 0],[173.0, 126.0, 0],[174.0, 125.0, 0],[175.0, 125.0, 0],[176.0, 124.0, 0],[177.0, 124.0, 0],[179.0, 122.0, 0],[180.0, 122.0, 0],[181.0, 121.0, 0],[180.0, 120.0, 0],[155.0, 120.0, 0],[154.0, 121.0, 0]];
        VAR pos pos12{38} := [[155.0, 73.0, 0],[154.0, 74.0, 0],[154.0, 116.0, 0],[155.0, 117.0, 0],[184.0, 117.0, 0],[186.0, 115.0, 0],[186.0, 114.0, 0],[187.0, 113.0, 0],[187.0, 112.0, 0],[188.0, 111.0, 0],[188.0, 110.0, 0],[189.0, 109.0, 0],[189.0, 106.0, 0],[190.0, 105.0, 0],[190.0, 96.0, 0],[189.0, 95.0, 0],[189.0, 92.0, 0],[188.0, 91.0, 0],[188.0, 90.0, 0],[187.0, 89.0, 0],[187.0, 88.0, 0],[186.0, 87.0, 0],[186.0, 86.0, 0],[184.0, 84.0, 0],[184.0, 83.0, 0],[180.0, 79.0, 0],[179.0, 79.0, 0],[177.0, 77.0, 0],[176.0, 77.0, 0],[175.0, 76.0, 0],[174.0, 76.0, 0],[173.0, 75.0, 0],[172.0, 75.0, 0],[171.0, 74.0, 0],[169.0, 74.0, 0],[168.0, 73.0, 0],[155.0, 73.0, 0],[154.0, 74.0, 0]];
        VAR pos pos13{10} := [[127.0, 120.0, 0],[126.0, 121.0, 0],[126.0, 163.0, 0],[127.0, 164.0, 0],[151.0, 164.0, 0],[152.0, 163.0, 0],[152.0, 121.0, 0],[151.0, 120.0, 0],[127.0, 120.0, 0],[126.0, 121.0, 0]];
        VAR pos pos14{10} := [[127.0, 73.0, 0],[126.0, 74.0, 0],[126.0, 116.0, 0],[127.0, 117.0, 0],[151.0, 117.0, 0],[152.0, 116.0, 0],[152.0, 74.0, 0],[151.0, 73.0, 0],[127.0, 73.0, 0],[126.0, 74.0, 0]];
        VAR pos pos15{38} := [[77.0, 120.0, 0],[76.0, 121.0, 0],[76.0, 163.0, 0],[77.0, 164.0, 0],[88.0, 164.0, 0],[89.0, 163.0, 0],[89.0, 161.0, 0],[90.0, 160.0, 0],[90.0, 158.0, 0],[91.0, 157.0, 0],[91.0, 156.0, 0],[92.0, 155.0, 0],[92.0, 153.0, 0],[93.0, 152.0, 0],[93.0, 150.0, 0],[94.0, 149.0, 0],[94.0, 147.0, 0],[95.0, 146.0, 0],[95.0, 144.0, 0],[96.0, 143.0, 0],[96.0, 141.0, 0],[97.0, 140.0, 0],[97.0, 138.0, 0],[98.0, 137.0, 0],[98.0, 135.0, 0],[99.0, 134.0, 0],[99.0, 133.0, 0],[100.0, 132.0, 0],[100.0, 130.0, 0],[101.0, 129.0, 0],[101.0, 127.0, 0],[102.0, 126.0, 0],[102.0, 124.0, 0],[103.0, 123.0, 0],[103.0, 121.0, 0],[102.0, 120.0, 0],[77.0, 120.0, 0],[76.0, 121.0, 0]];
        VAR pos pos16{52} := [[77.0, 91.0, 0],[76.0, 92.0, 0],[76.0, 116.0, 0],[77.0, 117.0, 0],[104.0, 117.0, 0],[106.0, 115.0, 0],[106.0, 113.0, 0],[107.0, 112.0, 0],[107.0, 110.0, 0],[108.0, 109.0, 0],[108.0, 107.0, 0],[109.0, 106.0, 0],[109.0, 104.0, 0],[110.0, 103.0, 0],[110.0, 101.0, 0],[111.0, 100.0, 0],[111.0, 99.0, 0],[112.0, 98.0, 0],[112.0, 96.0, 0],[113.0, 95.0, 0],[113.0, 93.0, 0],[114.0, 92.0, 0],[114.0, 90.0, 0],[115.0, 89.0, 0],[115.0, 87.0, 0],[116.0, 86.0, 0],[116.0, 84.0, 0],[117.0, 83.0, 0],[117.0, 81.0, 0],[118.0, 80.0, 0],[118.0, 79.0, 0],[119.0, 78.0, 0],[119.0, 76.0, 0],[120.0, 75.0, 0],[120.0, 74.0, 0],[119.0, 73.0, 0],[97.0, 73.0, 0],[96.0, 74.0, 0],[96.0, 76.0, 0],[95.0, 77.0, 0],[95.0, 79.0, 0],[94.0, 80.0, 0],[94.0, 81.0, 0],[93.0, 82.0, 0],[93.0, 84.0, 0],[92.0, 85.0, 0],[92.0, 87.0, 0],[91.0, 88.0, 0],[91.0, 90.0, 0],[90.0, 91.0, 0],[77.0, 91.0, 0],[76.0, 92.0, 0]];
        VAR pos pos17{39} := [[46.0, 120.0, 0],[45.0, 121.0, 0],[46.0, 122.0, 0],[46.0, 124.0, 0],[47.0, 125.0, 0],[47.0, 127.0, 0],[48.0, 128.0, 0],[48.0, 130.0, 0],[49.0, 131.0, 0],[49.0, 133.0, 0],[50.0, 134.0, 0],[50.0, 135.0, 0],[51.0, 136.0, 0],[51.0, 139.0, 0],[52.0, 140.0, 0],[52.0, 141.0, 0],[53.0, 142.0, 0],[53.0, 144.0, 0],[54.0, 145.0, 0],[54.0, 147.0, 0],[55.0, 148.0, 0],[55.0, 150.0, 0],[56.0, 151.0, 0],[56.0, 153.0, 0],[57.0, 154.0, 0],[57.0, 156.0, 0],[58.0, 157.0, 0],[58.0, 159.0, 0],[59.0, 160.0, 0],[59.0, 161.0, 0],[60.0, 162.0, 0],[60.0, 163.0, 0],[61.0, 164.0, 0],[72.0, 164.0, 0],[73.0, 163.0, 0],[73.0, 121.0, 0],[72.0, 120.0, 0],[46.0, 120.0, 0],[45.0, 121.0, 0]];
        VAR pos pos18{51} := [[30.0, 73.0, 0],[29.0, 74.0, 0],[29.0, 76.0, 0],[30.0, 77.0, 0],[30.0, 79.0, 0],[31.0, 80.0, 0],[31.0, 81.0, 0],[32.0, 82.0, 0],[32.0, 84.0, 0],[33.0, 85.0, 0],[33.0, 87.0, 0],[34.0, 88.0, 0],[34.0, 90.0, 0],[35.0, 91.0, 0],[35.0, 93.0, 0],[36.0, 94.0, 0],[36.0, 95.0, 0],[37.0, 96.0, 0],[37.0, 99.0, 0],[38.0, 100.0, 0],[38.0, 101.0, 0],[39.0, 102.0, 0],[39.0, 104.0, 0],[40.0, 105.0, 0],[40.0, 107.0, 0],[41.0, 108.0, 0],[41.0, 110.0, 0],[42.0, 111.0, 0],[42.0, 113.0, 0],[43.0, 114.0, 0],[43.0, 116.0, 0],[44.0, 117.0, 0],[72.0, 117.0, 0],[73.0, 116.0, 0],[73.0, 92.0, 0],[72.0, 91.0, 0],[58.0, 91.0, 0],[58.0, 89.0, 0],[57.0, 88.0, 0],[57.0, 86.0, 0],[56.0, 85.0, 0],[56.0, 83.0, 0],[55.0, 82.0, 0],[55.0, 81.0, 0],[54.0, 80.0, 0],[54.0, 78.0, 0],[53.0, 77.0, 0],[53.0, 75.0, 0],[51.0, 73.0, 0],[30.0, 73.0, 0],[29.0, 74.0, 0]];
        
        ! Define variables to be used while drawing
        VAR pos position := [0,0,0];
        VAR robtarget next_target := [[0,0,0],[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
        ! Update the penup_offset based on the z_offset
        penup_offset := z_offset + penup_offset;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos0{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos0, 1) DO
            position := pos0{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos1{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos1, 1) DO
            position := pos1{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos2{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos2, 1) DO
            position := pos2{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos3{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos3, 1) DO
            position := pos3{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos4{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos4, 1) DO
            position := pos4{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos5{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos5, 1) DO
            position := pos5{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos6{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos6, 1) DO
            position := pos6{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos7{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos7, 1) DO
            position := pos7{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos8{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos8, 1) DO
            position := pos8{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos9{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos9, 1) DO
            position := pos9{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos10{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos10, 1) DO
            position := pos10{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos11{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos11, 1) DO
            position := pos11{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos12{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos12, 1) DO
            position := pos12{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos13{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos13, 1) DO
            position := pos13{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos14{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos14, 1) DO
            position := pos14{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos15{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos15, 1) DO
            position := pos15{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos16{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos16, 1) DO
            position := pos16{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos17{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos17, 1) DO
            position := pos17{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Raise pen to avoid drawing of surface while moving to the new approach position
        position := pos18{1} * font_size;
        next_target.trans := position;
        MoveJ Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        ! Drop pen
        MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
        FOR index FROM 1 TO Dim(pos18, 1) DO
            position := pos18{index} * font_size;
            next_target.trans := position;
            
            MoveL Offs(next_target, x_offset, y_offset, z_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        ENDFOR
        
        ! Raise pen
        MoveL Offs(next_target, x_offset, y_offset, penup_offset),approach_speed,fine,Alex_Pen_ABB\WObj:=WorkSurface;
        
    ENDPROC
    
    !***********************************************************
    !
    ! Procedure VectorArt
    !   This procedure draws my vector artwork on the work surface
    !
    ! Example
    !
    !   VectorArt;
    !
    !***********************************************************
	PROC VectorArt()
	    MoveL Target_10_Appoach,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_10,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_20,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_30,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_40,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_50,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_60,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_70,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_80,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_90,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_100,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_110,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_120,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_130,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	    MoveL Target_130_Depart,v500,z10,Alex_Pen_ABB\WObj:=WorkSurface;
	ENDPROC
ENDMODULE